// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// This hash contains the features the Payment Element supports.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Customer_session_resource_components_resource_payment_element_resource_features : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A list of [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) values that controls which saved payment methods the Payment Element displays by filtering to only show payment methods with an `allow_redisplay` value that is present in this list.If not specified, defaults to [&quot;always&quot;]. In order to display all saved payment methods, specify [&quot;always&quot;, &quot;limited&quot;, &quot;unspecified&quot;].</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_allow_redisplay_filters?>? PaymentMethodAllowRedisplayFilters { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_allow_redisplay_filters?> PaymentMethodAllowRedisplayFilters { get; set; }
#endif
        /// <summary>Controls whether or not the Payment Element shows saved payment methods. This parameter defaults to `disabled`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_redisplay? PaymentMethodRedisplay { get; set; }
        /// <summary>Determines the max number of saved payment methods for the Payment Element to display. This parameter defaults to `3`. The maximum redisplay limit is `10`.</summary>
        public int? PaymentMethodRedisplayLimit { get; set; }
        /// <summary>Controls whether the Payment Element displays the option to remove a saved payment method. This parameter defaults to `disabled`.Allowing buyers to remove their saved payment methods impacts subscriptions that depend on that payment method. Removing the payment method detaches the [`customer` object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer) from that [PaymentMethod](https://docs.stripe.com/api/payment_methods).</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_remove? PaymentMethodRemove { get; set; }
        /// <summary>Controls whether the Payment Element displays a checkbox offering to save a new payment method. This parameter defaults to `disabled`.If a customer checks the box, the [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) value on the PaymentMethod is set to `&apos;always&apos;` at confirmation time. For PaymentIntents, the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value is also set to the value defined in `payment_method_save_usage`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save? PaymentMethodSave { get; set; }
        /// <summary>When using PaymentIntents and the customer checks the save checkbox, this field determines the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value used to confirm the PaymentIntent.When using SetupIntents, directly configure the [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage) value on SetupIntent creation.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save_usage? PaymentMethodSaveUsage { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features"/> and sets the default values.
        /// </summary>
        public Customer_session_resource_components_resource_payment_element_resource_features()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "payment_method_allow_redisplay_filters", n => { PaymentMethodAllowRedisplayFilters = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_allow_redisplay_filters>()?.AsList(); } },
                { "payment_method_redisplay", n => { PaymentMethodRedisplay = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_redisplay>(); } },
                { "payment_method_redisplay_limit", n => { PaymentMethodRedisplayLimit = n.GetIntValue(); } },
                { "payment_method_remove", n => { PaymentMethodRemove = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_remove>(); } },
                { "payment_method_save", n => { PaymentMethodSave = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save>(); } },
                { "payment_method_save_usage", n => { PaymentMethodSaveUsage = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save_usage>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_allow_redisplay_filters>("payment_method_allow_redisplay_filters", PaymentMethodAllowRedisplayFilters);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_redisplay>("payment_method_redisplay", PaymentMethodRedisplay);
            writer.WriteIntValue("payment_method_redisplay_limit", PaymentMethodRedisplayLimit);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_remove>("payment_method_remove", PaymentMethodRemove);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save>("payment_method_save", PaymentMethodSave);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_session_resource_components_resource_payment_element_resource_features_payment_method_save_usage>("payment_method_save_usage", PaymentMethodSaveUsage);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
