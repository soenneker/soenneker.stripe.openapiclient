// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Treasury_received_credits_resource_linked_flows : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The CreditReversal created as a result of this ReceivedCredit being reversed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreditReversal { get; set; }
#nullable restore
#else
        public string CreditReversal { get; set; }
#endif
        /// <summary>Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuingAuthorization { get; set; }
#nullable restore
#else
        public string IssuingAuthorization { get; set; }
#endif
        /// <summary>Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuingTransaction { get; set; }
#nullable restore
#else
        public string IssuingTransaction { get; set; }
#endif
        /// <summary>ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceFlow { get; set; }
#nullable restore
#else
        public string SourceFlow { get; set; }
#endif
        /// <summary>The expandable object of the source flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details? SourceFlowDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details SourceFlowDetails { get; set; }
#endif
        /// <summary>The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceFlowType { get; set; }
#nullable restore
#else
        public string SourceFlowType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_linked_flows"/> and sets the default values.
        /// </summary>
        public Treasury_received_credits_resource_linked_flows()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_linked_flows"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_linked_flows CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_linked_flows();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "credit_reversal", n => { CreditReversal = n.GetStringValue(); } },
                { "issuing_authorization", n => { IssuingAuthorization = n.GetStringValue(); } },
                { "issuing_transaction", n => { IssuingTransaction = n.GetStringValue(); } },
                { "source_flow", n => { SourceFlow = n.GetStringValue(); } },
                { "source_flow_details", n => { SourceFlowDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details.CreateFromDiscriminatorValue); } },
                { "source_flow_type", n => { SourceFlowType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("credit_reversal", CreditReversal);
            writer.WriteStringValue("issuing_authorization", IssuingAuthorization);
            writer.WriteStringValue("issuing_transaction", IssuingTransaction);
            writer.WriteStringValue("source_flow", SourceFlow);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details>("source_flow_details", SourceFlowDetails);
            writer.WriteStringValue("source_flow_type", SourceFlowType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
