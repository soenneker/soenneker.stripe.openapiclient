// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Forwarding
{
    /// <summary>
    /// Instructs Stripe to make a request on your behalf using the destination URL. The destination URLis activated by Stripe at the time of onboarding. Stripe verifies requests with your credentialsprovided during onboarding, and injects card details from the payment_method into the request.Stripe redacts all sensitive fields and headers, including authentication credentials and card numbers,before storing the request and response data in the forwarding Request object, which are subject to a30-day retention period.You can provide a Stripe idempotency key to make sure that requests with the same key result in only oneoutbound request. The Stripe idempotency key provided should be unique and different from any idempotencykeys provided on the underlying third-party request.Forwarding Requests are synchronous requests that return a response or time out according toStripeâ€™s limits.Related guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Request : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_metadata Metadata { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_object? Object { get; set; }
        /// <summary>The PaymentMethod to insert into the forwarded request. Forwarding previously consumed PaymentMethods is allowed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PaymentMethod { get; set; }
#nullable restore
#else
        public string PaymentMethod { get; set; }
#endif
        /// <summary>The field kinds to be replaced in the forwarded request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_replacements?>? Replacements { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_replacements?> Replacements { get; set; }
#endif
        /// <summary>Context about the request from Stripe&apos;s servers to the destination endpoint.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_context? RequestContext { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_context RequestContext { get; set; }
#endif
        /// <summary>The request that was sent to the destination endpoint. We redact any sensitive fields.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_details? RequestDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_details RequestDetails { get; set; }
#endif
        /// <summary>The response that the destination endpoint returned to us. We redact any sensitive fields.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_response_details? ResponseDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_response_details ResponseDetails { get; set; }
#endif
        /// <summary>The destination URL for the forwarded request. Must be supported by the config.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request"/> and sets the default values.
        /// </summary>
        public Request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created", n => { Created = n.GetIntValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_metadata.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_object>(); } },
                { "payment_method", n => { PaymentMethod = n.GetStringValue(); } },
                { "replacements", n => { Replacements = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_replacements>()?.AsList(); } },
                { "request_context", n => { RequestContext = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_context>(global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_context.CreateFromDiscriminatorValue); } },
                { "request_details", n => { RequestDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_details>(global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_details.CreateFromDiscriminatorValue); } },
                { "response_details", n => { ResponseDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_response_details>(global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_response_details.CreateFromDiscriminatorValue); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_object>("object", Object);
            writer.WriteStringValue("payment_method", PaymentMethod);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Forwarding.Request_replacements>("replacements", Replacements);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_context>("request_context", RequestContext);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_request_details>("request_details", RequestDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Forwarded_response_details>("response_details", ResponseDetails);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
