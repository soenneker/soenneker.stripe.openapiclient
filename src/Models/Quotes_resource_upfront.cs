// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Quotes_resource_upfront : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Total before any discounts or taxes are applied.</summary>
        public int? AmountSubtotal { get; set; }
        /// <summary>Total after discounts and taxes are applied.</summary>
        public int? AmountTotal { get; set; }
        /// <summary>The line items that will appear on the next invoice after this quote is accepted. This does not include pending invoice items that exist on the customer but may still be included in the next invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront_line_items? LineItems { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront_line_items LineItems { get; set; }
#endif
        /// <summary>The total_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details? TotalDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details TotalDetails { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront"/> and sets the default values.
        /// </summary>
        public Quotes_resource_upfront()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount_subtotal", n => { AmountSubtotal = n.GetIntValue(); } },
                { "amount_total", n => { AmountTotal = n.GetIntValue(); } },
                { "line_items", n => { LineItems = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront_line_items>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront_line_items.CreateFromDiscriminatorValue); } },
                { "total_details", n => { TotalDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount_subtotal", AmountSubtotal);
            writer.WriteIntValue("amount_total", AmountTotal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_upfront_line_items>("line_items", LineItems);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details>("total_details", TotalDetails);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
