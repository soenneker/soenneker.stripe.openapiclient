// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// PaymentMethod objects represent your customer&apos;s payment instruments.You can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them toCustomer objects to store instrument details for future payments.Related guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Payment_method : IAdditionalDataHolder, IParsable
    {
        /// <summary>The acss_debit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_acss_debit? AcssDebit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_acss_debit AcssDebit { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The affirm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_affirm? Affirm { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_affirm Affirm { get; set; }
#endif
        /// <summary>The afterpay_clearpay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_afterpay_clearpay? AfterpayClearpay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_afterpay_clearpay AfterpayClearpay { get; set; }
#endif
        /// <summary>The alipay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_flows_private_payment_methods_alipay? Alipay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_flows_private_payment_methods_alipay Alipay { get; set; }
#endif
        /// <summary>This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_allow_redisplay? AllowRedisplay { get; set; }
        /// <summary>The alma property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_alma? Alma { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_alma Alma { get; set; }
#endif
        /// <summary>The amazon_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_amazon_pay? AmazonPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_amazon_pay AmazonPay { get; set; }
#endif
        /// <summary>The au_becs_debit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_au_becs_debit? AuBecsDebit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_au_becs_debit AuBecsDebit { get; set; }
#endif
        /// <summary>The bacs_debit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bacs_debit? BacsDebit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bacs_debit BacsDebit { get; set; }
#endif
        /// <summary>The bancontact property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bancontact? Bancontact { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bancontact Bancontact { get; set; }
#endif
        /// <summary>The billie property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_billie? Billie { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_billie Billie { get; set; }
#endif
        /// <summary>The billing_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Billing_details? BillingDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Billing_details BillingDetails { get; set; }
#endif
        /// <summary>The blik property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_blik? Blik { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_blik Blik { get; set; }
#endif
        /// <summary>The boleto property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_boleto? Boleto { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_boleto Boleto { get; set; }
#endif
        /// <summary>The card property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card? Card { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card Card { get; set; }
#endif
        /// <summary>The card_present property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card_present? CardPresent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card_present CardPresent { get; set; }
#endif
        /// <summary>The cashapp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_cashapp? Cashapp { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_cashapp Cashapp { get; set; }
#endif
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>The crypto property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_crypto? Crypto { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_crypto Crypto { get; set; }
#endif
        /// <summary>The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer? Customer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer Customer { get; set; }
#endif
        /// <summary>The customer_balance property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_customer_balance? CustomerBalance { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_customer_balance CustomerBalance { get; set; }
#endif
        /// <summary>The eps property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_eps? Eps { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_eps Eps { get; set; }
#endif
        /// <summary>The fpx property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_fpx? Fpx { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_fpx Fpx { get; set; }
#endif
        /// <summary>The giropay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_giropay? Giropay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_giropay Giropay { get; set; }
#endif
        /// <summary>The grabpay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_grabpay? Grabpay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_grabpay Grabpay { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The ideal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_ideal? Ideal { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_ideal Ideal { get; set; }
#endif
        /// <summary>The interac_present property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_interac_present? InteracPresent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_interac_present InteracPresent { get; set; }
#endif
        /// <summary>The kakao_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kakao_pay? KakaoPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kakao_pay KakaoPay { get; set; }
#endif
        /// <summary>The klarna property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_klarna? Klarna { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_klarna Klarna { get; set; }
#endif
        /// <summary>The konbini property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_konbini? Konbini { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_konbini Konbini { get; set; }
#endif
        /// <summary>The kr_card property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kr_card? KrCard { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kr_card KrCard { get; set; }
#endif
        /// <summary>The link property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_link? Link { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_link Link { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_metadata Metadata { get; set; }
#endif
        /// <summary>The mobilepay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_mobilepay? Mobilepay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_mobilepay Mobilepay { get; set; }
#endif
        /// <summary>The multibanco property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_multibanco? Multibanco { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_multibanco Multibanco { get; set; }
#endif
        /// <summary>The naver_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_naver_pay? NaverPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_naver_pay NaverPay { get; set; }
#endif
        /// <summary>The nz_bank_account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_nz_bank_account? NzBankAccount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_nz_bank_account NzBankAccount { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_object? Object { get; set; }
        /// <summary>The oxxo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_oxxo? Oxxo { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_oxxo Oxxo { get; set; }
#endif
        /// <summary>The p24 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_p24? P24 { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_p24 P24 { get; set; }
#endif
        /// <summary>The pay_by_bank property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pay_by_bank? PayByBank { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pay_by_bank PayByBank { get; set; }
#endif
        /// <summary>The payco property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_payco? Payco { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_payco Payco { get; set; }
#endif
        /// <summary>The paynow property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paynow? Paynow { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paynow Paynow { get; set; }
#endif
        /// <summary>The paypal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paypal? Paypal { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paypal Paypal { get; set; }
#endif
        /// <summary>The pix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pix? Pix { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pix Pix { get; set; }
#endif
        /// <summary>The promptpay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_promptpay? Promptpay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_promptpay Promptpay { get; set; }
#endif
        /// <summary>Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Radar_radar_options? RadarOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Radar_radar_options RadarOptions { get; set; }
#endif
        /// <summary>The revolut_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_revolut_pay? RevolutPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_revolut_pay RevolutPay { get; set; }
#endif
        /// <summary>The samsung_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_samsung_pay? SamsungPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_samsung_pay SamsungPay { get; set; }
#endif
        /// <summary>The satispay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_satispay? Satispay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_satispay Satispay { get; set; }
#endif
        /// <summary>The sepa_debit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sepa_debit? SepaDebit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sepa_debit SepaDebit { get; set; }
#endif
        /// <summary>The sofort property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sofort? Sofort { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sofort Sofort { get; set; }
#endif
        /// <summary>The swish property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_swish? Swish { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_swish Swish { get; set; }
#endif
        /// <summary>The twint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_twint? Twint { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_twint Twint { get; set; }
#endif
        /// <summary>The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_type? Type { get; set; }
        /// <summary>The us_bank_account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_us_bank_account? UsBankAccount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_us_bank_account UsBankAccount { get; set; }
#endif
        /// <summary>The wechat_pay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_wechat_pay? WechatPay { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_wechat_pay WechatPay { get; set; }
#endif
        /// <summary>The zip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_zip? Zip { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_zip Zip { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/> and sets the default values.
        /// </summary>
        public Payment_method()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_method CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acss_debit", n => { AcssDebit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_acss_debit>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_acss_debit.CreateFromDiscriminatorValue); } },
                { "affirm", n => { Affirm = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_affirm>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_affirm.CreateFromDiscriminatorValue); } },
                { "afterpay_clearpay", n => { AfterpayClearpay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_afterpay_clearpay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_afterpay_clearpay.CreateFromDiscriminatorValue); } },
                { "alipay", n => { Alipay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_flows_private_payment_methods_alipay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_flows_private_payment_methods_alipay.CreateFromDiscriminatorValue); } },
                { "allow_redisplay", n => { AllowRedisplay = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_allow_redisplay>(); } },
                { "alma", n => { Alma = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_alma>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_alma.CreateFromDiscriminatorValue); } },
                { "amazon_pay", n => { AmazonPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_amazon_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_amazon_pay.CreateFromDiscriminatorValue); } },
                { "au_becs_debit", n => { AuBecsDebit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_au_becs_debit>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_au_becs_debit.CreateFromDiscriminatorValue); } },
                { "bacs_debit", n => { BacsDebit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bacs_debit>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bacs_debit.CreateFromDiscriminatorValue); } },
                { "bancontact", n => { Bancontact = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bancontact>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bancontact.CreateFromDiscriminatorValue); } },
                { "billie", n => { Billie = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_billie>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_billie.CreateFromDiscriminatorValue); } },
                { "billing_details", n => { BillingDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Billing_details>(global::Soenneker.Stripe.OpenApiClient.Models.Billing_details.CreateFromDiscriminatorValue); } },
                { "blik", n => { Blik = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_blik>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_blik.CreateFromDiscriminatorValue); } },
                { "boleto", n => { Boleto = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_boleto>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_boleto.CreateFromDiscriminatorValue); } },
                { "card", n => { Card = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card.CreateFromDiscriminatorValue); } },
                { "card_present", n => { CardPresent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card_present>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card_present.CreateFromDiscriminatorValue); } },
                { "cashapp", n => { Cashapp = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_cashapp>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_cashapp.CreateFromDiscriminatorValue); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "crypto", n => { Crypto = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_crypto>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_crypto.CreateFromDiscriminatorValue); } },
                { "customer", n => { Customer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer.CreateFromDiscriminatorValue); } },
                { "customer_balance", n => { CustomerBalance = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_customer_balance>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_customer_balance.CreateFromDiscriminatorValue); } },
                { "eps", n => { Eps = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_eps>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_eps.CreateFromDiscriminatorValue); } },
                { "fpx", n => { Fpx = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_fpx>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_fpx.CreateFromDiscriminatorValue); } },
                { "giropay", n => { Giropay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_giropay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_giropay.CreateFromDiscriminatorValue); } },
                { "grabpay", n => { Grabpay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_grabpay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_grabpay.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "ideal", n => { Ideal = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_ideal>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_ideal.CreateFromDiscriminatorValue); } },
                { "interac_present", n => { InteracPresent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_interac_present>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_interac_present.CreateFromDiscriminatorValue); } },
                { "kakao_pay", n => { KakaoPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kakao_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kakao_pay.CreateFromDiscriminatorValue); } },
                { "klarna", n => { Klarna = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_klarna>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_klarna.CreateFromDiscriminatorValue); } },
                { "konbini", n => { Konbini = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_konbini>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_konbini.CreateFromDiscriminatorValue); } },
                { "kr_card", n => { KrCard = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kr_card>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kr_card.CreateFromDiscriminatorValue); } },
                { "link", n => { Link = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_link>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_link.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_metadata.CreateFromDiscriminatorValue); } },
                { "mobilepay", n => { Mobilepay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_mobilepay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_mobilepay.CreateFromDiscriminatorValue); } },
                { "multibanco", n => { Multibanco = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_multibanco>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_multibanco.CreateFromDiscriminatorValue); } },
                { "naver_pay", n => { NaverPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_naver_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_naver_pay.CreateFromDiscriminatorValue); } },
                { "nz_bank_account", n => { NzBankAccount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_nz_bank_account>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_nz_bank_account.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_object>(); } },
                { "oxxo", n => { Oxxo = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_oxxo>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_oxxo.CreateFromDiscriminatorValue); } },
                { "p24", n => { P24 = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_p24>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_p24.CreateFromDiscriminatorValue); } },
                { "pay_by_bank", n => { PayByBank = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pay_by_bank>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pay_by_bank.CreateFromDiscriminatorValue); } },
                { "payco", n => { Payco = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_payco>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_payco.CreateFromDiscriminatorValue); } },
                { "paynow", n => { Paynow = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paynow>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paynow.CreateFromDiscriminatorValue); } },
                { "paypal", n => { Paypal = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paypal>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paypal.CreateFromDiscriminatorValue); } },
                { "pix", n => { Pix = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pix>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pix.CreateFromDiscriminatorValue); } },
                { "promptpay", n => { Promptpay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_promptpay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_promptpay.CreateFromDiscriminatorValue); } },
                { "radar_options", n => { RadarOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Radar_radar_options>(global::Soenneker.Stripe.OpenApiClient.Models.Radar_radar_options.CreateFromDiscriminatorValue); } },
                { "revolut_pay", n => { RevolutPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_revolut_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_revolut_pay.CreateFromDiscriminatorValue); } },
                { "samsung_pay", n => { SamsungPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_samsung_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_samsung_pay.CreateFromDiscriminatorValue); } },
                { "satispay", n => { Satispay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_satispay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_satispay.CreateFromDiscriminatorValue); } },
                { "sepa_debit", n => { SepaDebit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sepa_debit>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sepa_debit.CreateFromDiscriminatorValue); } },
                { "sofort", n => { Sofort = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sofort>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sofort.CreateFromDiscriminatorValue); } },
                { "swish", n => { Swish = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_swish>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_swish.CreateFromDiscriminatorValue); } },
                { "twint", n => { Twint = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_twint>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_twint.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_type>(); } },
                { "us_bank_account", n => { UsBankAccount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_us_bank_account>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_us_bank_account.CreateFromDiscriminatorValue); } },
                { "wechat_pay", n => { WechatPay = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_wechat_pay>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_wechat_pay.CreateFromDiscriminatorValue); } },
                { "zip", n => { Zip = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_zip>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_zip.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_acss_debit>("acss_debit", AcssDebit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_affirm>("affirm", Affirm);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_afterpay_clearpay>("afterpay_clearpay", AfterpayClearpay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_flows_private_payment_methods_alipay>("alipay", Alipay);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_allow_redisplay>("allow_redisplay", AllowRedisplay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_alma>("alma", Alma);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_amazon_pay>("amazon_pay", AmazonPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_au_becs_debit>("au_becs_debit", AuBecsDebit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bacs_debit>("bacs_debit", BacsDebit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_bancontact>("bancontact", Bancontact);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_billie>("billie", Billie);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Billing_details>("billing_details", BillingDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_blik>("blik", Blik);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_boleto>("boleto", Boleto);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card>("card", Card);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_card_present>("card_present", CardPresent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_cashapp>("cashapp", Cashapp);
            writer.WriteIntValue("created", Created);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_crypto>("crypto", Crypto);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer>("customer", Customer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_customer_balance>("customer_balance", CustomerBalance);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_eps>("eps", Eps);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_fpx>("fpx", Fpx);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_giropay>("giropay", Giropay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_grabpay>("grabpay", Grabpay);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_ideal>("ideal", Ideal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_interac_present>("interac_present", InteracPresent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kakao_pay>("kakao_pay", KakaoPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_klarna>("klarna", Klarna);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_konbini>("konbini", Konbini);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_kr_card>("kr_card", KrCard);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_link>("link", Link);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_mobilepay>("mobilepay", Mobilepay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_multibanco>("multibanco", Multibanco);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_naver_pay>("naver_pay", NaverPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_nz_bank_account>("nz_bank_account", NzBankAccount);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_oxxo>("oxxo", Oxxo);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_p24>("p24", P24);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pay_by_bank>("pay_by_bank", PayByBank);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_payco>("payco", Payco);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paynow>("paynow", Paynow);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_paypal>("paypal", Paypal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_pix>("pix", Pix);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_promptpay>("promptpay", Promptpay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Radar_radar_options>("radar_options", RadarOptions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_revolut_pay>("revolut_pay", RevolutPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_samsung_pay>("samsung_pay", SamsungPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_satispay>("satispay", Satispay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sepa_debit>("sepa_debit", SepaDebit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_sofort>("sofort", Sofort);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_swish>("swish", Swish);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_twint>("twint", Twint);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_type>("type", Type);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_us_bank_account>("us_bank_account", UsBankAccount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_wechat_pay>("wechat_pay", WechatPay);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_zip>("zip", Zip);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Payment_method_customer : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer? Customer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer Customer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.Payment_method_customer();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Customer = new global::Soenneker.Stripe.OpenApiClient.Models.Customer();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Customer != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Customer);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer>(null, Customer);
                }
            }
        }
    }
}
#pragma warning restore CS0618
