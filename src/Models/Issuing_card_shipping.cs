// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Issuing_card_shipping : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Address? Address { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Address Address { get; set; }
#endif
        /// <summary>Address validation details for the shipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_address_validation? AddressValidation { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_address_validation AddressValidation { get; set; }
#endif
        /// <summary>The delivery company that shipped a card.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_carrier? Carrier { get; set; }
        /// <summary>Additional information that may be required for clearing customs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_customs? Customs { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_customs Customs { get; set; }
#endif
        /// <summary>A unix timestamp representing a best estimate of when the card will be delivered.</summary>
        public int? Eta { get; set; }
        /// <summary>Recipient name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The phone number of the receiver of the shipment. Our courier partners will use this number to contact you in the event of card delivery issues. For individual shipments to the EU/UK, if this field is empty, we will provide them with the phone number provided when the cardholder was initially created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>Whether a signature is required for card delivery. This feature is only supported for US users. Standard shipping service does not support signature on delivery. The default value for standard shipping service is false and for express and priority services is true.</summary>
        public bool? RequireSignature { get; set; }
        /// <summary>Shipment service, such as `standard` or `express`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_service? Service { get; set; }
        /// <summary>The delivery status of the card.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_status? Status { get; set; }
        /// <summary>A tracking number for a card shipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackingNumber { get; set; }
#nullable restore
#else
        public string TrackingNumber { get; set; }
#endif
        /// <summary>A link to the shipping carrier&apos;s site where you can view detailed information about a card shipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackingUrl { get; set; }
#nullable restore
#else
        public string TrackingUrl { get; set; }
#endif
        /// <summary>Packaging options.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping"/> and sets the default values.
        /// </summary>
        public Issuing_card_shipping()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>(global::Soenneker.Stripe.OpenApiClient.Models.Address.CreateFromDiscriminatorValue); } },
                { "address_validation", n => { AddressValidation = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_address_validation>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_address_validation.CreateFromDiscriminatorValue); } },
                { "carrier", n => { Carrier = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_carrier>(); } },
                { "customs", n => { Customs = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_customs>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_customs.CreateFromDiscriminatorValue); } },
                { "eta", n => { Eta = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "phone_number", n => { PhoneNumber = n.GetStringValue(); } },
                { "require_signature", n => { RequireSignature = n.GetBoolValue(); } },
                { "service", n => { Service = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_service>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_status>(); } },
                { "tracking_number", n => { TrackingNumber = n.GetStringValue(); } },
                { "tracking_url", n => { TrackingUrl = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>("address", Address);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_address_validation>("address_validation", AddressValidation);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_carrier>("carrier", Carrier);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_customs>("customs", Customs);
            writer.WriteIntValue("eta", Eta);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("phone_number", PhoneNumber);
            writer.WriteBoolValue("require_signature", RequireSignature);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_service>("service", Service);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_status>("status", Status);
            writer.WriteStringValue("tracking_number", TrackingNumber);
            writer.WriteStringValue("tracking_url", TrackingUrl);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_card_shipping_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
