// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// This is an object representing a capability for a Stripe account.Related guide: [Account capabilities](https://stripe.com/docs/connect/account-capabilities)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Capability : IAdditionalDataHolder, IParsable
    {
        /// <summary>The account for which the capability enables functionality.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account? Account { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account Account { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The future_requirements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_future_requirements? FutureRequirements { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_future_requirements FutureRequirements { get; set; }
#endif
        /// <summary>The identifier for the capability.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Capability_object? Object { get; set; }
        /// <summary>Whether the capability has been requested.</summary>
        public bool? Requested { get; set; }
        /// <summary>Time at which the capability was requested. Measured in seconds since the Unix epoch.</summary>
        public int? RequestedAt { get; set; }
        /// <summary>The requirements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_requirements? Requirements { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_requirements Requirements { get; set; }
#endif
        /// <summary>The status of the capability.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Capability_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Capability"/> and sets the default values.
        /// </summary>
        public Capability()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Capability"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Capability CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Capability();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account>(global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account.CreateFromDiscriminatorValue); } },
                { "future_requirements", n => { FutureRequirements = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_future_requirements>(global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_future_requirements.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability_object>(); } },
                { "requested", n => { Requested = n.GetBoolValue(); } },
                { "requested_at", n => { RequestedAt = n.GetIntValue(); } },
                { "requirements", n => { Requirements = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_requirements>(global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_requirements.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account>("account", Account);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_future_requirements>("future_requirements", FutureRequirements);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability_object>("object", Object);
            writer.WriteBoolValue("requested", Requested);
            writer.WriteIntValue("requested_at", RequestedAt);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account_capability_requirements>("requirements", Requirements);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Capability_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Capability_account : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Account? Account { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Account Account { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Capability.Capability_account();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Account = new global::Soenneker.Stripe.OpenApiClient.Models.Account();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Account != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Account);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account>(null, Account);
                }
            }
        }
    }
}
#pragma warning restore CS0618
