// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Source_type_card : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The address_line1_check property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1Check { get; set; }
#nullable restore
#else
        public string AddressLine1Check { get; set; }
#endif
        /// <summary>The address_zip_check property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressZipCheck { get; set; }
#nullable restore
#else
        public string AddressZipCheck { get; set; }
#endif
        /// <summary>The brand property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Brand { get; set; }
#nullable restore
#else
        public string Brand { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The cvc_check property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CvcCheck { get; set; }
#nullable restore
#else
        public string CvcCheck { get; set; }
#endif
        /// <summary>The dynamic_last4 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DynamicLast4 { get; set; }
#nullable restore
#else
        public string DynamicLast4 { get; set; }
#endif
        /// <summary>The exp_month property</summary>
        public int? ExpMonth { get; set; }
        /// <summary>The exp_year property</summary>
        public int? ExpYear { get; set; }
        /// <summary>The fingerprint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Fingerprint { get; set; }
#nullable restore
#else
        public string Fingerprint { get; set; }
#endif
        /// <summary>The funding property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Funding { get; set; }
#nullable restore
#else
        public string Funding { get; set; }
#endif
        /// <summary>The last4 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Last4 { get; set; }
#nullable restore
#else
        public string Last4 { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The three_d_secure property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThreeDSecure { get; set; }
#nullable restore
#else
        public string ThreeDSecure { get; set; }
#endif
        /// <summary>The tokenization_method property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TokenizationMethod { get; set; }
#nullable restore
#else
        public string TokenizationMethod { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Source_type_card"/> and sets the default values.
        /// </summary>
        public Source_type_card()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Source_type_card"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Source_type_card CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Source_type_card();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address_line1_check", n => { AddressLine1Check = n.GetStringValue(); } },
                { "address_zip_check", n => { AddressZipCheck = n.GetStringValue(); } },
                { "brand", n => { Brand = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "cvc_check", n => { CvcCheck = n.GetStringValue(); } },
                { "dynamic_last4", n => { DynamicLast4 = n.GetStringValue(); } },
                { "exp_month", n => { ExpMonth = n.GetIntValue(); } },
                { "exp_year", n => { ExpYear = n.GetIntValue(); } },
                { "fingerprint", n => { Fingerprint = n.GetStringValue(); } },
                { "funding", n => { Funding = n.GetStringValue(); } },
                { "last4", n => { Last4 = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "three_d_secure", n => { ThreeDSecure = n.GetStringValue(); } },
                { "tokenization_method", n => { TokenizationMethod = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("address_line1_check", AddressLine1Check);
            writer.WriteStringValue("address_zip_check", AddressZipCheck);
            writer.WriteStringValue("brand", Brand);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("cvc_check", CvcCheck);
            writer.WriteStringValue("dynamic_last4", DynamicLast4);
            writer.WriteIntValue("exp_month", ExpMonth);
            writer.WriteIntValue("exp_year", ExpYear);
            writer.WriteStringValue("fingerprint", Fingerprint);
            writer.WriteStringValue("funding", Funding);
            writer.WriteStringValue("last4", Last4);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("three_d_secure", ThreeDSecure);
            writer.WriteStringValue("tokenization_method", TokenizationMethod);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
