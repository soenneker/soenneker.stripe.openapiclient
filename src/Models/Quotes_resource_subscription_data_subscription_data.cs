// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Quotes_resource_subscription_data_subscription_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The billing mode of the quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_billing_mode? BillingMode { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_billing_mode BillingMode { get; set; }
#endif
        /// <summary>The subscription&apos;s description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>When creating a new subscription, the date of which the subscription schedule will start after the quote is accepted. This date is ignored if it is in the past when the quote is accepted. Measured in seconds since the Unix epoch.</summary>
        public int? EffectiveDate { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on the subscription or subscription schedule when the quote is accepted. If a recurring price is included in `line_items`, this field will be passed to the resulting subscription&apos;s `metadata` field. If `subscription_data.effective_date` is used, this field will be passed to the resulting subscription schedule&apos;s `phases.metadata` field. Unlike object-level metadata, this field is declarative. Updates will clear prior values.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data_metadata Metadata { get; set; }
#endif
        /// <summary>Integer representing the number of trial period days before the customer is charged for the first time.</summary>
        public int? TrialPeriodDays { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data"/> and sets the default values.
        /// </summary>
        public Quotes_resource_subscription_data_subscription_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "billing_mode", n => { BillingMode = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_billing_mode>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_billing_mode.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "effective_date", n => { EffectiveDate = n.GetIntValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data_metadata.CreateFromDiscriminatorValue); } },
                { "trial_period_days", n => { TrialPeriodDays = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_billing_mode>("billing_mode", BillingMode);
            writer.WriteStringValue("description", Description);
            writer.WriteIntValue("effective_date", EffectiveDate);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data_metadata>("metadata", Metadata);
            writer.WriteIntValue("trial_period_days", TrialPeriodDays);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
