// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`. For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated. A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. A subscription can only enter a `paused` status [when a trial ends without a payment method](https://stripe.com/docs/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn&apos;t generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](https://stripe.com/docs/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription&apos;s status unchanged. If subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings). If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum Subscription_status
    {
        [EnumMember(Value = "active")]
        #pragma warning disable CS1591
        Active,
        #pragma warning restore CS1591
        [EnumMember(Value = "canceled")]
        #pragma warning disable CS1591
        Canceled,
        #pragma warning restore CS1591
        [EnumMember(Value = "incomplete")]
        #pragma warning disable CS1591
        Incomplete,
        #pragma warning restore CS1591
        [EnumMember(Value = "incomplete_expired")]
        #pragma warning disable CS1591
        Incomplete_expired,
        #pragma warning restore CS1591
        [EnumMember(Value = "past_due")]
        #pragma warning disable CS1591
        Past_due,
        #pragma warning restore CS1591
        [EnumMember(Value = "paused")]
        #pragma warning disable CS1591
        Paused,
        #pragma warning restore CS1591
        [EnumMember(Value = "trialing")]
        #pragma warning disable CS1591
        Trialing,
        #pragma warning restore CS1591
        [EnumMember(Value = "unpaid")]
        #pragma warning disable CS1591
        Unpaid,
        #pragma warning restore CS1591
    }
}
