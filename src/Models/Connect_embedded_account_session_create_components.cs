// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Connect_embedded_account_session_create_components : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_management property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim? AccountManagement { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim AccountManagement { get; set; }
#endif
        /// <summary>The account_onboarding property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim? AccountOnboarding { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim AccountOnboarding { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The balances property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config? Balances { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config Balances { get; set; }
#endif
        /// <summary>The disputes_list property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_disputes_list_config? DisputesList { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_disputes_list_config DisputesList { get; set; }
#endif
        /// <summary>The documents property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim? Documents { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim Documents { get; set; }
#endif
        /// <summary>The financial_account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_config_claim? FinancialAccount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_config_claim FinancialAccount { get; set; }
#endif
        /// <summary>The financial_account_transactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_transactions_config_claim? FinancialAccountTransactions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_transactions_config_claim FinancialAccountTransactions { get; set; }
#endif
        /// <summary>The instant_payouts_promotion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_instant_payouts_promotion_config? InstantPayoutsPromotion { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_instant_payouts_promotion_config InstantPayoutsPromotion { get; set; }
#endif
        /// <summary>The issuing_card property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_card_config_claim? IssuingCard { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_card_config_claim IssuingCard { get; set; }
#endif
        /// <summary>The issuing_cards_list property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_cards_list_config_claim? IssuingCardsList { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_cards_list_config_claim IssuingCardsList { get; set; }
#endif
        /// <summary>The notification_banner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim? NotificationBanner { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim NotificationBanner { get; set; }
#endif
        /// <summary>The payment_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim? PaymentDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim PaymentDetails { get; set; }
#endif
        /// <summary>The payment_disputes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payment_disputes_config? PaymentDisputes { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payment_disputes_config PaymentDisputes { get; set; }
#endif
        /// <summary>The payments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim? Payments { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim Payments { get; set; }
#endif
        /// <summary>The payouts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config? Payouts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config Payouts { get; set; }
#endif
        /// <summary>The payouts_list property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim? PayoutsList { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim PayoutsList { get; set; }
#endif
        /// <summary>The tax_registrations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim? TaxRegistrations { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim TaxRegistrations { get; set; }
#endif
        /// <summary>The tax_settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim? TaxSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim TaxSettings { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_session_create_components"/> and sets the default values.
        /// </summary>
        public Connect_embedded_account_session_create_components()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_session_create_components"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_session_create_components CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_session_create_components();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_management", n => { AccountManagement = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim.CreateFromDiscriminatorValue); } },
                { "account_onboarding", n => { AccountOnboarding = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim.CreateFromDiscriminatorValue); } },
                { "balances", n => { Balances = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config.CreateFromDiscriminatorValue); } },
                { "disputes_list", n => { DisputesList = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_disputes_list_config>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_disputes_list_config.CreateFromDiscriminatorValue); } },
                { "documents", n => { Documents = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim.CreateFromDiscriminatorValue); } },
                { "financial_account", n => { FinancialAccount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_config_claim.CreateFromDiscriminatorValue); } },
                { "financial_account_transactions", n => { FinancialAccountTransactions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_transactions_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_transactions_config_claim.CreateFromDiscriminatorValue); } },
                { "instant_payouts_promotion", n => { InstantPayoutsPromotion = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_instant_payouts_promotion_config>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_instant_payouts_promotion_config.CreateFromDiscriminatorValue); } },
                { "issuing_card", n => { IssuingCard = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_card_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_card_config_claim.CreateFromDiscriminatorValue); } },
                { "issuing_cards_list", n => { IssuingCardsList = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_cards_list_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_cards_list_config_claim.CreateFromDiscriminatorValue); } },
                { "notification_banner", n => { NotificationBanner = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim.CreateFromDiscriminatorValue); } },
                { "payment_details", n => { PaymentDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim.CreateFromDiscriminatorValue); } },
                { "payment_disputes", n => { PaymentDisputes = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payment_disputes_config>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payment_disputes_config.CreateFromDiscriminatorValue); } },
                { "payments", n => { Payments = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim.CreateFromDiscriminatorValue); } },
                { "payouts", n => { Payouts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config.CreateFromDiscriminatorValue); } },
                { "payouts_list", n => { PayoutsList = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim.CreateFromDiscriminatorValue); } },
                { "tax_registrations", n => { TaxRegistrations = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim.CreateFromDiscriminatorValue); } },
                { "tax_settings", n => { TaxSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>("account_management", AccountManagement);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>("account_onboarding", AccountOnboarding);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config>("balances", Balances);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_disputes_list_config>("disputes_list", DisputesList);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>("documents", Documents);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_config_claim>("financial_account", FinancialAccount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_financial_account_transactions_config_claim>("financial_account_transactions", FinancialAccountTransactions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_instant_payouts_promotion_config>("instant_payouts_promotion", InstantPayoutsPromotion);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_card_config_claim>("issuing_card", IssuingCard);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_issuing_cards_list_config_claim>("issuing_cards_list", IssuingCardsList);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_account_config_claim>("notification_banner", NotificationBanner);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim>("payment_details", PaymentDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payment_disputes_config>("payment_disputes", PaymentDisputes);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payments_config_claim>("payments", Payments);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_payouts_config>("payouts", Payouts);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>("payouts_list", PayoutsList);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>("tax_registrations", TaxRegistrations);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_embedded_base_config_claim>("tax_settings", TaxSettings);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
