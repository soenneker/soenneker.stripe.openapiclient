// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bank_connections_resource_balance : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The time that the external institution calculated this balance. Measured in seconds since the Unix epoch.</summary>
        public int? AsOf { get; set; }
        /// <summary>The cash property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_cash_balance? Cash { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_cash_balance Cash { get; set; }
#endif
        /// <summary>The credit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_credit_balance? Credit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_credit_balance Credit { get; set; }
#endif
        /// <summary>The balances owed to (or by) the account holder, before subtracting any outbound pending transactions or adding any inbound pending transactions.Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_current? Current { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_current Current { get; set; }
#endif
        /// <summary>The `type` of the balance. An additional hash is included on the balance with a name matching this value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance"/> and sets the default values.
        /// </summary>
        public Bank_connections_resource_balance()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "as_of", n => { AsOf = n.GetIntValue(); } },
                { "cash", n => { Cash = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_cash_balance>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_cash_balance.CreateFromDiscriminatorValue); } },
                { "credit", n => { Credit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_credit_balance>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_credit_balance.CreateFromDiscriminatorValue); } },
                { "current", n => { Current = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_current>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_current.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("as_of", AsOf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_cash_balance>("cash", Cash);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_api_resource_credit_balance>("credit", Credit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_current>("current", Current);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
