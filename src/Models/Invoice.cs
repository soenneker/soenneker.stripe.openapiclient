// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Soenneker.Stripe.OpenApiClient.Models.Test_helpers;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// Invoices are statements of amounts owed by a customer, and are eithergenerated one-off, or generated periodically from a subscription.They contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustmentsthat may be caused by subscription upgrades/downgrades (if necessary).If your invoice is configured to be billed through automatic charges,Stripe automatically finalizes your invoice and attempts payment. Notethat finalizing the invoice,[when automatic](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection), doesnot happen immediately as the invoice is created. Stripe waitsuntil one hour after the last webhook was successfully sent (or the lastwebhook timed out after failing). If you (and the platforms you may haveconnected to) have no webhooks configured, Stripe waits one hour aftercreation to finalize the invoice.If your invoice is configured to be billed by sending an email, then based on your[email settings](https://dashboard.stripe.com/account/billing/automatic),Stripe will email the invoice to your customer and await payment. Theseemails can contain a link to a hosted page to pay the invoice.Stripe applies any customer credit on the account before determining theamount due for the invoice (i.e., the amount that will be actuallycharged). If the amount due for the invoice is less than Stripe&apos;s [minimum allowed chargeper currency](/docs/currencies#minimum-and-maximum-charge-amounts), theinvoice is automatically marked paid, and we add the amount due to thecustomer&apos;s credit balance which is applied to the next invoice.More details on the customer&apos;s credit balance are[here](https://stripe.com/docs/billing/customer/balance).Related guide: [Send invoices to customers](https://stripe.com/docs/billing/invoices/sending)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Invoice : IAdditionalDataHolder, IParsable
    {
        /// <summary>The country of the business associated with this invoice, most often the business creating the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountCountry { get; set; }
#nullable restore
#else
        public string AccountCountry { get; set; }
#endif
        /// <summary>The public name of the business associated with this invoice, most often the business creating the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountName { get; set; }
#nullable restore
#else
        public string AccountName { get; set; }
#endif
        /// <summary>The account tax IDs associated with the invoice. Only editable when the invoice is a draft.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AccountTaxIds { get; set; }
#nullable restore
#else
        public List<string> AccountTaxIds { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Final amount due at this time for this invoice. If the invoice&apos;s total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.</summary>
        public int? AmountDue { get; set; }
        /// <summary>Amount that was overpaid on the invoice. The amount overpaid is credited to the customer&apos;s credit balance.</summary>
        public int? AmountOverpaid { get; set; }
        /// <summary>The amount, in cents (or local equivalent), that was paid.</summary>
        public int? AmountPaid { get; set; }
        /// <summary>The difference between amount_due and amount_paid, in cents (or local equivalent).</summary>
        public int? AmountRemaining { get; set; }
        /// <summary>This is the sum of all the shipping amounts.</summary>
        public int? AmountShipping { get; set; }
        /// <summary>ID of the Connect Application that created the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application? Application { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application Application { get; set; }
#endif
        /// <summary>Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule. If a failure is returned with a non-retryable return code, the invoice can no longer be retried unless a new payment method is obtained. Retries will continue to be scheduled, and attempt_count will continue to increment, but retries will only be executed if a new payment method is obtained.</summary>
        public int? AttemptCount { get; set; }
        /// <summary>Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.</summary>
        public bool? Attempted { get; set; }
        /// <summary>Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice&apos;s state doesn&apos;t automatically advance without an explicit action.</summary>
        public bool? AutoAdvance { get; set; }
        /// <summary>The time when this invoice is currently scheduled to be automatically finalized. The field will be `null` if the invoice is not scheduled to finalize in the future. If the invoice is not in the draft state, this field will always be `null` - see `finalized_at` for the time when an already-finalized invoice was finalized.</summary>
        public int? AutomaticallyFinalizesAt { get; set; }
        /// <summary>The automatic_tax property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Automatic_tax? AutomaticTax { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Automatic_tax AutomaticTax { get; set; }
#endif
        /// <summary>Indicates the reason why the invoice was created.* `manual`: Unrelated to a subscription, for example, created via the invoice editor.* `subscription`: No longer in use. Applies to subscriptions from before May 2018 where no distinction was made between updates, cycles, and thresholds.* `subscription_create`: A new subscription was created.* `subscription_cycle`: A subscription advanced into a new period.* `subscription_threshold`: A subscription reached a billing threshold.* `subscription_update`: A subscription was updated.* `upcoming`: Reserved for simulated invoices, per the upcoming invoice endpoint.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_billing_reason? BillingReason { get; set; }
        /// <summary>Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_collection_method? CollectionMethod { get; set; }
        /// <summary>The confirmation secret associated with this invoice. Currently, this contains the client_secret of the PaymentIntent that Stripe creates during invoice finalization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_confirmation_secret? ConfirmationSecret { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_confirmation_secret ConfirmationSecret { get; set; }
#endif
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The ID of the customer who will be billed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer? Customer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer Customer { get; set; }
#endif
        /// <summary>The customer&apos;s address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Address? CustomerAddress { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Address CustomerAddress { get; set; }
#endif
        /// <summary>The customer&apos;s email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerEmail { get; set; }
#nullable restore
#else
        public string CustomerEmail { get; set; }
#endif
        /// <summary>The customer&apos;s name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerName { get; set; }
#nullable restore
#else
        public string CustomerName { get; set; }
#endif
        /// <summary>The customer&apos;s phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerPhone { get; set; }
#nullable restore
#else
        public string CustomerPhone { get; set; }
#endif
        /// <summary>The customer&apos;s shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Shipping? CustomerShipping { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Shipping CustomerShipping { get; set; }
#endif
        /// <summary>The customer&apos;s tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_customer_tax_exempt? CustomerTaxExempt { get; set; }
        /// <summary>The customer&apos;s tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_tax_id>? CustomerTaxIds { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_tax_id> CustomerTaxIds { get; set; }
#endif
        /// <summary>Custom fields displayed on the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_custom_field>? CustomFields { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_custom_field> CustomFields { get; set; }
#endif
        /// <summary>ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription&apos;s default payment method, if any, or to the default payment method in the customer&apos;s invoice settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method? DefaultPaymentMethod { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method DefaultPaymentMethod { get; set; }
#endif
        /// <summary>ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription&apos;s default source, if any, or to the customer&apos;s default source.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source? DefaultSource { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source DefaultSource { get; set; }
#endif
        /// <summary>The tax rates applied to this invoice, if any.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Tax_rate>? DefaultTaxRates { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Tax_rate> DefaultTaxRates { get; set; }
#endif
        /// <summary>An arbitrary string attached to the object. Often useful for displaying to users. Referenced as &apos;memo&apos; in the Dashboard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Discounts { get; set; }
#nullable restore
#else
        public List<string> Discounts { get; set; }
#endif
        /// <summary>The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.</summary>
        public int? DueDate { get; set; }
        /// <summary>The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated &apos;Date of issue&apos; printed on the invoice PDF and receipt.</summary>
        public int? EffectiveAt { get; set; }
        /// <summary>Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.</summary>
        public int? EndingBalance { get; set; }
        /// <summary>Footer displayed on the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Footer { get; set; }
#nullable restore
#else
        public string Footer { get; set; }
#endif
        /// <summary>Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_from_invoice? FromInvoice { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_from_invoice FromInvoice { get; set; }
#endif
        /// <summary>The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostedInvoiceUrl { get; set; }
#nullable restore
#else
        public string HostedInvoiceUrl { get; set; }
#endif
        /// <summary>Unique identifier for the object. For preview invoices created using the [create preview](https://stripe.com/docs/api/invoices/create_preview) endpoint, this id will be prefixed with `upcoming_in`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoicePdf { get; set; }
#nullable restore
#else
        public string InvoicePdf { get; set; }
#endif
        /// <summary>The issuer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_account_reference? Issuer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Connect_account_reference Issuer { get; set; }
#endif
        /// <summary>The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Api_errors? LastFinalizationError { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Api_errors LastFinalizationError { get; set; }
#endif
        /// <summary>The ID of the most recent non-draft revision of this invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision? LatestRevision { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision LatestRevision { get; set; }
#endif
        /// <summary>The individual line items that make up the invoice. `lines` is sorted as follows: (1) pending invoice items (including prorations) in reverse chronological order, (2) subscription items in reverse chronological order, and (3) invoice items added after invoice creation in chronological order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_lines? Lines { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_lines Lines { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_metadata Metadata { get; set; }
#endif
        /// <summary>The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.</summary>
        public int? NextPaymentAttempt { get; set; }
        /// <summary>A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer&apos;s unique invoice_prefix if it is specified.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_object? Object { get; set; }
        /// <summary>The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of? OnBehalfOf { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of OnBehalfOf { get; set; }
#endif
        /// <summary>The parent that generated this invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_parents_invoice_parent? Parent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_parents_invoice_parent Parent { get; set; }
#endif
        /// <summary>Payments for this invoice</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_payments? Payments { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_payments Payments { get; set; }
#endif
        /// <summary>The payment_settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_payment_settings? PaymentSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_payment_settings PaymentSettings { get; set; }
#endif
        /// <summary>End of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.</summary>
        public int? PeriodEnd { get; set; }
        /// <summary>Start of the usage period during which invoice items were added to this invoice. This looks back one period for a subscription invoice. Use the [line item period](/api/invoices/line_item#invoice_line_item_object-period) to get the service period for each price.</summary>
        public int? PeriodStart { get; set; }
        /// <summary>Total amount of all post-payment credit notes issued for this invoice.</summary>
        public int? PostPaymentCreditNotesAmount { get; set; }
        /// <summary>Total amount of all pre-payment credit notes issued for this invoice.</summary>
        public int? PrePaymentCreditNotesAmount { get; set; }
        /// <summary>This is the transaction number that appears on email receipts sent for this invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReceiptNumber { get; set; }
#nullable restore
#else
        public string ReceiptNumber { get; set; }
#endif
        /// <summary>The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_rendering? Rendering { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_rendering Rendering { get; set; }
#endif
        /// <summary>The details of the cost of shipping, including the ShippingRate applied on the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_shipping_cost? ShippingCost { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_shipping_cost ShippingCost { get; set; }
#endif
        /// <summary>Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Shipping? ShippingDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Shipping ShippingDetails { get; set; }
#endif
        /// <summary>Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. For revision invoices, this also includes any customer balance that was applied to the original invoice.</summary>
        public int? StartingBalance { get; set; }
        /// <summary>Extra information about an invoice for the customer&apos;s credit card statement.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_status? Status { get; set; }
        /// <summary>The status_transitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_status_transitions? StatusTransitions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_status_transitions StatusTransitions { get; set; }
#endif
        /// <summary>Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated</summary>
        public int? Subtotal { get; set; }
        /// <summary>The integer amount in cents (or local equivalent) representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated</summary>
        public int? SubtotalExcludingTax { get; set; }
        /// <summary>ID of the test clock this invoice belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock? TestClock { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock TestClock { get; set; }
#endif
        /// <summary>The threshold_reason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_threshold_reason? ThresholdReason { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_threshold_reason ThresholdReason { get; set; }
#endif
        /// <summary>Total after discounts and taxes.</summary>
        public int? Total { get; set; }
        /// <summary>The aggregate amounts calculated per discount across all line items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Discounts_resource_discount_amount>? TotalDiscountAmounts { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Discounts_resource_discount_amount> TotalDiscountAmounts { get; set; }
#endif
        /// <summary>The integer amount in cents (or local equivalent) representing the total amount of the invoice including all discounts but excluding all tax.</summary>
        public int? TotalExcludingTax { get; set; }
        /// <summary>Contains pretax credit amounts (ex: discount, credit grants, etc) that apply to this invoice. This is a combined list of total_pretax_credit_amounts across all invoice line items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_pretax_credit_amount>? TotalPretaxCreditAmounts { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_pretax_credit_amount> TotalPretaxCreditAmounts { get; set; }
#endif
        /// <summary>The aggregate tax information of all line items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_taxes_tax>? TotalTaxes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_taxes_tax> TotalTaxes { get; set; }
#endif
        /// <summary>Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.</summary>
        public int? WebhooksDeliveredAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/> and sets the default values.
        /// </summary>
        public Invoice()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Invoice();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_country", n => { AccountCountry = n.GetStringValue(); } },
                { "account_name", n => { AccountName = n.GetStringValue(); } },
                { "account_tax_ids", n => { AccountTaxIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "amount_due", n => { AmountDue = n.GetIntValue(); } },
                { "amount_overpaid", n => { AmountOverpaid = n.GetIntValue(); } },
                { "amount_paid", n => { AmountPaid = n.GetIntValue(); } },
                { "amount_remaining", n => { AmountRemaining = n.GetIntValue(); } },
                { "amount_shipping", n => { AmountShipping = n.GetIntValue(); } },
                { "application", n => { Application = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application.CreateFromDiscriminatorValue); } },
                { "attempt_count", n => { AttemptCount = n.GetIntValue(); } },
                { "attempted", n => { Attempted = n.GetBoolValue(); } },
                { "auto_advance", n => { AutoAdvance = n.GetBoolValue(); } },
                { "automatic_tax", n => { AutomaticTax = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Automatic_tax>(global::Soenneker.Stripe.OpenApiClient.Models.Automatic_tax.CreateFromDiscriminatorValue); } },
                { "automatically_finalizes_at", n => { AutomaticallyFinalizesAt = n.GetIntValue(); } },
                { "billing_reason", n => { BillingReason = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_billing_reason>(); } },
                { "collection_method", n => { CollectionMethod = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_collection_method>(); } },
                { "confirmation_secret", n => { ConfirmationSecret = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_confirmation_secret>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_confirmation_secret.CreateFromDiscriminatorValue); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "custom_fields", n => { CustomFields = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_custom_field>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_custom_field.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer.CreateFromDiscriminatorValue); } },
                { "customer_address", n => { CustomerAddress = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>(global::Soenneker.Stripe.OpenApiClient.Models.Address.CreateFromDiscriminatorValue); } },
                { "customer_email", n => { CustomerEmail = n.GetStringValue(); } },
                { "customer_name", n => { CustomerName = n.GetStringValue(); } },
                { "customer_phone", n => { CustomerPhone = n.GetStringValue(); } },
                { "customer_shipping", n => { CustomerShipping = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Shipping>(global::Soenneker.Stripe.OpenApiClient.Models.Shipping.CreateFromDiscriminatorValue); } },
                { "customer_tax_exempt", n => { CustomerTaxExempt = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_customer_tax_exempt>(); } },
                { "customer_tax_ids", n => { CustomerTaxIds = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_tax_id>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_tax_id.CreateFromDiscriminatorValue)?.AsList(); } },
                { "default_payment_method", n => { DefaultPaymentMethod = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method.CreateFromDiscriminatorValue); } },
                { "default_source", n => { DefaultSource = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source.CreateFromDiscriminatorValue); } },
                { "default_tax_rates", n => { DefaultTaxRates = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Tax_rate>(global::Soenneker.Stripe.OpenApiClient.Models.Tax_rate.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "discounts", n => { Discounts = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "due_date", n => { DueDate = n.GetIntValue(); } },
                { "effective_at", n => { EffectiveAt = n.GetIntValue(); } },
                { "ending_balance", n => { EndingBalance = n.GetIntValue(); } },
                { "footer", n => { Footer = n.GetStringValue(); } },
                { "from_invoice", n => { FromInvoice = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_from_invoice>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_from_invoice.CreateFromDiscriminatorValue); } },
                { "hosted_invoice_url", n => { HostedInvoiceUrl = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "invoice_pdf", n => { InvoicePdf = n.GetStringValue(); } },
                { "issuer", n => { Issuer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_account_reference>(global::Soenneker.Stripe.OpenApiClient.Models.Connect_account_reference.CreateFromDiscriminatorValue); } },
                { "last_finalization_error", n => { LastFinalizationError = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Api_errors>(global::Soenneker.Stripe.OpenApiClient.Models.Api_errors.CreateFromDiscriminatorValue); } },
                { "latest_revision", n => { LatestRevision = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision.CreateFromDiscriminatorValue); } },
                { "lines", n => { Lines = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_lines>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_lines.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_metadata.CreateFromDiscriminatorValue); } },
                { "next_payment_attempt", n => { NextPaymentAttempt = n.GetIntValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_object>(); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of.CreateFromDiscriminatorValue); } },
                { "parent", n => { Parent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_parents_invoice_parent>(global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_parents_invoice_parent.CreateFromDiscriminatorValue); } },
                { "payment_settings", n => { PaymentSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_payment_settings>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_payment_settings.CreateFromDiscriminatorValue); } },
                { "payments", n => { Payments = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_payments>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_payments.CreateFromDiscriminatorValue); } },
                { "period_end", n => { PeriodEnd = n.GetIntValue(); } },
                { "period_start", n => { PeriodStart = n.GetIntValue(); } },
                { "post_payment_credit_notes_amount", n => { PostPaymentCreditNotesAmount = n.GetIntValue(); } },
                { "pre_payment_credit_notes_amount", n => { PrePaymentCreditNotesAmount = n.GetIntValue(); } },
                { "receipt_number", n => { ReceiptNumber = n.GetStringValue(); } },
                { "rendering", n => { Rendering = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_rendering>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_rendering.CreateFromDiscriminatorValue); } },
                { "shipping_cost", n => { ShippingCost = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_shipping_cost>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_shipping_cost.CreateFromDiscriminatorValue); } },
                { "shipping_details", n => { ShippingDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Shipping>(global::Soenneker.Stripe.OpenApiClient.Models.Shipping.CreateFromDiscriminatorValue); } },
                { "starting_balance", n => { StartingBalance = n.GetIntValue(); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_status>(); } },
                { "status_transitions", n => { StatusTransitions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_status_transitions>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_status_transitions.CreateFromDiscriminatorValue); } },
                { "subtotal", n => { Subtotal = n.GetIntValue(); } },
                { "subtotal_excluding_tax", n => { SubtotalExcludingTax = n.GetIntValue(); } },
                { "test_clock", n => { TestClock = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock.CreateFromDiscriminatorValue); } },
                { "threshold_reason", n => { ThresholdReason = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_threshold_reason>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_threshold_reason.CreateFromDiscriminatorValue); } },
                { "total", n => { Total = n.GetIntValue(); } },
                { "total_discount_amounts", n => { TotalDiscountAmounts = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Discounts_resource_discount_amount>(global::Soenneker.Stripe.OpenApiClient.Models.Discounts_resource_discount_amount.CreateFromDiscriminatorValue)?.AsList(); } },
                { "total_excluding_tax", n => { TotalExcludingTax = n.GetIntValue(); } },
                { "total_pretax_credit_amounts", n => { TotalPretaxCreditAmounts = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_pretax_credit_amount>(global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_pretax_credit_amount.CreateFromDiscriminatorValue)?.AsList(); } },
                { "total_taxes", n => { TotalTaxes = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_taxes_tax>(global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_taxes_tax.CreateFromDiscriminatorValue)?.AsList(); } },
                { "webhooks_delivered_at", n => { WebhooksDeliveredAt = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_country", AccountCountry);
            writer.WriteStringValue("account_name", AccountName);
            writer.WriteCollectionOfPrimitiveValues<string>("account_tax_ids", AccountTaxIds);
            writer.WriteIntValue("amount_due", AmountDue);
            writer.WriteIntValue("amount_overpaid", AmountOverpaid);
            writer.WriteIntValue("amount_paid", AmountPaid);
            writer.WriteIntValue("amount_remaining", AmountRemaining);
            writer.WriteIntValue("amount_shipping", AmountShipping);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application>("application", Application);
            writer.WriteIntValue("attempt_count", AttemptCount);
            writer.WriteBoolValue("attempted", Attempted);
            writer.WriteBoolValue("auto_advance", AutoAdvance);
            writer.WriteIntValue("automatically_finalizes_at", AutomaticallyFinalizesAt);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Automatic_tax>("automatic_tax", AutomaticTax);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_billing_reason>("billing_reason", BillingReason);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_collection_method>("collection_method", CollectionMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_confirmation_secret>("confirmation_secret", ConfirmationSecret);
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer>("customer", Customer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>("customer_address", CustomerAddress);
            writer.WriteStringValue("customer_email", CustomerEmail);
            writer.WriteStringValue("customer_name", CustomerName);
            writer.WriteStringValue("customer_phone", CustomerPhone);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Shipping>("customer_shipping", CustomerShipping);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_customer_tax_exempt>("customer_tax_exempt", CustomerTaxExempt);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_tax_id>("customer_tax_ids", CustomerTaxIds);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_custom_field>("custom_fields", CustomFields);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method>("default_payment_method", DefaultPaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source>("default_source", DefaultSource);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Tax_rate>("default_tax_rates", DefaultTaxRates);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("discounts", Discounts);
            writer.WriteIntValue("due_date", DueDate);
            writer.WriteIntValue("effective_at", EffectiveAt);
            writer.WriteIntValue("ending_balance", EndingBalance);
            writer.WriteStringValue("footer", Footer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_from_invoice>("from_invoice", FromInvoice);
            writer.WriteStringValue("hosted_invoice_url", HostedInvoiceUrl);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("invoice_pdf", InvoicePdf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Connect_account_reference>("issuer", Issuer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Api_errors>("last_finalization_error", LastFinalizationError);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision>("latest_revision", LatestRevision);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_lines>("lines", Lines);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_metadata>("metadata", Metadata);
            writer.WriteIntValue("next_payment_attempt", NextPaymentAttempt);
            writer.WriteStringValue("number", Number);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of>("on_behalf_of", OnBehalfOf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_parents_invoice_parent>("parent", Parent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_payments>("payments", Payments);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_payment_settings>("payment_settings", PaymentSettings);
            writer.WriteIntValue("period_end", PeriodEnd);
            writer.WriteIntValue("period_start", PeriodStart);
            writer.WriteIntValue("post_payment_credit_notes_amount", PostPaymentCreditNotesAmount);
            writer.WriteIntValue("pre_payment_credit_notes_amount", PrePaymentCreditNotesAmount);
            writer.WriteStringValue("receipt_number", ReceiptNumber);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_invoice_rendering>("rendering", Rendering);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_shipping_cost>("shipping_cost", ShippingCost);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Shipping>("shipping_details", ShippingDetails);
            writer.WriteIntValue("starting_balance", StartingBalance);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_status_transitions>("status_transitions", StatusTransitions);
            writer.WriteIntValue("subtotal", Subtotal);
            writer.WriteIntValue("subtotal_excluding_tax", SubtotalExcludingTax);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock>("test_clock", TestClock);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_threshold_reason>("threshold_reason", ThresholdReason);
            writer.WriteIntValue("total", Total);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Discounts_resource_discount_amount>("total_discount_amounts", TotalDiscountAmounts);
            writer.WriteIntValue("total_excluding_tax", TotalExcludingTax);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Invoices_resource_pretax_credit_amount>("total_pretax_credit_amounts", TotalPretaxCreditAmounts);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Billing_bill_resource_invoicing_taxes_tax>("total_taxes", TotalTaxes);
            writer.WriteIntValue("webhooks_delivered_at", WebhooksDeliveredAt);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_application : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Application? Application { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Application Application { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application? DeletedApplication { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application DeletedApplication { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_application();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Application = new global::Soenneker.Stripe.OpenApiClient.Models.Application();
                    result.DeletedApplication = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Application != null || DeletedApplication != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Application, DeletedApplication);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Application>(null, Application, DeletedApplication);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_customer : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer? Customer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer Customer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer? DeletedCustomer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer DeletedCustomer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_customer();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Customer = new global::Soenneker.Stripe.OpenApiClient.Models.Customer();
                    result.DeletedCustomer = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Customer != null || DeletedCustomer != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Customer, DeletedCustomer);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer>(null, Customer, DeletedCustomer);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_default_payment_method : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method? PaymentMethod { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method PaymentMethod { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_payment_method();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.PaymentMethod = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PaymentMethod != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(PaymentMethod);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method>(null, PaymentMethod);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Bank_account"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Card"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Source"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_default_source : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Bank_account"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Bank_account? BankAccount { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Bank_account BankAccount { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Card"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Card? Card { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Card Card { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Source"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Source? Source { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Source Source { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_default_source();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.BankAccount = new global::Soenneker.Stripe.OpenApiClient.Models.Bank_account();
                    result.Card = new global::Soenneker.Stripe.OpenApiClient.Models.Card();
                    result.Source = new global::Soenneker.Stripe.OpenApiClient.Models.Source();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(BankAccount != null || Card != null || Source != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(BankAccount, Card, Source);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_account>(null, BankAccount, Card, Source);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_latest_revision : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Invoice? Invoice { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Invoice Invoice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_latest_revision();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Invoice = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Invoice != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Invoice);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice>(null, Invoice);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_on_behalf_of : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Account? Account { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Account Account { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_on_behalf_of();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Account = new global::Soenneker.Stripe.OpenApiClient.Models.Account();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Account != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Account);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account>(null, Account);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Invoice_test_clock : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock? TestClock { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock TestClock { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice.Invoice_test_clock();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.TestClock = new global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(TestClock != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(TestClock);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock>(null, TestClock);
                }
            }
        }
    }
}
#pragma warning restore CS0618
