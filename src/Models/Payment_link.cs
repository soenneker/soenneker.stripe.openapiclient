// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// A payment link is a shareable URL that will take your customers to a hosted payment page. A payment link can be shared and used multiple times.When a customer opens a payment link it will open a new [checkout session](https://stripe.com/docs/api/checkout/sessions) to render the payment page. You can use [checkout session events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed) to track payments through payment links.Related guide: [Payment Links API](https://stripe.com/docs/payment-links)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Payment_link : IAdditionalDataHolder, IParsable
    {
        /// <summary>Whether the payment link&apos;s `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The after_completion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_after_completion? AfterCompletion { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_after_completion AfterCompletion { get; set; }
#endif
        /// <summary>Whether user redeemable promotion codes are enabled.</summary>
        public bool? AllowPromotionCodes { get; set; }
        /// <summary>The ID of the Connect application that created the Payment Link.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application? Application { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application Application { get; set; }
#endif
        /// <summary>The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner&apos;s Stripe account.</summary>
        public int? ApplicationFeeAmount { get; set; }
        /// <summary>This represents the percentage of the subscription invoice total that will be transferred to the application owner&apos;s Stripe account.</summary>
        public double? ApplicationFeePercent { get; set; }
        /// <summary>The automatic_tax property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_automatic_tax? AutomaticTax { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_automatic_tax AutomaticTax { get; set; }
#endif
        /// <summary>Configuration for collecting the customer&apos;s billing address. Defaults to `auto`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_billing_address_collection? BillingAddressCollection { get; set; }
        /// <summary>When set, provides configuration to gather active consent from customers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_consent_collection? ConsentCollection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_consent_collection ConsentCollection { get; set; }
#endif
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Configuration for Customer creation during checkout.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_customer_creation? CustomerCreation { get; set; }
        /// <summary>Collect additional information from your customer using custom fields. Up to 3 fields are supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_fields>? CustomFields { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_fields> CustomFields { get; set; }
#endif
        /// <summary>The custom_text property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_text? CustomText { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_text CustomText { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The custom message to be displayed to a customer when a payment link is no longer active.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InactiveMessage { get; set; }
#nullable restore
#else
        public string InactiveMessage { get; set; }
#endif
        /// <summary>Configuration for creating invoice for payment mode payment links.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_invoice_creation? InvoiceCreation { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_invoice_creation InvoiceCreation { get; set; }
#endif
        /// <summary>The line items representing what is being sold.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_line_items? LineItems { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_line_items LineItems { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_metadata Metadata { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_object? Object { get; set; }
        /// <summary>The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of? OnBehalfOf { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of OnBehalfOf { get; set; }
#endif
        /// <summary>The optional items presented to the customer at checkout.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_optional_item>? OptionalItems { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_optional_item> OptionalItems { get; set; }
#endif
        /// <summary>Indicates the parameters to be passed to PaymentIntent creation during checkout.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_payment_intent_data? PaymentIntentData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_payment_intent_data PaymentIntentData { get; set; }
#endif
        /// <summary>Configuration for collecting a payment method during checkout. Defaults to `always`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_collection? PaymentMethodCollection { get; set; }
        /// <summary>The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you&apos;ve enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_types?>? PaymentMethodTypes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_types?> PaymentMethodTypes { get; set; }
#endif
        /// <summary>The phone_number_collection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_phone_number_collection? PhoneNumberCollection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_phone_number_collection PhoneNumberCollection { get; set; }
#endif
        /// <summary>Settings that restrict the usage of a payment link.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_restrictions? Restrictions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_restrictions Restrictions { get; set; }
#endif
        /// <summary>Configuration for collecting the customer&apos;s shipping address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_address_collection? ShippingAddressCollection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_address_collection ShippingAddressCollection { get; set; }
#endif
        /// <summary>The shipping rate options applied to the session.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_option>? ShippingOptions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_option> ShippingOptions { get; set; }
#endif
        /// <summary>Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_submit_type? SubmitType { get; set; }
        /// <summary>When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_subscription_data? SubscriptionData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_subscription_data SubscriptionData { get; set; }
#endif
        /// <summary>The tax_id_collection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_tax_id_collection? TaxIdCollection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_tax_id_collection TaxIdCollection { get; set; }
#endif
        /// <summary>The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_transfer_data? TransferData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_transfer_data TransferData { get; set; }
#endif
        /// <summary>The public URL that can be shared with customers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_link"/> and sets the default values.
        /// </summary>
        public Payment_link()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_link"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_link CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Payment_link();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "after_completion", n => { AfterCompletion = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_after_completion>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_after_completion.CreateFromDiscriminatorValue); } },
                { "allow_promotion_codes", n => { AllowPromotionCodes = n.GetBoolValue(); } },
                { "application", n => { Application = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application.CreateFromDiscriminatorValue); } },
                { "application_fee_amount", n => { ApplicationFeeAmount = n.GetIntValue(); } },
                { "application_fee_percent", n => { ApplicationFeePercent = n.GetDoubleValue(); } },
                { "automatic_tax", n => { AutomaticTax = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_automatic_tax>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_automatic_tax.CreateFromDiscriminatorValue); } },
                { "billing_address_collection", n => { BillingAddressCollection = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_billing_address_collection>(); } },
                { "consent_collection", n => { ConsentCollection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_consent_collection>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_consent_collection.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "custom_fields", n => { CustomFields = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_fields>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_fields.CreateFromDiscriminatorValue)?.AsList(); } },
                { "custom_text", n => { CustomText = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_text>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_text.CreateFromDiscriminatorValue); } },
                { "customer_creation", n => { CustomerCreation = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_customer_creation>(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "inactive_message", n => { InactiveMessage = n.GetStringValue(); } },
                { "invoice_creation", n => { InvoiceCreation = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_invoice_creation>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_invoice_creation.CreateFromDiscriminatorValue); } },
                { "line_items", n => { LineItems = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_line_items>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_line_items.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_metadata.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_object>(); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of.CreateFromDiscriminatorValue); } },
                { "optional_items", n => { OptionalItems = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_optional_item>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_optional_item.CreateFromDiscriminatorValue)?.AsList(); } },
                { "payment_intent_data", n => { PaymentIntentData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_payment_intent_data>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_payment_intent_data.CreateFromDiscriminatorValue); } },
                { "payment_method_collection", n => { PaymentMethodCollection = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_collection>(); } },
                { "payment_method_types", n => { PaymentMethodTypes = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_types>()?.AsList(); } },
                { "phone_number_collection", n => { PhoneNumberCollection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_phone_number_collection>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_phone_number_collection.CreateFromDiscriminatorValue); } },
                { "restrictions", n => { Restrictions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_restrictions>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_restrictions.CreateFromDiscriminatorValue); } },
                { "shipping_address_collection", n => { ShippingAddressCollection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_address_collection>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_address_collection.CreateFromDiscriminatorValue); } },
                { "shipping_options", n => { ShippingOptions = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_option>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_option.CreateFromDiscriminatorValue)?.AsList(); } },
                { "submit_type", n => { SubmitType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_submit_type>(); } },
                { "subscription_data", n => { SubscriptionData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_subscription_data>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_subscription_data.CreateFromDiscriminatorValue); } },
                { "tax_id_collection", n => { TaxIdCollection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_tax_id_collection>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_tax_id_collection.CreateFromDiscriminatorValue); } },
                { "transfer_data", n => { TransferData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_transfer_data>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_transfer_data.CreateFromDiscriminatorValue); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_after_completion>("after_completion", AfterCompletion);
            writer.WriteBoolValue("allow_promotion_codes", AllowPromotionCodes);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application>("application", Application);
            writer.WriteIntValue("application_fee_amount", ApplicationFeeAmount);
            writer.WriteDoubleValue("application_fee_percent", ApplicationFeePercent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_automatic_tax>("automatic_tax", AutomaticTax);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_billing_address_collection>("billing_address_collection", BillingAddressCollection);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_consent_collection>("consent_collection", ConsentCollection);
            writer.WriteStringValue("currency", Currency);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_customer_creation>("customer_creation", CustomerCreation);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_fields>("custom_fields", CustomFields);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_custom_text>("custom_text", CustomText);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("inactive_message", InactiveMessage);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_invoice_creation>("invoice_creation", InvoiceCreation);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_line_items>("line_items", LineItems);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of>("on_behalf_of", OnBehalfOf);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_optional_item>("optional_items", OptionalItems);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_payment_intent_data>("payment_intent_data", PaymentIntentData);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_collection>("payment_method_collection", PaymentMethodCollection);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_payment_method_types>("payment_method_types", PaymentMethodTypes);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_phone_number_collection>("phone_number_collection", PhoneNumberCollection);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_restrictions>("restrictions", Restrictions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_address_collection>("shipping_address_collection", ShippingAddressCollection);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_shipping_option>("shipping_options", ShippingOptions);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_link_submit_type>("submit_type", SubmitType);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_subscription_data>("subscription_data", SubscriptionData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_tax_id_collection>("tax_id_collection", TaxIdCollection);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_links_resource_transfer_data>("transfer_data", TransferData);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Payment_link_application : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Application? Application { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Application Application { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application? DeletedApplication { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application DeletedApplication { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_application();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Application = new global::Soenneker.Stripe.OpenApiClient.Models.Application();
                    result.DeletedApplication = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Application != null || DeletedApplication != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Application, DeletedApplication);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Application>(null, Application, DeletedApplication);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Payment_link_on_behalf_of : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Account? Account { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Account Account { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_link.Payment_link_on_behalf_of();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Account = new global::Soenneker.Stripe.OpenApiClient.Models.Account();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Account != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Account);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account>(null, Account);
                }
            }
        }
    }
}
#pragma warning restore CS0618
