// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Financial_connections
{
    /// <summary>
    /// A Financial Connections Account represents an account that exists outside of Stripe, to which you have been granted some degree of access.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Account : IAdditionalDataHolder, IParsable
    {
        /// <summary>The account holder that this account belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_accountholder? AccountHolder { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_accountholder AccountHolder { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The most recent information about the account&apos;s balance.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance? Balance { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance Balance { get; set; }
#endif
        /// <summary>The state of the most recent attempt to refresh the account balance.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_refresh? BalanceRefresh { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_refresh BalanceRefresh { get; set; }
#endif
        /// <summary>The type of the account. Account category is further divided in `subcategory`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_category? Category { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>A human-readable name that has been assigned to this account, either by the account holder or by the institution.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name of the institution that holds this account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InstitutionName { get; set; }
#nullable restore
#else
        public string InstitutionName { get; set; }
#endif
        /// <summary>The last 4 digits of the account number. If present, this will be 4 numeric characters.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Last4 { get; set; }
#nullable restore
#else
        public string Last4 { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_object? Object { get; set; }
        /// <summary>The most recent information about the account&apos;s owners.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership? Ownership { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership Ownership { get; set; }
#endif
        /// <summary>The state of the most recent attempt to refresh the account owners.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_ownership_refresh? OwnershipRefresh { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_ownership_refresh OwnershipRefresh { get; set; }
#endif
        /// <summary>The list of permissions granted by this account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_permissions?>? Permissions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_permissions?> Permissions { get; set; }
#endif
        /// <summary>The status of the link to the account.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_status? Status { get; set; }
        /// <summary>If `category` is `cash`, one of: - `checking` - `savings` - `other`If `category` is `credit`, one of: - `mortgage` - `line_of_credit` - `credit_card` - `other`If `category` is `investment` or `other`, this will be `other`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subcategory? Subcategory { get; set; }
        /// <summary>The list of data refresh subscriptions requested on this account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subscriptions?>? Subscriptions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subscriptions?> Subscriptions { get; set; }
#endif
        /// <summary>The [PaymentMethod type](https://stripe.com/docs/api/payment_methods/object#payment_method_object-type)(s) that can be created from this account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_supported_payment_method_types?>? SupportedPaymentMethodTypes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_supported_payment_method_types?> SupportedPaymentMethodTypes { get; set; }
#endif
        /// <summary>The state of the most recent attempt to refresh the account transactions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_transaction_refresh? TransactionRefresh { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_transaction_refresh TransactionRefresh { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account"/> and sets the default values.
        /// </summary>
        public Account()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_holder", n => { AccountHolder = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_accountholder>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_accountholder.CreateFromDiscriminatorValue); } },
                { "balance", n => { Balance = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance.CreateFromDiscriminatorValue); } },
                { "balance_refresh", n => { BalanceRefresh = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_refresh>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_refresh.CreateFromDiscriminatorValue); } },
                { "category", n => { Category = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_category>(); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "institution_name", n => { InstitutionName = n.GetStringValue(); } },
                { "last4", n => { Last4 = n.GetStringValue(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_object>(); } },
                { "ownership", n => { Ownership = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership>(global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership.CreateFromDiscriminatorValue); } },
                { "ownership_refresh", n => { OwnershipRefresh = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_ownership_refresh>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_ownership_refresh.CreateFromDiscriminatorValue); } },
                { "permissions", n => { Permissions = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_permissions>()?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_status>(); } },
                { "subcategory", n => { Subcategory = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subcategory>(); } },
                { "subscriptions", n => { Subscriptions = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subscriptions>()?.AsList(); } },
                { "supported_payment_method_types", n => { SupportedPaymentMethodTypes = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_supported_payment_method_types>()?.AsList(); } },
                { "transaction_refresh", n => { TransactionRefresh = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_transaction_refresh>(global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_transaction_refresh.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_accountholder>("account_holder", AccountHolder);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance>("balance", Balance);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_balance_refresh>("balance_refresh", BalanceRefresh);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_category>("category", Category);
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("institution_name", InstitutionName);
            writer.WriteStringValue("last4", Last4);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership>("ownership", Ownership);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_ownership_refresh>("ownership_refresh", OwnershipRefresh);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_permissions>("permissions", Permissions);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_status>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subcategory>("subcategory", Subcategory);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_subscriptions>("subscriptions", Subscriptions);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_supported_payment_method_types>("supported_payment_method_types", SupportedPaymentMethodTypes);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Bank_connections_resource_transaction_refresh>("transaction_refresh", TransactionRefresh);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Account_ownership : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership? AccountOwnership { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership AccountOwnership { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account.Account_ownership();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.AccountOwnership = new global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AccountOwnership != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(AccountOwnership);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Financial_connections.Account_ownership>(null, AccountOwnership);
                }
            }
        }
    }
}
#pragma warning restore CS0618
