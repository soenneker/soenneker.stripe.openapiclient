// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Setup_intent_next_action_verify_with_microdeposits : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The timestamp when the microdeposits are expected to land.</summary>
        public int? ArrivalDate { get; set; }
        /// <summary>The URL for the hosted verification page, which allows customers to verify their bank account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostedVerificationUrl { get; set; }
#nullable restore
#else
        public string HostedVerificationUrl { get; set; }
#endif
        /// <summary>The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits_microdeposit_type? MicrodepositType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits"/> and sets the default values.
        /// </summary>
        public Setup_intent_next_action_verify_with_microdeposits()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "arrival_date", n => { ArrivalDate = n.GetIntValue(); } },
                { "hosted_verification_url", n => { HostedVerificationUrl = n.GetStringValue(); } },
                { "microdeposit_type", n => { MicrodepositType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits_microdeposit_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("arrival_date", ArrivalDate);
            writer.WriteStringValue("hosted_verification_url", HostedVerificationUrl);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits_microdeposit_type>("microdeposit_type", MicrodepositType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
