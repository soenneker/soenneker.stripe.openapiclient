// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// Represents a per-transaction override of a reader configuration
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Terminal_reader_reader_resource_process_config : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Enable customer-initiated cancellation when processing this payment.</summary>
        public bool? EnableCustomerCancellation { get; set; }
        /// <summary>If the customer doesn&apos;t abandon authenticating the payment, they&apos;re redirected to this URL after completion.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnUrl { get; set; }
#nullable restore
#else
        public string ReturnUrl { get; set; }
#endif
        /// <summary>Override showing a tipping selection screen on this transaction.</summary>
        public bool? SkipTipping { get; set; }
        /// <summary>Represents a per-transaction tipping configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_tipping_config? Tipping { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_tipping_config Tipping { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_process_config"/> and sets the default values.
        /// </summary>
        public Terminal_reader_reader_resource_process_config()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_process_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_process_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_process_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "enable_customer_cancellation", n => { EnableCustomerCancellation = n.GetBoolValue(); } },
                { "return_url", n => { ReturnUrl = n.GetStringValue(); } },
                { "skip_tipping", n => { SkipTipping = n.GetBoolValue(); } },
                { "tipping", n => { Tipping = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_tipping_config>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_tipping_config.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("enable_customer_cancellation", EnableCustomerCancellation);
            writer.WriteStringValue("return_url", ReturnUrl);
            writer.WriteBoolValue("skip_tipping", SkipTipping);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_tipping_config>("tipping", Tipping);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
