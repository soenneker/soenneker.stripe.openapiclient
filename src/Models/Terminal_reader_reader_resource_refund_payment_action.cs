// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// Represents a reader action to refund a payment
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Terminal_reader_reader_resource_refund_payment_action : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount being refunded.</summary>
        public int? Amount { get; set; }
        /// <summary>Charge that is being refunded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge? Charge { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge Charge { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_metadata Metadata { get; set; }
#endif
        /// <summary>Payment intent that is being refunded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent? PaymentIntent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent PaymentIntent { get; set; }
#endif
        /// <summary>The reason for the refund.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_reason? Reason { get; set; }
        /// <summary>Unique identifier for the refund object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund? Refund { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund Refund { get; set; }
#endif
        /// <summary>Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.</summary>
        public bool? RefundApplicationFee { get; set; }
        /// <summary>Represents a per-transaction override of a reader configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_config? RefundPaymentConfig { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_config RefundPaymentConfig { get; set; }
#endif
        /// <summary>Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.</summary>
        public bool? ReverseTransfer { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action"/> and sets the default values.
        /// </summary>
        public Terminal_reader_reader_resource_refund_payment_action()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "charge", n => { Charge = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_metadata.CreateFromDiscriminatorValue); } },
                { "payment_intent", n => { PaymentIntent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent.CreateFromDiscriminatorValue); } },
                { "reason", n => { Reason = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_reason>(); } },
                { "refund", n => { Refund = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund.CreateFromDiscriminatorValue); } },
                { "refund_application_fee", n => { RefundApplicationFee = n.GetBoolValue(); } },
                { "refund_payment_config", n => { RefundPaymentConfig = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_config>(global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_config.CreateFromDiscriminatorValue); } },
                { "reverse_transfer", n => { ReverseTransfer = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge>("charge", Charge);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent>("payment_intent", PaymentIntent);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action_reason>("reason", Reason);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund>("refund", Refund);
            writer.WriteBoolValue("refund_application_fee", RefundApplicationFee);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_config>("refund_payment_config", RefundPaymentConfig);
            writer.WriteBoolValue("reverse_transfer", ReverseTransfer);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Charge"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Terminal_reader_reader_resource_refund_payment_action_charge : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Charge"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Charge? Charge { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Charge Charge { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_charge();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Charge = new global::Soenneker.Stripe.OpenApiClient.Models.Charge();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Charge != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Charge);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Charge>(null, Charge);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Terminal_reader_reader_resource_refund_payment_action_payment_intent : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent? PaymentIntent { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent PaymentIntent { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_payment_intent();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.PaymentIntent = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PaymentIntent != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(PaymentIntent);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent>(null, PaymentIntent);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Refund"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Terminal_reader_reader_resource_refund_payment_action_refund : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Refund"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Refund? Refund { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Refund Refund { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Terminal_reader_reader_resource_refund_payment_action.Terminal_reader_reader_resource_refund_payment_action_refund();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Refund = new global::Soenneker.Stripe.OpenApiClient.Models.Refund();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Refund != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Refund);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Refund>(null, Refund);
                }
            }
        }
    }
}
#pragma warning restore CS0618
