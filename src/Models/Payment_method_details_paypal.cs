// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Payment_method_details_paypal : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Two-letter ISO code representing the buyer&apos;s country. Values are provided by PayPal directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>Owner&apos;s email. Values are provided by PayPal directly(if supported) at the time of authorization or settlement. They cannot be set or mutated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayerEmail { get; set; }
#nullable restore
#else
        public string PayerEmail { get; set; }
#endif
        /// <summary>PayPal account PayerID. This identifier uniquely identifies the PayPal customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayerId { get; set; }
#nullable restore
#else
        public string PayerId { get; set; }
#endif
        /// <summary>Owner&apos;s full name. Values provided by PayPal directly(if supported) at the time of authorization or settlement. They cannot be set or mutated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayerName { get; set; }
#nullable restore
#else
        public string PayerName { get; set; }
#endif
        /// <summary>The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Paypal_seller_protection? SellerProtection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Paypal_seller_protection SellerProtection { get; set; }
#endif
        /// <summary>A unique ID generated by PayPal for this transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransactionId { get; set; }
#nullable restore
#else
        public string TransactionId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_paypal"/> and sets the default values.
        /// </summary>
        public Payment_method_details_paypal()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_paypal"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_paypal CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_paypal();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "country", n => { Country = n.GetStringValue(); } },
                { "payer_email", n => { PayerEmail = n.GetStringValue(); } },
                { "payer_id", n => { PayerId = n.GetStringValue(); } },
                { "payer_name", n => { PayerName = n.GetStringValue(); } },
                { "seller_protection", n => { SellerProtection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Paypal_seller_protection>(global::Soenneker.Stripe.OpenApiClient.Models.Paypal_seller_protection.CreateFromDiscriminatorValue); } },
                { "transaction_id", n => { TransactionId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("payer_email", PayerEmail);
            writer.WriteStringValue("payer_id", PayerId);
            writer.WriteStringValue("payer_name", PayerName);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Paypal_seller_protection>("seller_protection", SellerProtection);
            writer.WriteStringValue("transaction_id", TransactionId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
