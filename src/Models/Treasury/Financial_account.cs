// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Treasury
{
    /// <summary>
    /// Stripe Treasury provides users with a container for money called a FinancialAccount that is separate from their Payments balance.FinancialAccounts serve as the source and destination of Treasuryâ€™s money movement APIs.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Financial_account : IAdditionalDataHolder, IParsable
    {
        /// <summary>The array of paths to active Features in the Features hash.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_active_features?>? ActiveFeatures { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_active_features?> ActiveFeatures { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Balance information for the FinancialAccount</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_balance? Balance { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_balance Balance { get; set; }
#endif
        /// <summary>Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Encodes whether a FinancialAccount has access to a particular Feature, with a `status` enum and associated `status_details`.Stripe or the platform can control Features via the requested field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_features? Features { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_features Features { get; set; }
#endif
        /// <summary>The set of credentials that resolve to a FinancialAccount.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_financial_address>? FinancialAddresses { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_financial_address> FinancialAddresses { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The is_default property</summary>
        public bool? IsDefault { get; set; }
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_metadata Metadata { get; set; }
#endif
        /// <summary>The nickname for the FinancialAccount.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Nickname { get; set; }
#nullable restore
#else
        public string Nickname { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_object? Object { get; set; }
        /// <summary>The array of paths to pending Features in the Features hash.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_pending_features?>? PendingFeatures { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_pending_features?> PendingFeatures { get; set; }
#endif
        /// <summary>The set of functionalities that the platform can restrict on the FinancialAccount.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_platform_restrictions? PlatformRestrictions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_platform_restrictions PlatformRestrictions { get; set; }
#endif
        /// <summary>The array of paths to restricted Features in the Features hash.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_restricted_features?>? RestrictedFeatures { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_restricted_features?> RestrictedFeatures { get; set; }
#endif
        /// <summary>Status of this FinancialAccount.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_status? Status { get; set; }
        /// <summary>The status_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_status_details? StatusDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_status_details StatusDetails { get; set; }
#endif
        /// <summary>The currencies the FinancialAccount can hold a balance in. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SupportedCurrencies { get; set; }
#nullable restore
#else
        public List<string> SupportedCurrencies { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account"/> and sets the default values.
        /// </summary>
        public Financial_account()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_features", n => { ActiveFeatures = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_active_features>()?.AsList(); } },
                { "balance", n => { Balance = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_balance>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_balance.CreateFromDiscriminatorValue); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "features", n => { Features = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_features>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_features.CreateFromDiscriminatorValue); } },
                { "financial_addresses", n => { FinancialAddresses = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_financial_address>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_financial_address.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "is_default", n => { IsDefault = n.GetBoolValue(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_metadata.CreateFromDiscriminatorValue); } },
                { "nickname", n => { Nickname = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_object>(); } },
                { "pending_features", n => { PendingFeatures = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_pending_features>()?.AsList(); } },
                { "platform_restrictions", n => { PlatformRestrictions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_platform_restrictions>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_platform_restrictions.CreateFromDiscriminatorValue); } },
                { "restricted_features", n => { RestrictedFeatures = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_restricted_features>()?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_status>(); } },
                { "status_details", n => { StatusDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_status_details>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_status_details.CreateFromDiscriminatorValue); } },
                { "supported_currencies", n => { SupportedCurrencies = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_active_features>("active_features", ActiveFeatures);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_balance>("balance", Balance);
            writer.WriteStringValue("country", Country);
            writer.WriteIntValue("created", Created);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_features>("features", Features);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_financial_address>("financial_addresses", FinancialAddresses);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("is_default", IsDefault);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_metadata>("metadata", Metadata);
            writer.WriteStringValue("nickname", Nickname);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_object>("object", Object);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_pending_features>("pending_features", PendingFeatures);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_platform_restrictions>("platform_restrictions", PlatformRestrictions);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_restricted_features>("restricted_features", RestrictedFeatures);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Financial_account_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_financial_accounts_resource_status_details>("status_details", StatusDetails);
            writer.WriteCollectionOfPrimitiveValues<string>("supported_currencies", SupportedCurrencies);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
