// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Treasury
{
    /// <summary>
    /// You can reverse some [ReceivedDebits](https://stripe.com/docs/api#received_debits) depending on their network and source flow. Reversing a ReceivedDebit leads to the creation of a new object known as a DebitReversal.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Debit_reversal : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Amount (in cents) transferred.</summary>
        public int? Amount { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The FinancialAccount to reverse funds from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FinancialAccount { get; set; }
#nullable restore
#else
        public string FinancialAccount { get; set; }
#endif
        /// <summary>A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe&apos;s money transmission licenses.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostedRegulatoryReceiptUrl { get; set; }
#nullable restore
#else
        public string HostedRegulatoryReceiptUrl { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Other flows linked to a DebitReversal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_debit_reversal_linked_flows? LinkedFlows { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_debit_reversal_linked_flows LinkedFlows { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_metadata Metadata { get; set; }
#endif
        /// <summary>The rails used to reverse the funds.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_network? Network { get; set; }
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_object? Object { get; set; }
        /// <summary>The ReceivedDebit being reversed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReceivedDebit { get; set; }
#nullable restore
#else
        public string ReceivedDebit { get; set; }
#endif
        /// <summary>Status of the DebitReversal</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_status? Status { get; set; }
        /// <summary>The status_transitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_status_transitions? StatusTransitions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_status_transitions StatusTransitions { get; set; }
#endif
        /// <summary>The Transaction associated with this object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction? Transaction { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction Transaction { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal"/> and sets the default values.
        /// </summary>
        public Debit_reversal()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "financial_account", n => { FinancialAccount = n.GetStringValue(); } },
                { "hosted_regulatory_receipt_url", n => { HostedRegulatoryReceiptUrl = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "linked_flows", n => { LinkedFlows = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_debit_reversal_linked_flows>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_debit_reversal_linked_flows.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_metadata.CreateFromDiscriminatorValue); } },
                { "network", n => { Network = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_network>(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_object>(); } },
                { "received_debit", n => { ReceivedDebit = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_status>(); } },
                { "status_transitions", n => { StatusTransitions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_status_transitions>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_status_transitions.CreateFromDiscriminatorValue); } },
                { "transaction", n => { Transaction = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("financial_account", FinancialAccount);
            writer.WriteStringValue("hosted_regulatory_receipt_url", HostedRegulatoryReceiptUrl);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_debit_reversal_linked_flows>("linked_flows", LinkedFlows);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_network>("network", Network);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_object>("object", Object);
            writer.WriteStringValue("received_debit", ReceivedDebit);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_status_transitions>("status_transitions", StatusTransitions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction>("transaction", Transaction);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Debit_reversal_transaction : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction? Transaction { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction Transaction { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Debit_reversal.Debit_reversal_transaction();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Transaction = new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Transaction != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Transaction);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction>(null, Transaction);
                }
            }
        }
    }
}
#pragma warning restore CS0618
