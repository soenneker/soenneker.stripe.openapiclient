// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Treasury
{
    /// <summary>
    /// Use [OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments) to send funds to another party&apos;s external bank account or [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To send money to an account belonging to the same user, use an [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).Simulate OutboundPayment state changes with the `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only be called on test mode objects.Related guide: [Moving money with Treasury using OutboundPayment objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Outbound_payment : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Amount (in cents) transferred.</summary>
        public int? Amount { get; set; }
        /// <summary>Returns `true` if the object can be canceled, and `false` otherwise.</summary>
        public bool? Cancelable { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>ID of the [customer](https://stripe.com/docs/api/customers) to whom an OutboundPayment is sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Customer { get; set; }
#nullable restore
#else
        public string Customer { get; set; }
#endif
        /// <summary>An arbitrary string attached to the object. Often useful for displaying to users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The PaymentMethod via which an OutboundPayment is sent. This field can be empty if the OutboundPayment was created using `destination_payment_method_data`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DestinationPaymentMethod { get; set; }
#nullable restore
#else
        public string DestinationPaymentMethod { get; set; }
#endif
        /// <summary>Details about the PaymentMethod for an OutboundPayment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Outbound_payments_payment_method_details? DestinationPaymentMethodDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Outbound_payments_payment_method_details DestinationPaymentMethodDetails { get; set; }
#endif
        /// <summary>Details about the end user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details? EndUserDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details EndUserDetails { get; set; }
#endif
        /// <summary>The date when funds are expected to arrive in the destination account.</summary>
        public int? ExpectedArrivalDate { get; set; }
        /// <summary>The FinancialAccount that funds were pulled from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FinancialAccount { get; set; }
#nullable restore
#else
        public string FinancialAccount { get; set; }
#endif
        /// <summary>A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe&apos;s money transmission licenses.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostedRegulatoryReceiptUrl { get; set; }
#nullable restore
#else
        public string HostedRegulatoryReceiptUrl { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_metadata Metadata { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_object? Object { get; set; }
        /// <summary>Details about a returned OutboundPayment. Only set when the status is `returned`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_returned_status? ReturnedDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_returned_status ReturnedDetails { get; set; }
#endif
        /// <summary>The description that appears on the receiving end for an OutboundPayment (for example, bank statement for external bank transfer).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>Current status of the OutboundPayment: `processing`, `failed`, `posted`, `returned`, `canceled`. An OutboundPayment is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundPayment has been &quot;confirmed&quot; and funds have left the account, or to `failed` or `canceled`. If an OutboundPayment fails to arrive at its destination, its status will change to `returned`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_status? Status { get; set; }
        /// <summary>The status_transitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions? StatusTransitions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions StatusTransitions { get; set; }
#endif
        /// <summary>Details about network-specific tracking information if available.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details? TrackingDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details TrackingDetails { get; set; }
#endif
        /// <summary>The Transaction associated with this object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction? Transaction { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction Transaction { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment"/> and sets the default values.
        /// </summary>
        public Outbound_payment()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "cancelable", n => { Cancelable = n.GetBoolValue(); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customer", n => { Customer = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "destination_payment_method", n => { DestinationPaymentMethod = n.GetStringValue(); } },
                { "destination_payment_method_details", n => { DestinationPaymentMethodDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Outbound_payments_payment_method_details>(global::Soenneker.Stripe.OpenApiClient.Models.Outbound_payments_payment_method_details.CreateFromDiscriminatorValue); } },
                { "end_user_details", n => { EndUserDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details.CreateFromDiscriminatorValue); } },
                { "expected_arrival_date", n => { ExpectedArrivalDate = n.GetIntValue(); } },
                { "financial_account", n => { FinancialAccount = n.GetStringValue(); } },
                { "hosted_regulatory_receipt_url", n => { HostedRegulatoryReceiptUrl = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_metadata.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_object>(); } },
                { "returned_details", n => { ReturnedDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_returned_status>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_returned_status.CreateFromDiscriminatorValue); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_status>(); } },
                { "status_transitions", n => { StatusTransitions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions.CreateFromDiscriminatorValue); } },
                { "tracking_details", n => { TrackingDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details.CreateFromDiscriminatorValue); } },
                { "transaction", n => { Transaction = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteBoolValue("cancelable", Cancelable);
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customer", Customer);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("destination_payment_method", DestinationPaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Outbound_payments_payment_method_details>("destination_payment_method_details", DestinationPaymentMethodDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details>("end_user_details", EndUserDetails);
            writer.WriteIntValue("expected_arrival_date", ExpectedArrivalDate);
            writer.WriteStringValue("financial_account", FinancialAccount);
            writer.WriteStringValue("hosted_regulatory_receipt_url", HostedRegulatoryReceiptUrl);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_returned_status>("returned_details", ReturnedDetails);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions>("status_transitions", StatusTransitions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details>("tracking_details", TrackingDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction>("transaction", Transaction);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Outbound_payment_transaction : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction? Transaction { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction Transaction { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.Outbound_payment_transaction();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Transaction = new global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Transaction != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Transaction);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Transaction>(null, Transaction);
                }
            }
        }
    }
}
#pragma warning restore CS0618
