// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Subscriptions_resource_billing_cycle_anchor_config : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The day of the month of the billing_cycle_anchor.</summary>
        public int? DayOfMonth { get; set; }
        /// <summary>The hour of the day of the billing_cycle_anchor.</summary>
        public int? Hour { get; set; }
        /// <summary>The minute of the hour of the billing_cycle_anchor.</summary>
        public int? Minute { get; set; }
        /// <summary>The month to start full cycle billing periods.</summary>
        public int? Month { get; set; }
        /// <summary>The second of the minute of the billing_cycle_anchor.</summary>
        public int? Second { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscriptions_resource_billing_cycle_anchor_config"/> and sets the default values.
        /// </summary>
        public Subscriptions_resource_billing_cycle_anchor_config()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscriptions_resource_billing_cycle_anchor_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Subscriptions_resource_billing_cycle_anchor_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Subscriptions_resource_billing_cycle_anchor_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "day_of_month", n => { DayOfMonth = n.GetIntValue(); } },
                { "hour", n => { Hour = n.GetIntValue(); } },
                { "minute", n => { Minute = n.GetIntValue(); } },
                { "month", n => { Month = n.GetIntValue(); } },
                { "second", n => { Second = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("day_of_month", DayOfMonth);
            writer.WriteIntValue("hour", Hour);
            writer.WriteIntValue("minute", Minute);
            writer.WriteIntValue("month", Month);
            writer.WriteIntValue("second", Second);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
