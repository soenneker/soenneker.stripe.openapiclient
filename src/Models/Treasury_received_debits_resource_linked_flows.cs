// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Treasury_received_debits_resource_linked_flows : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The DebitReversal created as a result of this ReceivedDebit being reversed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DebitReversal { get; set; }
#nullable restore
#else
        public string DebitReversal { get; set; }
#endif
        /// <summary>Set if the ReceivedDebit is associated with an InboundTransfer&apos;s return of funds.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InboundTransfer { get; set; }
#nullable restore
#else
        public string InboundTransfer { get; set; }
#endif
        /// <summary>Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuingAuthorization { get; set; }
#nullable restore
#else
        public string IssuingAuthorization { get; set; }
#endif
        /// <summary>Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuingTransaction { get; set; }
#nullable restore
#else
        public string IssuingTransaction { get; set; }
#endif
        /// <summary>Set if the ReceivedDebit was created due to a [Payout](https://stripe.com/docs/api#payouts) object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Payout { get; set; }
#nullable restore
#else
        public string Payout { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_linked_flows"/> and sets the default values.
        /// </summary>
        public Treasury_received_debits_resource_linked_flows()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_linked_flows"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_linked_flows CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_debits_resource_linked_flows();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "debit_reversal", n => { DebitReversal = n.GetStringValue(); } },
                { "inbound_transfer", n => { InboundTransfer = n.GetStringValue(); } },
                { "issuing_authorization", n => { IssuingAuthorization = n.GetStringValue(); } },
                { "issuing_transaction", n => { IssuingTransaction = n.GetStringValue(); } },
                { "payout", n => { Payout = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("debit_reversal", DebitReversal);
            writer.WriteStringValue("inbound_transfer", InboundTransfer);
            writer.WriteStringValue("issuing_authorization", IssuingAuthorization);
            writer.WriteStringValue("issuing_transaction", IssuingTransaction);
            writer.WriteStringValue("payout", Payout);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
