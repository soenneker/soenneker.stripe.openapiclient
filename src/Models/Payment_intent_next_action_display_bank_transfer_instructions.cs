// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Payment_intent_next_action_display_bank_transfer_instructions : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The remaining amount that needs to be transferred to complete the payment.</summary>
        public int? AmountRemaining { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>A list of financial addresses that can be used to fund the customer balance</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Funding_instructions_bank_transfer_financial_address>? FinancialAddresses { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Funding_instructions_bank_transfer_financial_address> FinancialAddresses { get; set; }
#endif
        /// <summary>A link to a hosted page that guides your customer through completing the transfer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostedInstructionsUrl { get; set; }
#nullable restore
#else
        public string HostedInstructionsUrl { get; set; }
#endif
        /// <summary>A string identifying this payment. Instruct your customer to include this code in the reference or memo field of their bank transfer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reference { get; set; }
#nullable restore
#else
        public string Reference { get; set; }
#endif
        /// <summary>Type of bank transfer</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions"/> and sets the default values.
        /// </summary>
        public Payment_intent_next_action_display_bank_transfer_instructions()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount_remaining", n => { AmountRemaining = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "financial_addresses", n => { FinancialAddresses = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Funding_instructions_bank_transfer_financial_address>(global::Soenneker.Stripe.OpenApiClient.Models.Funding_instructions_bank_transfer_financial_address.CreateFromDiscriminatorValue)?.AsList(); } },
                { "hosted_instructions_url", n => { HostedInstructionsUrl = n.GetStringValue(); } },
                { "reference", n => { Reference = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount_remaining", AmountRemaining);
            writer.WriteStringValue("currency", Currency);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Funding_instructions_bank_transfer_financial_address>("financial_addresses", FinancialAddresses);
            writer.WriteStringValue("hosted_instructions_url", HostedInstructionsUrl);
            writer.WriteStringValue("reference", Reference);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_display_bank_transfer_instructions_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
