// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// Result from a document check
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Gelato_document_report : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Address as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Address? Address { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Address Address { get; set; }
#endif
        /// <summary>Date of birth as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_date_of_birth? Dob { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_date_of_birth Dob { get; set; }
#endif
        /// <summary>Details on the verification error. Present when status is `unverified`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_error? Error { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_error Error { get; set; }
#endif
        /// <summary>Expiration date of the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_expiration_date? ExpirationDate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_expiration_date ExpirationDate { get; set; }
#endif
        /// <summary>Array of [File](https://stripe.com/docs/api/files) ids containing images for this document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Files { get; set; }
#nullable restore
#else
        public List<string> Files { get; set; }
#endif
        /// <summary>First name as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>Issued date of the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_issued_date? IssuedDate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_issued_date IssuedDate { get; set; }
#endif
        /// <summary>Issuing country of the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuingCountry { get; set; }
#nullable restore
#else
        public string IssuingCountry { get; set; }
#endif
        /// <summary>Last name as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>Document ID number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>Sex of the person in the document.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_sex? Sex { get; set; }
        /// <summary>Status of this `document` check.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_status? Status { get; set; }
        /// <summary>Type of the document.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_type? Type { get; set; }
        /// <summary>Place of birth as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnparsedPlaceOfBirth { get; set; }
#nullable restore
#else
        public string UnparsedPlaceOfBirth { get; set; }
#endif
        /// <summary>Sex as it appears in the document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnparsedSex { get; set; }
#nullable restore
#else
        public string UnparsedSex { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report"/> and sets the default values.
        /// </summary>
        public Gelato_document_report()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>(global::Soenneker.Stripe.OpenApiClient.Models.Address.CreateFromDiscriminatorValue); } },
                { "dob", n => { Dob = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_date_of_birth>(global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_date_of_birth.CreateFromDiscriminatorValue); } },
                { "error", n => { Error = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_error>(global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_error.CreateFromDiscriminatorValue); } },
                { "expiration_date", n => { ExpirationDate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_expiration_date>(global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_expiration_date.CreateFromDiscriminatorValue); } },
                { "files", n => { Files = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "issued_date", n => { IssuedDate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_issued_date>(global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_issued_date.CreateFromDiscriminatorValue); } },
                { "issuing_country", n => { IssuingCountry = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "sex", n => { Sex = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_sex>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_status>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_type>(); } },
                { "unparsed_place_of_birth", n => { UnparsedPlaceOfBirth = n.GetStringValue(); } },
                { "unparsed_sex", n => { UnparsedSex = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Address>("address", Address);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_date_of_birth>("dob", Dob);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_error>("error", Error);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_expiration_date>("expiration_date", ExpirationDate);
            writer.WriteCollectionOfPrimitiveValues<string>("files", Files);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_data_document_report_issued_date>("issued_date", IssuedDate);
            writer.WriteStringValue("issuing_country", IssuingCountry);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteStringValue("number", Number);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_sex>("sex", Sex);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_status>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Gelato_document_report_type>("type", Type);
            writer.WriteStringValue("unparsed_place_of_birth", UnparsedPlaceOfBirth);
            writer.WriteStringValue("unparsed_sex", UnparsedSex);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
