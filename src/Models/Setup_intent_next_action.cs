// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Setup_intent_next_action : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cashapp_handle_redirect_or_display_qr_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code? CashappHandleRedirectOrDisplayQrCode { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code CashappHandleRedirectOrDisplayQrCode { get; set; }
#endif
        /// <summary>The redirect_to_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_redirect_to_url? RedirectToUrl { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_redirect_to_url RedirectToUrl { get; set; }
#endif
        /// <summary>Type of the next action to perform. Refer to the other child attributes under `next_action` for available values. Examples include: `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_use_stripe_sdk? UseStripeSdk { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_use_stripe_sdk UseStripeSdk { get; set; }
#endif
        /// <summary>The verify_with_microdeposits property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits? VerifyWithMicrodeposits { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits VerifyWithMicrodeposits { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action"/> and sets the default values.
        /// </summary>
        public Setup_intent_next_action()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cashapp_handle_redirect_or_display_qr_code", n => { CashappHandleRedirectOrDisplayQrCode = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code>(global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code.CreateFromDiscriminatorValue); } },
                { "redirect_to_url", n => { RedirectToUrl = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_redirect_to_url>(global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_redirect_to_url.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "use_stripe_sdk", n => { UseStripeSdk = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_use_stripe_sdk>(global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_use_stripe_sdk.CreateFromDiscriminatorValue); } },
                { "verify_with_microdeposits", n => { VerifyWithMicrodeposits = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits>(global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code>("cashapp_handle_redirect_or_display_qr_code", CashappHandleRedirectOrDisplayQrCode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_redirect_to_url>("redirect_to_url", RedirectToUrl);
            writer.WriteStringValue("type", Type);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_use_stripe_sdk>("use_stripe_sdk", UseStripeSdk);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_intent_next_action_verify_with_microdeposits>("verify_with_microdeposits", VerifyWithMicrodeposits);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
