// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Issuing_network_token_wallet_provider : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The wallet provider-given account ID of the digital wallet the token belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountId { get; set; }
#nullable restore
#else
        public string AccountId { get; set; }
#endif
        /// <summary>An evaluation on the trustworthiness of the wallet account between 1 and 5. A higher score indicates more trustworthy.</summary>
        public int? AccountTrustScore { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cardholder_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_address? CardholderAddress { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_address CardholderAddress { get; set; }
#endif
        /// <summary>The name of the cardholder tokenizing the card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardholderName { get; set; }
#nullable restore
#else
        public string CardholderName { get; set; }
#endif
        /// <summary>The method used for tokenizing a card.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_card_number_source? CardNumberSource { get; set; }
        /// <summary>An evaluation on the trustworthiness of the device. A higher score indicates more trustworthy.</summary>
        public int? DeviceTrustScore { get; set; }
        /// <summary>The hashed email address of the cardholder&apos;s account with the wallet provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HashedAccountEmailAddress { get; set; }
#nullable restore
#else
        public string HashedAccountEmailAddress { get; set; }
#endif
        /// <summary>The reasons for suggested tokenization given by the card network.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_reason_codes?>? ReasonCodes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_reason_codes?> ReasonCodes { get; set; }
#endif
        /// <summary>The recommendation on responding to the tokenization request.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_suggested_decision? SuggestedDecision { get; set; }
        /// <summary>The version of the standard for mapping reason codes followed by the wallet provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SuggestedDecisionVersion { get; set; }
#nullable restore
#else
        public string SuggestedDecisionVersion { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider"/> and sets the default values.
        /// </summary>
        public Issuing_network_token_wallet_provider()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_id", n => { AccountId = n.GetStringValue(); } },
                { "account_trust_score", n => { AccountTrustScore = n.GetIntValue(); } },
                { "card_number_source", n => { CardNumberSource = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_card_number_source>(); } },
                { "cardholder_address", n => { CardholderAddress = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_address>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_address.CreateFromDiscriminatorValue); } },
                { "cardholder_name", n => { CardholderName = n.GetStringValue(); } },
                { "device_trust_score", n => { DeviceTrustScore = n.GetIntValue(); } },
                { "hashed_account_email_address", n => { HashedAccountEmailAddress = n.GetStringValue(); } },
                { "reason_codes", n => { ReasonCodes = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_reason_codes>()?.AsList(); } },
                { "suggested_decision", n => { SuggestedDecision = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_suggested_decision>(); } },
                { "suggested_decision_version", n => { SuggestedDecisionVersion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_id", AccountId);
            writer.WriteIntValue("account_trust_score", AccountTrustScore);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_address>("cardholder_address", CardholderAddress);
            writer.WriteStringValue("cardholder_name", CardholderName);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_card_number_source>("card_number_source", CardNumberSource);
            writer.WriteIntValue("device_trust_score", DeviceTrustScore);
            writer.WriteStringValue("hashed_account_email_address", HashedAccountEmailAddress);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_reason_codes>("reason_codes", ReasonCodes);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider_suggested_decision>("suggested_decision", SuggestedDecision);
            writer.WriteStringValue("suggested_decision_version", SuggestedDecisionVersion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
