// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Payment_method_details_interac_present_receipt : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The type of account being debited or credited</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt_account_type? AccountType { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Application Cryptogram, a unique value generated by the card to authenticate the transaction with issuers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApplicationCryptogram { get; set; }
#nullable restore
#else
        public string ApplicationCryptogram { get; set; }
#endif
        /// <summary>The Application Identifier (AID) on the card used to determine which networks are eligible to process the transaction. Referenced from EMV tag 9F12, data encoded on the card&apos;s chip.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApplicationPreferredName { get; set; }
#nullable restore
#else
        public string ApplicationPreferredName { get; set; }
#endif
        /// <summary>Identifier for this transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorizationCode { get; set; }
#nullable restore
#else
        public string AuthorizationCode { get; set; }
#endif
        /// <summary>EMV tag 8A. A code returned by the card issuer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorizationResponseCode { get; set; }
#nullable restore
#else
        public string AuthorizationResponseCode { get; set; }
#endif
        /// <summary>Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardholderVerificationMethod { get; set; }
#nullable restore
#else
        public string CardholderVerificationMethod { get; set; }
#endif
        /// <summary>Similar to the application_preferred_name, identifying the applications (AIDs) available on the card. Referenced from EMV tag 84.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DedicatedFileName { get; set; }
#nullable restore
#else
        public string DedicatedFileName { get; set; }
#endif
        /// <summary>A 5-byte string that records the checks and validations that occur between the card and the terminal. These checks determine how the terminal processes the transaction and what risk tolerance is acceptable. Referenced from EMV Tag 95.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TerminalVerificationResults { get; set; }
#nullable restore
#else
        public string TerminalVerificationResults { get; set; }
#endif
        /// <summary>An indication of which steps were completed during the card read process. Referenced from EMV Tag 9B.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransactionStatusInformation { get; set; }
#nullable restore
#else
        public string TransactionStatusInformation { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt"/> and sets the default values.
        /// </summary>
        public Payment_method_details_interac_present_receipt()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_type", n => { AccountType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt_account_type>(); } },
                { "application_cryptogram", n => { ApplicationCryptogram = n.GetStringValue(); } },
                { "application_preferred_name", n => { ApplicationPreferredName = n.GetStringValue(); } },
                { "authorization_code", n => { AuthorizationCode = n.GetStringValue(); } },
                { "authorization_response_code", n => { AuthorizationResponseCode = n.GetStringValue(); } },
                { "cardholder_verification_method", n => { CardholderVerificationMethod = n.GetStringValue(); } },
                { "dedicated_file_name", n => { DedicatedFileName = n.GetStringValue(); } },
                { "terminal_verification_results", n => { TerminalVerificationResults = n.GetStringValue(); } },
                { "transaction_status_information", n => { TransactionStatusInformation = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method_details_interac_present_receipt_account_type>("account_type", AccountType);
            writer.WriteStringValue("application_cryptogram", ApplicationCryptogram);
            writer.WriteStringValue("application_preferred_name", ApplicationPreferredName);
            writer.WriteStringValue("authorization_code", AuthorizationCode);
            writer.WriteStringValue("authorization_response_code", AuthorizationResponseCode);
            writer.WriteStringValue("cardholder_verification_method", CardholderVerificationMethod);
            writer.WriteStringValue("dedicated_file_name", DedicatedFileName);
            writer.WriteStringValue("terminal_verification_results", TerminalVerificationResults);
            writer.WriteStringValue("transaction_status_information", TransactionStatusInformation);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
