// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Soenneker.Stripe.OpenApiClient.Models.Test_helpers;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// A Quote is a way to model prices that you&apos;d like to provide to a customer.Once accepted, it will automatically create an invoice, subscription or subscription schedule.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Quote : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Total before any discounts or taxes are applied.</summary>
        public int? AmountSubtotal { get; set; }
        /// <summary>Total after discounts and taxes are applied.</summary>
        public int? AmountTotal { get; set; }
        /// <summary>ID of the Connect Application that created the quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application? Application { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application Application { get; set; }
#endif
        /// <summary>The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner&apos;s Stripe account. Only applicable if there are no line items with recurring prices on the quote.</summary>
        public int? ApplicationFeeAmount { get; set; }
        /// <summary>A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner&apos;s Stripe account. Only applicable if there are line items with recurring prices on the quote.</summary>
        public double? ApplicationFeePercent { get; set; }
        /// <summary>The automatic_tax property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_automatic_tax? AutomaticTax { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_automatic_tax AutomaticTax { get; set; }
#endif
        /// <summary>Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_collection_method? CollectionMethod { get; set; }
        /// <summary>The computed property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_computed? Computed { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_computed Computed { get; set; }
#endif
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer? Customer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer Customer { get; set; }
#endif
        /// <summary>The tax rates applied to this quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultTaxRates { get; set; }
#nullable restore
#else
        public List<string> DefaultTaxRates { get; set; }
#endif
        /// <summary>A description that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The discounts applied to this quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Discounts { get; set; }
#nullable restore
#else
        public List<string> Discounts { get; set; }
#endif
        /// <summary>The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.</summary>
        public int? ExpiresAt { get; set; }
        /// <summary>A footer that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Footer { get; set; }
#nullable restore
#else
        public string Footer { get; set; }
#endif
        /// <summary>Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_from_quote? FromQuote { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_from_quote FromQuote { get; set; }
#endif
        /// <summary>A header that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Header { get; set; }
#nullable restore
#else
        public string Header { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The invoice that was created from this quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice? Invoice { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice Invoice { get; set; }
#endif
        /// <summary>The invoice_settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_quote_setting? InvoiceSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_quote_setting InvoiceSettings { get; set; }
#endif
        /// <summary>A list of items the customer is being quoted for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_line_items? LineItems { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_line_items LineItems { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_metadata Metadata { get; set; }
#endif
        /// <summary>A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_object? Object { get; set; }
        /// <summary>The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of? OnBehalfOf { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of OnBehalfOf { get; set; }
#endif
        /// <summary>The status of the quote.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote_status? Status { get; set; }
        /// <summary>The status_transitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_status_transitions? StatusTransitions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_status_transitions StatusTransitions { get; set; }
#endif
        /// <summary>The subscription that was created or updated from this quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription? Subscription { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription Subscription { get; set; }
#endif
        /// <summary>The subscription_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data? SubscriptionData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data SubscriptionData { get; set; }
#endif
        /// <summary>The subscription schedule that was created or updated from this quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule? SubscriptionSchedule { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule SubscriptionSchedule { get; set; }
#endif
        /// <summary>ID of the test clock this quote belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock? TestClock { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock TestClock { get; set; }
#endif
        /// <summary>The total_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details? TotalDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details TotalDetails { get; set; }
#endif
        /// <summary>The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_transfer_data? TransferData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_transfer_data TransferData { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote"/> and sets the default values.
        /// </summary>
        public Quote()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Quote CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Quote();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount_subtotal", n => { AmountSubtotal = n.GetIntValue(); } },
                { "amount_total", n => { AmountTotal = n.GetIntValue(); } },
                { "application", n => { Application = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application.CreateFromDiscriminatorValue); } },
                { "application_fee_amount", n => { ApplicationFeeAmount = n.GetIntValue(); } },
                { "application_fee_percent", n => { ApplicationFeePercent = n.GetDoubleValue(); } },
                { "automatic_tax", n => { AutomaticTax = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_automatic_tax>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_automatic_tax.CreateFromDiscriminatorValue); } },
                { "collection_method", n => { CollectionMethod = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_collection_method>(); } },
                { "computed", n => { Computed = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_computed>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_computed.CreateFromDiscriminatorValue); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer.CreateFromDiscriminatorValue); } },
                { "default_tax_rates", n => { DefaultTaxRates = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "discounts", n => { Discounts = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "expires_at", n => { ExpiresAt = n.GetIntValue(); } },
                { "footer", n => { Footer = n.GetStringValue(); } },
                { "from_quote", n => { FromQuote = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_from_quote>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_from_quote.CreateFromDiscriminatorValue); } },
                { "header", n => { Header = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "invoice", n => { Invoice = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice.CreateFromDiscriminatorValue); } },
                { "invoice_settings", n => { InvoiceSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_quote_setting>(global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_quote_setting.CreateFromDiscriminatorValue); } },
                { "line_items", n => { LineItems = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_line_items>(global::Soenneker.Stripe.OpenApiClient.Models.Quote_line_items.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Quote_metadata.CreateFromDiscriminatorValue); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_object>(); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_status>(); } },
                { "status_transitions", n => { StatusTransitions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_status_transitions>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_status_transitions.CreateFromDiscriminatorValue); } },
                { "subscription", n => { Subscription = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription.CreateFromDiscriminatorValue); } },
                { "subscription_data", n => { SubscriptionData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data.CreateFromDiscriminatorValue); } },
                { "subscription_schedule", n => { SubscriptionSchedule = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule.CreateFromDiscriminatorValue); } },
                { "test_clock", n => { TestClock = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock>(global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock.CreateFromDiscriminatorValue); } },
                { "total_details", n => { TotalDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details.CreateFromDiscriminatorValue); } },
                { "transfer_data", n => { TransferData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_transfer_data>(global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_transfer_data.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount_subtotal", AmountSubtotal);
            writer.WriteIntValue("amount_total", AmountTotal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application>("application", Application);
            writer.WriteIntValue("application_fee_amount", ApplicationFeeAmount);
            writer.WriteDoubleValue("application_fee_percent", ApplicationFeePercent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_automatic_tax>("automatic_tax", AutomaticTax);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_collection_method>("collection_method", CollectionMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_computed>("computed", Computed);
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer>("customer", Customer);
            writer.WriteCollectionOfPrimitiveValues<string>("default_tax_rates", DefaultTaxRates);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("discounts", Discounts);
            writer.WriteIntValue("expires_at", ExpiresAt);
            writer.WriteStringValue("footer", Footer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_from_quote>("from_quote", FromQuote);
            writer.WriteStringValue("header", Header);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice>("invoice", Invoice);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Invoice_setting_quote_setting>("invoice_settings", InvoiceSettings);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_line_items>("line_items", LineItems);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_metadata>("metadata", Metadata);
            writer.WriteStringValue("number", Number);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of>("on_behalf_of", OnBehalfOf);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_status_transitions>("status_transitions", StatusTransitions);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription>("subscription", Subscription);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_subscription_data_subscription_data>("subscription_data", SubscriptionData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule>("subscription_schedule", SubscriptionSchedule);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock>("test_clock", TestClock);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_total_details>("total_details", TotalDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Quotes_resource_transfer_data>("transfer_data", TransferData);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_application : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Application? Application { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Application Application { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application? DeletedApplication { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application DeletedApplication { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_application();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Application = new global::Soenneker.Stripe.OpenApiClient.Models.Application();
                    result.DeletedApplication = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_application();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Application != null || DeletedApplication != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Application, DeletedApplication);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Application>(null, Application, DeletedApplication);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_customer : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer? Customer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer Customer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer? DeletedCustomer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer DeletedCustomer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_customer();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Customer = new global::Soenneker.Stripe.OpenApiClient.Models.Customer();
                    result.DeletedCustomer = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Customer != null || DeletedCustomer != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Customer, DeletedCustomer);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer>(null, Customer, DeletedCustomer);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_invoice : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice? DeletedInvoice { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice DeletedInvoice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Invoice? Invoice { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Invoice Invoice { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_invoice();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.DeletedInvoice = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice();
                    result.Invoice = new global::Soenneker.Stripe.OpenApiClient.Models.Invoice();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(DeletedInvoice != null || Invoice != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(DeletedInvoice, Invoice);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice>(null, DeletedInvoice, Invoice);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_on_behalf_of : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Account? Account { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Account Account { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_on_behalf_of();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Account = new global::Soenneker.Stripe.OpenApiClient.Models.Account();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Account != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Account);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Account>(null, Account);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscription"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_subscription : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscription"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Subscription? Subscription { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Subscription Subscription { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Subscription = new global::Soenneker.Stripe.OpenApiClient.Models.Subscription();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Subscription != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Subscription);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Subscription>(null, Subscription);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_subscription_schedule : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule? SubscriptionSchedule { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule SubscriptionSchedule { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_subscription_schedule();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionSchedule = new global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionSchedule != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionSchedule);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Subscription_schedule>(null, SubscriptionSchedule);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Quote_test_clock : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock? TestClock { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock TestClock { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Quote.Quote_test_clock();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.TestClock = new global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(TestClock != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(TestClock);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Test_helpers.Test_clock>(null, TestClock);
                }
            }
        }
    }
}
#pragma warning restore CS0618
