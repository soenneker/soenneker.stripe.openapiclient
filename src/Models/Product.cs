// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// Products describe the specific goods or services you offer to your customers.For example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.They can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),[share a Payment Link](https://stripe.com/docs/payment-links),[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),and more about [Products and Prices](https://stripe.com/docs/products-prices/overview)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Product : IAdditionalDataHolder, IParsable
    {
        /// <summary>Whether the product is currently available for purchase.</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price? DefaultPrice { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price DefaultPrice { get; set; }
#endif
        /// <summary>The product&apos;s description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>A list of up to 8 URLs of images for this product, meant to be displayable to the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Images { get; set; }
#nullable restore
#else
        public List<string> Images { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Product_marketing_feature>? MarketingFeatures { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.Models.Product_marketing_feature> MarketingFeatures { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Product_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Product_metadata Metadata { get; set; }
#endif
        /// <summary>The product&apos;s name, meant to be displayable to the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Product_object? Object { get; set; }
        /// <summary>The dimensions of this product for shipping purposes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Package_dimensions? PackageDimensions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Package_dimensions PackageDimensions { get; set; }
#endif
        /// <summary>Whether this product is shipped (i.e., physical goods).</summary>
        public bool? Shippable { get; set; }
        /// <summary>Extra information about a product which will appear on your customer&apos;s credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only used for subscription payments.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>A [tax code](https://stripe.com/docs/tax/tax-categories) ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code? TaxCode { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code TaxCode { get; set; }
#endif
        /// <summary>A label that represents units of this product. When set, this will be included in customers&apos; receipts, invoices, Checkout, and the customer portal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitLabel { get; set; }
#nullable restore
#else
        public string UnitLabel { get; set; }
#endif
        /// <summary>Time at which the object was last updated. Measured in seconds since the Unix epoch.</summary>
        public int? Updated { get; set; }
        /// <summary>A URL of a publicly-accessible webpage for this product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Product"/> and sets the default values.
        /// </summary>
        public Product()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Product"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Product CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Product();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "created", n => { Created = n.GetIntValue(); } },
                { "default_price", n => { DefaultPrice = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price>(global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "images", n => { Images = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "marketing_features", n => { MarketingFeatures = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Product_marketing_feature>(global::Soenneker.Stripe.OpenApiClient.Models.Product_marketing_feature.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Product_metadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Product_object>(); } },
                { "package_dimensions", n => { PackageDimensions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Package_dimensions>(global::Soenneker.Stripe.OpenApiClient.Models.Package_dimensions.CreateFromDiscriminatorValue); } },
                { "shippable", n => { Shippable = n.GetBoolValue(); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "tax_code", n => { TaxCode = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code>(global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code.CreateFromDiscriminatorValue); } },
                { "unit_label", n => { UnitLabel = n.GetStringValue(); } },
                { "updated", n => { Updated = n.GetIntValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteIntValue("created", Created);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price>("default_price", DefaultPrice);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<string>("images", Images);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.Models.Product_marketing_feature>("marketing_features", MarketingFeatures);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product_metadata>("metadata", Metadata);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Product_object>("object", Object);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Package_dimensions>("package_dimensions", PackageDimensions);
            writer.WriteBoolValue("shippable", Shippable);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code>("tax_code", TaxCode);
            writer.WriteStringValue("unit_label", UnitLabel);
            writer.WriteIntValue("updated", Updated);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Price"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Product_default_price : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Price"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Price? Price { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Price Price { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_default_price();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Price = new global::Soenneker.Stripe.OpenApiClient.Models.Price();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Price != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Price);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Price>(null, Price);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Tax_code"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Product_tax_code : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Tax_code"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Tax_code? TaxCode { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Tax_code TaxCode { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Product.Product_tax_code();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.TaxCode = new global::Soenneker.Stripe.OpenApiClient.Models.Tax_code();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(TaxCode != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(TaxCode);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_code>(null, TaxCode);
                }
            }
        }
    }
}
#pragma warning restore CS0618
