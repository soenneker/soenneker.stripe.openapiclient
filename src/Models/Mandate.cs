// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    /// <summary>
    /// A Mandate is a record of the permission that your customer gives you to debit their payment method.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Mandate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The customer_acceptance property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_acceptance? CustomerAcceptance { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Customer_acceptance CustomerAcceptance { get; set; }
#endif
        /// <summary>Unique identifier for the object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>The multi_use property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_multi_use? MultiUse { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_multi_use MultiUse { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_object? Object { get; set; }
        /// <summary>The account (if any) that the mandate is intended for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OnBehalfOf { get; set; }
#nullable restore
#else
        public string OnBehalfOf { get; set; }
#endif
        /// <summary>ID of the payment method associated with this mandate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method? PaymentMethod { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method PaymentMethod { get; set; }
#endif
        /// <summary>The payment_method_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_payment_method_details? PaymentMethodDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_payment_method_details PaymentMethodDetails { get; set; }
#endif
        /// <summary>The single_use property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_single_use? SingleUse { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_single_use SingleUse { get; set; }
#endif
        /// <summary>The mandate status indicates whether or not you can use it to initiate a payment.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_status? Status { get; set; }
        /// <summary>The type of the mandate.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Mandate_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Mandate"/> and sets the default values.
        /// </summary>
        public Mandate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Mandate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Mandate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Mandate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "customer_acceptance", n => { CustomerAcceptance = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_acceptance>(global::Soenneker.Stripe.OpenApiClient.Models.Customer_acceptance.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "multi_use", n => { MultiUse = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_multi_use>(global::Soenneker.Stripe.OpenApiClient.Models.Mandate_multi_use.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_object>(); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetStringValue(); } },
                { "payment_method", n => { PaymentMethod = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method>(global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method.CreateFromDiscriminatorValue); } },
                { "payment_method_details", n => { PaymentMethodDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_payment_method_details>(global::Soenneker.Stripe.OpenApiClient.Models.Mandate_payment_method_details.CreateFromDiscriminatorValue); } },
                { "single_use", n => { SingleUse = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_single_use>(global::Soenneker.Stripe.OpenApiClient.Models.Mandate_single_use.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_status>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer_acceptance>("customer_acceptance", CustomerAcceptance);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_multi_use>("multi_use", MultiUse);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_object>("object", Object);
            writer.WriteStringValue("on_behalf_of", OnBehalfOf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method>("payment_method", PaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_payment_method_details>("payment_method_details", PaymentMethodDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_single_use>("single_use", SingleUse);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_status>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Mandate_payment_method : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method? PaymentMethod { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method PaymentMethod { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Mandate.Mandate_payment_method();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.PaymentMethod = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PaymentMethod != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(PaymentMethod);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method>(null, PaymentMethod);
                }
            }
        }
    }
}
#pragma warning restore CS0618
