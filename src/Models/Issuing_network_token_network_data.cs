// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Issuing_network_token_network_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The device property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_device? Device { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_device Device { get; set; }
#endif
        /// <summary>The mastercard property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_mastercard? Mastercard { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_mastercard Mastercard { get; set; }
#endif
        /// <summary>The network that the token is associated with. An additional hash is included with a name matching this value, containing tokenization data specific to the card network.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data_type? Type { get; set; }
        /// <summary>The visa property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_visa? Visa { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_visa Visa { get; set; }
#endif
        /// <summary>The wallet_provider property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider? WalletProvider { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider WalletProvider { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data"/> and sets the default values.
        /// </summary>
        public Issuing_network_token_network_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "device", n => { Device = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_device>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_device.CreateFromDiscriminatorValue); } },
                { "mastercard", n => { Mastercard = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_mastercard>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_mastercard.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data_type>(); } },
                { "visa", n => { Visa = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_visa>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_visa.CreateFromDiscriminatorValue); } },
                { "wallet_provider", n => { WalletProvider = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider>(global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_device>("device", Device);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_mastercard>("mastercard", Mastercard);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_network_data_type>("type", Type);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_visa>("visa", Visa);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Issuing_network_token_wallet_provider>("wallet_provider", WalletProvider);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
