// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models.Tax
{
    /// <summary>
    /// A Tax Transaction records the tax collected from or refunded to your customer.Related guide: [Calculate tax in your custom payment flow](https://stripe.com/docs/tax/custom#tax-transaction)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Transaction : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Time at which the object was created. Measured in seconds since the Unix epoch.</summary>
        public int? Created { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The ID of an existing [Customer](https://stripe.com/docs/api/customers/object) used for the resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Customer { get; set; }
#nullable restore
#else
        public string Customer { get; set; }
#endif
        /// <summary>The customer_details property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_customer_details? CustomerDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_customer_details CustomerDetails { get; set; }
#endif
        /// <summary>Unique identifier for the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The tax collected or refunded, by line item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_line_items? LineItems { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_line_items LineItems { get; set; }
#endif
        /// <summary>Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.</summary>
        public bool? Livemode { get; set; }
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_metadata Metadata { get; set; }
#endif
        /// <summary>String representing the object&apos;s type. Objects of the same type share the same value.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_object? Object { get; set; }
        /// <summary>The Unix timestamp representing when the tax liability is assumed or reduced.</summary>
        public int? PostedAt { get; set; }
        /// <summary>A custom unique identifier, such as &apos;myOrder_123&apos;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reference { get; set; }
#nullable restore
#else
        public string Reference { get; set; }
#endif
        /// <summary>If `type=reversal`, contains information about what was reversed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_resource_reversal? Reversal { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_resource_reversal Reversal { get; set; }
#endif
        /// <summary>The details of the ship from location, such as the address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_ship_from_details? ShipFromDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_ship_from_details ShipFromDetails { get; set; }
#endif
        /// <summary>The shipping cost details for the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_shipping_cost? ShippingCost { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_shipping_cost ShippingCost { get; set; }
#endif
        /// <summary>Timestamp of date at which the tax rules and rates in effect applies for the calculation.</summary>
        public int? TaxDate { get; set; }
        /// <summary>If `reversal`, this transaction reverses an earlier transaction.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction"/> and sets the default values.
        /// </summary>
        public Transaction()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created", n => { Created = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "customer", n => { Customer = n.GetStringValue(); } },
                { "customer_details", n => { CustomerDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_customer_details>(global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_customer_details.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "line_items", n => { LineItems = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_line_items>(global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_line_items.CreateFromDiscriminatorValue); } },
                { "livemode", n => { Livemode = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_metadata>(global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_metadata.CreateFromDiscriminatorValue); } },
                { "object", n => { Object = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_object>(); } },
                { "posted_at", n => { PostedAt = n.GetIntValue(); } },
                { "reference", n => { Reference = n.GetStringValue(); } },
                { "reversal", n => { Reversal = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_resource_reversal>(global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_resource_reversal.CreateFromDiscriminatorValue); } },
                { "ship_from_details", n => { ShipFromDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_ship_from_details>(global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_ship_from_details.CreateFromDiscriminatorValue); } },
                { "shipping_cost", n => { ShippingCost = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_shipping_cost>(global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_shipping_cost.CreateFromDiscriminatorValue); } },
                { "tax_date", n => { TaxDate = n.GetIntValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("created", Created);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("customer", Customer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_customer_details>("customer_details", CustomerDetails);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_line_items>("line_items", LineItems);
            writer.WriteBoolValue("livemode", Livemode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_object>("object", Object);
            writer.WriteIntValue("posted_at", PostedAt);
            writer.WriteStringValue("reference", Reference);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_resource_reversal>("reversal", Reversal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_ship_from_details>("ship_from_details", ShipFromDetails);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax_product_resource_tax_transaction_shipping_cost>("shipping_cost", ShippingCost);
            writer.WriteIntValue("tax_date", TaxDate);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Tax.Transaction_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
