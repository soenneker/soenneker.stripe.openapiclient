// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Soenneker.Stripe.OpenApiClient.Models.Treasury;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Treasury_received_credits_resource_source_flows_details : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>You can reverse some [ReceivedCredits](https://stripe.com/docs/api#received_credits) depending on their network and source flow. Reversing a ReceivedCredit leads to the creation of a new object known as a CreditReversal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Credit_reversal? CreditReversal { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Credit_reversal CreditReversal { get; set; }
#endif
        /// <summary>Use [OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments) to send funds to another party&apos;s external bank account or [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To send money to an account belonging to the same user, use an [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).Simulate OutboundPayment state changes with the `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only be called on test mode objects.Related guide: [Moving money with Treasury using OutboundPayment objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment? OutboundPayment { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment OutboundPayment { get; set; }
#endif
        /// <summary>Use [OutboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers) to transfer funds from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) to a PaymentMethod belonging to the same entity. To send funds to a different party, use [OutboundPayments](https://stripe.com/docs/api#outbound_payments) instead. You can send funds over ACH rails or through a domestic wire transfer to a user&apos;s own external bank account.Simulate OutboundTransfer state changes with the `/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods can only be called on test mode objects.Related guide: [Moving money with Treasury using OutboundTransfer objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_transfer? OutboundTransfer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_transfer OutboundTransfer { get; set; }
#endif
        /// <summary>A `Payout` object is created when you receive funds from Stripe, or when youinitiate a payout to either a bank account or debit card of a [connectedStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,and list all payouts. Payouts are made on [varyingschedules](/docs/connect/manage-payout-schedule), depending on your country andindustry.Related guide: [Receiving payouts](https://stripe.com/docs/payouts)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Payout? Payout { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Payout Payout { get; set; }
#endif
        /// <summary>The type of the source flow that originated the ReceivedCredit.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details"/> and sets the default values.
        /// </summary>
        public Treasury_received_credits_resource_source_flows_details()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "credit_reversal", n => { CreditReversal = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Credit_reversal>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Credit_reversal.CreateFromDiscriminatorValue); } },
                { "outbound_payment", n => { OutboundPayment = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment.CreateFromDiscriminatorValue); } },
                { "outbound_transfer", n => { OutboundTransfer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_transfer>(global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_transfer.CreateFromDiscriminatorValue); } },
                { "payout", n => { Payout = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payout>(global::Soenneker.Stripe.OpenApiClient.Models.Payout.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Credit_reversal>("credit_reversal", CreditReversal);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_payment>("outbound_payment", OutboundPayment);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury.Outbound_transfer>("outbound_transfer", OutboundTransfer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payout>("payout", Payout);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Treasury_received_credits_resource_source_flows_details_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
