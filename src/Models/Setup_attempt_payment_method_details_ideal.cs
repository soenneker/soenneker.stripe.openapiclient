// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Setup_attempt_payment_method_details_ideal : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The customer&apos;s bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `buut`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bank? Bank { get; set; }
        /// <summary>The Bank Identifier Code of the customer&apos;s bank.</summary>
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bic? Bic { get; set; }
        /// <summary>The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit? GeneratedSepaDebit { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit GeneratedSepaDebit { get; set; }
#endif
        /// <summary>The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate? GeneratedSepaDebitMandate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate GeneratedSepaDebitMandate { get; set; }
#endif
        /// <summary>Last four characters of the IBAN.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IbanLast4 { get; set; }
#nullable restore
#else
        public string IbanLast4 { get; set; }
#endif
        /// <summary>Owner&apos;s verified full name. Values are verified or provided by iDEAL directly(if supported) at the time of authorization or settlement. They cannot be set or mutated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VerifiedName { get; set; }
#nullable restore
#else
        public string VerifiedName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal"/> and sets the default values.
        /// </summary>
        public Setup_attempt_payment_method_details_ideal()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bank", n => { Bank = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bank>(); } },
                { "bic", n => { Bic = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bic>(); } },
                { "generated_sepa_debit", n => { GeneratedSepaDebit = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit>(global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit.CreateFromDiscriminatorValue); } },
                { "generated_sepa_debit_mandate", n => { GeneratedSepaDebitMandate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate>(global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate.CreateFromDiscriminatorValue); } },
                { "iban_last4", n => { IbanLast4 = n.GetStringValue(); } },
                { "verified_name", n => { VerifiedName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bank>("bank", Bank);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal_bic>("bic", Bic);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit>("generated_sepa_debit", GeneratedSepaDebit);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate>("generated_sepa_debit_mandate", GeneratedSepaDebitMandate);
            writer.WriteStringValue("iban_last4", IbanLast4);
            writer.WriteStringValue("verified_name", VerifiedName);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Setup_attempt_payment_method_details_ideal_generated_sepa_debit : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method? PaymentMethod { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Payment_method PaymentMethod { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.PaymentMethod = new global::Soenneker.Stripe.OpenApiClient.Models.Payment_method();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(PaymentMethod != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(PaymentMethod);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method>(null, PaymentMethod);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Mandate"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Mandate"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Mandate? Mandate { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Mandate Mandate { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.Models.Setup_attempt_payment_method_details_ideal.Setup_attempt_payment_method_details_ideal_generated_sepa_debit_mandate();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.Mandate = new global::Soenneker.Stripe.OpenApiClient.Models.Mandate();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Mandate != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Mandate);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Mandate>(null, Mandate);
                }
            }
        }
    }
}
#pragma warning restore CS0618
