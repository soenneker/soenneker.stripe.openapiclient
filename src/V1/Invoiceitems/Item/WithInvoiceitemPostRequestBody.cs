// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithInvoiceitemPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer&apos;s account, pass a negative amount.</summary>
        public int? Amount { get; set; }
        /// <summary>An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.</summary>
        public bool? Discountable { get; set; }
        /// <summary>The coupons, promotion codes &amp; existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts? Discounts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts Discounts { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metadata { get; set; }
#nullable restore
#else
        public string Metadata { get; set; }
#endif
        /// <summary>The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_period? Period { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_period Period { get; set; }
#endif
        /// <summary>Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_price_data? PriceData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_price_data PriceData { get; set; }
#endif
        /// <summary>The pricing information for the invoice item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_pricing? Pricing { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_pricing Pricing { get; set; }
#endif
        /// <summary>Non-negative integer. The quantity of units for the invoice item.</summary>
        public int? Quantity { get; set; }
        /// <summary>Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_tax_behavior? TaxBehavior { get; set; }
        /// <summary>A [tax code](https://stripe.com/docs/tax/tax-categories) ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code? TaxCode { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code TaxCode { get; set; }
#endif
        /// <summary>The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates? TaxRates { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates TaxRates { get; set; }
#endif
        /// <summary>The decimal unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This `unit_amount_decimal` will be multiplied by the quantity to get the full amount. Passing in a negative `unit_amount_decimal` will reduce the `amount_due` on the invoice. Accepts at most 12 decimal places.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitAmountDecimal { get; set; }
#nullable restore
#else
        public string UnitAmountDecimal { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "discountable", n => { Discountable = n.GetBoolValue(); } },
                { "discounts", n => { Discounts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "metadata", n => { Metadata = n.GetStringValue(); } },
                { "period", n => { Period = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_period>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_period.CreateFromDiscriminatorValue); } },
                { "price_data", n => { PriceData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_price_data>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_price_data.CreateFromDiscriminatorValue); } },
                { "pricing", n => { Pricing = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_pricing>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_pricing.CreateFromDiscriminatorValue); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "tax_behavior", n => { TaxBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_tax_behavior>(); } },
                { "tax_code", n => { TaxCode = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code.CreateFromDiscriminatorValue); } },
                { "tax_rates", n => { TaxRates = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates.CreateFromDiscriminatorValue); } },
                { "unit_amount_decimal", n => { UnitAmountDecimal = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("discountable", Discountable);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts>("discounts", Discounts);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("metadata", Metadata);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_period>("period", Period);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_price_data>("price_data", PriceData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_pricing>("pricing", Pricing);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_tax_behavior>("tax_behavior", TaxBehavior);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code>("tax_code", TaxCode);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates>("tax_rates", TaxRates);
            writer.WriteStringValue("unit_amount_decimal", UnitAmountDecimal);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithInvoiceitemPostRequestBody_discounts : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1>? WithInvoiceitemPostRequestBodyDiscountsMember1 { get; set; }
#nullable restore
#else
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1> WithInvoiceitemPostRequestBodyDiscountsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_discounts();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1>(global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1.CreateFromDiscriminatorValue)?.AsList() is List<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1> withInvoiceitemPostRequestBodyDiscountsMember1Value)
                {
                    result.WithInvoiceitemPostRequestBodyDiscountsMember1 = withInvoiceitemPostRequestBodyDiscountsMember1Value;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(WithInvoiceitemPostRequestBodyDiscountsMember1 != null)
                {
                    writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody_discountsMember1>(null, WithInvoiceitemPostRequestBodyDiscountsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithInvoiceitemPostRequestBody_tax_code : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_code();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithInvoiceitemPostRequestBody_tax_rates : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? WithInvoiceitemPostRequestBodyTaxRatesString { get; set; }
#nullable restore
#else
            public string WithInvoiceitemPostRequestBodyTaxRatesString { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.Item.WithInvoiceitemPostRequestBody.WithInvoiceitemPostRequestBody_tax_rates();
                if(parseNode.GetStringValue() is string withInvoiceitemPostRequestBodyTaxRatesStringValue)
                {
                    result.WithInvoiceitemPostRequestBodyTaxRatesString = withInvoiceitemPostRequestBodyTaxRatesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(WithInvoiceitemPostRequestBodyTaxRatesString != null)
                {
                    writer.WriteStringValue(null, WithInvoiceitemPostRequestBodyTaxRatesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
