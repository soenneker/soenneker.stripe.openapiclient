// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions
{
    /// <summary>
    /// Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SessionsPostRequestBody_flow_data : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The after_completion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_after_completion? AfterCompletion { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_after_completion AfterCompletion { get; set; }
#endif
        /// <summary>The subscription_cancel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_cancel? SubscriptionCancel { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_cancel SubscriptionCancel { get; set; }
#endif
        /// <summary>The subscription_update property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update? SubscriptionUpdate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update SubscriptionUpdate { get; set; }
#endif
        /// <summary>The subscription_update_confirm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update_confirm? SubscriptionUpdateConfirm { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update_confirm SubscriptionUpdateConfirm { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data"/> and sets the default values.
        /// </summary>
        public SessionsPostRequestBody_flow_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "after_completion", n => { AfterCompletion = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_after_completion>(global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_after_completion.CreateFromDiscriminatorValue); } },
                { "subscription_cancel", n => { SubscriptionCancel = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_cancel>(global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_cancel.CreateFromDiscriminatorValue); } },
                { "subscription_update", n => { SubscriptionUpdate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update>(global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update.CreateFromDiscriminatorValue); } },
                { "subscription_update_confirm", n => { SubscriptionUpdateConfirm = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update_confirm>(global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update_confirm.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_after_completion>("after_completion", AfterCompletion);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_cancel>("subscription_cancel", SubscriptionCancel);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update>("subscription_update", SubscriptionUpdate);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_subscription_update_confirm>("subscription_update_confirm", SubscriptionUpdateConfirm);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Sessions.SessionsPostRequestBody_flow_data_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
