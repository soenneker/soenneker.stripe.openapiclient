// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Confirmation_tokensPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>ID of an existing PaymentMethod.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PaymentMethod { get; set; }
#nullable restore
#else
        public string PaymentMethod { get; set; }
#endif
        /// <summary>If provided, this hash will be used to create a PaymentMethod.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_data? PaymentMethodData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_data PaymentMethodData { get; set; }
#endif
        /// <summary>Payment-method-specific configuration for this ConfirmationToken.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_options? PaymentMethodOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_options PaymentMethodOptions { get; set; }
#endif
        /// <summary>Return URL used to confirm the Intent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnUrl { get; set; }
#nullable restore
#else
        public string ReturnUrl { get; set; }
#endif
        /// <summary>Indicates that you intend to make future payments with this ConfirmationToken&apos;s payment method.The presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent&apos;s Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_setup_future_usage? SetupFutureUsage { get; set; }
        /// <summary>Shipping information for this ConfirmationToken.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_shipping? Shipping { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_shipping Shipping { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "payment_method", n => { PaymentMethod = n.GetStringValue(); } },
                { "payment_method_data", n => { PaymentMethodData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_data>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_data.CreateFromDiscriminatorValue); } },
                { "payment_method_options", n => { PaymentMethodOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_options>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_options.CreateFromDiscriminatorValue); } },
                { "return_url", n => { ReturnUrl = n.GetStringValue(); } },
                { "setup_future_usage", n => { SetupFutureUsage = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_setup_future_usage>(); } },
                { "shipping", n => { Shipping = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_shipping>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_shipping.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("payment_method", PaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_data>("payment_method_data", PaymentMethodData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_payment_method_options>("payment_method_options", PaymentMethodOptions);
            writer.WriteStringValue("return_url", ReturnUrl);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_setup_future_usage>("setup_future_usage", SetupFutureUsage);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Confirmation_tokens.Confirmation_tokensPostRequestBody_shipping>("shipping", Shipping);
        }
    }
}
#pragma warning restore CS0618
