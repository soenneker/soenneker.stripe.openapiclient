// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Create_unlinked_refundPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).</summary>
        public int? Amount { get; set; }
        /// <summary>Card associated with this unlinked refund transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Card { get; set; }
#nullable restore
#else
        public string Card { get; set; }
#endif
        /// <summary>The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_merchant_data? MerchantData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_merchant_data MerchantData { get; set; }
#endif
        /// <summary>Additional purchase information that is optionally provided by the merchant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_purchase_details? PurchaseDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_purchase_details PurchaseDetails { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "card", n => { Card = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "merchant_data", n => { MerchantData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_merchant_data>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_merchant_data.CreateFromDiscriminatorValue); } },
                { "purchase_details", n => { PurchaseDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_purchase_details>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_purchase_details.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteStringValue("card", Card);
            writer.WriteStringValue("currency", Currency);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_merchant_data>("merchant_data", MerchantData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Transactions.Create_unlinked_refund.Create_unlinked_refundPostRequestBody_purchase_details>("purchase_details", PurchaseDetails);
        }
    }
}
#pragma warning restore CS0618
