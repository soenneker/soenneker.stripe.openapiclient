// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Finalize_amountPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The final authorization amount that will be captured by the merchant. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).</summary>
        public int? FinalAmount { get; set; }
        /// <summary>Fleet-specific information for authorizations using Fleet cards.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fleet? Fleet { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fleet Fleet { get; set; }
#endif
        /// <summary>Information about fuel that was purchased with this transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fuel? Fuel { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fuel Fuel { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "final_amount", n => { FinalAmount = n.GetIntValue(); } },
                { "fleet", n => { Fleet = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fleet>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fleet.CreateFromDiscriminatorValue); } },
                { "fuel", n => { Fuel = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fuel>(global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fuel.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteIntValue("final_amount", FinalAmount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fleet>("fleet", Fleet);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Issuing.Authorizations.Item.Finalize_amount.Finalize_amountPostRequestBody_fuel>("fuel", Fuel);
        }
    }
}
#pragma warning restore CS0618
