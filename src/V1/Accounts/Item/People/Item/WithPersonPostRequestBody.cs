// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithPersonPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Details on the legal guardian&apos;s or authorizer&apos;s acceptance of the required Stripe agreements.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_additional_tos_acceptances? AdditionalTosAcceptances { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_additional_tos_acceptances AdditionalTosAcceptances { get; set; }
#endif
        /// <summary>The person&apos;s address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address? Address { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address Address { get; set; }
#endif
        /// <summary>The Kana variation of the person&apos;s address (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kana? AddressKana { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kana AddressKana { get; set; }
#endif
        /// <summary>The Kanji variation of the person&apos;s address (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kanji? AddressKanji { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kanji AddressKanji { get; set; }
#endif
        /// <summary>The person&apos;s date of birth.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob? Dob { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob Dob { get; set; }
#endif
        /// <summary>Documents that may be submitted to satisfy various informational requests.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_documents? Documents { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_documents Documents { get; set; }
#endif
        /// <summary>The person&apos;s email address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The person&apos;s first name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The Kana variation of the person&apos;s first name (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstNameKana { get; set; }
#nullable restore
#else
        public string FirstNameKana { get; set; }
#endif
        /// <summary>The Kanji variation of the person&apos;s first name (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstNameKanji { get; set; }
#nullable restore
#else
        public string FirstNameKanji { get; set; }
#endif
        /// <summary>A list of alternate names or aliases that the person is known by.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases? FullNameAliases { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases FullNameAliases { get; set; }
#endif
        /// <summary>The person&apos;s gender (International regulations require either &quot;male&quot; or &quot;female&quot;).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Gender { get; set; }
#nullable restore
#else
        public string Gender { get; set; }
#endif
        /// <summary>The person&apos;s ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IdNumber { get; set; }
#nullable restore
#else
        public string IdNumber { get; set; }
#endif
        /// <summary>The person&apos;s secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IdNumberSecondary { get; set; }
#nullable restore
#else
        public string IdNumberSecondary { get; set; }
#endif
        /// <summary>The person&apos;s last name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>The Kana variation of the person&apos;s last name (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastNameKana { get; set; }
#nullable restore
#else
        public string LastNameKana { get; set; }
#endif
        /// <summary>The Kanji variation of the person&apos;s last name (Japan only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastNameKanji { get; set; }
#nullable restore
#else
        public string LastNameKanji { get; set; }
#endif
        /// <summary>The person&apos;s maiden name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MaidenName { get; set; }
#nullable restore
#else
        public string MaidenName { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metadata { get; set; }
#nullable restore
#else
        public string Metadata { get; set; }
#endif
        /// <summary>The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or &quot;XX&quot; if unavailable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Nationality { get; set; }
#nullable restore
#else
        public string Nationality { get; set; }
#endif
        /// <summary>A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonToken { get; set; }
#nullable restore
#else
        public string PersonToken { get; set; }
#endif
        /// <summary>The person&apos;s phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_political_exposure? PoliticalExposure { get; set; }
        /// <summary>The person&apos;s registered address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_registered_address? RegisteredAddress { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_registered_address RegisteredAddress { get; set; }
#endif
        /// <summary>The relationship that this person has with the account&apos;s legal entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_relationship? Relationship { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_relationship Relationship { get; set; }
#endif
        /// <summary>The last four digits of the person&apos;s Social Security number (U.S. only).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SsnLast4 { get; set; }
#nullable restore
#else
        public string SsnLast4 { get; set; }
#endif
        /// <summary>Demographic data related to the person.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_us_cfpb_data? UsCfpbData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_us_cfpb_data UsCfpbData { get; set; }
#endif
        /// <summary>The person&apos;s verification status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_verification? Verification { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_verification Verification { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additional_tos_acceptances", n => { AdditionalTosAcceptances = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_additional_tos_acceptances>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_additional_tos_acceptances.CreateFromDiscriminatorValue); } },
                { "address", n => { Address = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address.CreateFromDiscriminatorValue); } },
                { "address_kana", n => { AddressKana = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kana>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kana.CreateFromDiscriminatorValue); } },
                { "address_kanji", n => { AddressKanji = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kanji>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kanji.CreateFromDiscriminatorValue); } },
                { "dob", n => { Dob = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob.CreateFromDiscriminatorValue); } },
                { "documents", n => { Documents = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_documents>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_documents.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "first_name_kana", n => { FirstNameKana = n.GetStringValue(); } },
                { "first_name_kanji", n => { FirstNameKanji = n.GetStringValue(); } },
                { "full_name_aliases", n => { FullNameAliases = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases.CreateFromDiscriminatorValue); } },
                { "gender", n => { Gender = n.GetStringValue(); } },
                { "id_number", n => { IdNumber = n.GetStringValue(); } },
                { "id_number_secondary", n => { IdNumberSecondary = n.GetStringValue(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "last_name_kana", n => { LastNameKana = n.GetStringValue(); } },
                { "last_name_kanji", n => { LastNameKanji = n.GetStringValue(); } },
                { "maiden_name", n => { MaidenName = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetStringValue(); } },
                { "nationality", n => { Nationality = n.GetStringValue(); } },
                { "person_token", n => { PersonToken = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "political_exposure", n => { PoliticalExposure = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_political_exposure>(); } },
                { "registered_address", n => { RegisteredAddress = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_registered_address>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_registered_address.CreateFromDiscriminatorValue); } },
                { "relationship", n => { Relationship = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_relationship>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_relationship.CreateFromDiscriminatorValue); } },
                { "ssn_last_4", n => { SsnLast4 = n.GetStringValue(); } },
                { "us_cfpb_data", n => { UsCfpbData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_us_cfpb_data>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_us_cfpb_data.CreateFromDiscriminatorValue); } },
                { "verification", n => { Verification = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_verification>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_verification.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_additional_tos_acceptances>("additional_tos_acceptances", AdditionalTosAcceptances);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address>("address", Address);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kana>("address_kana", AddressKana);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_address_kanji>("address_kanji", AddressKanji);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob>("dob", Dob);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_documents>("documents", Documents);
            writer.WriteStringValue("email", Email);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteStringValue("first_name_kana", FirstNameKana);
            writer.WriteStringValue("first_name_kanji", FirstNameKanji);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases>("full_name_aliases", FullNameAliases);
            writer.WriteStringValue("gender", Gender);
            writer.WriteStringValue("id_number", IdNumber);
            writer.WriteStringValue("id_number_secondary", IdNumberSecondary);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteStringValue("last_name_kana", LastNameKana);
            writer.WriteStringValue("last_name_kanji", LastNameKanji);
            writer.WriteStringValue("maiden_name", MaidenName);
            writer.WriteStringValue("metadata", Metadata);
            writer.WriteStringValue("nationality", Nationality);
            writer.WriteStringValue("person_token", PersonToken);
            writer.WriteStringValue("phone", Phone);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_political_exposure>("political_exposure", PoliticalExposure);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_registered_address>("registered_address", RegisteredAddress);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_relationship>("relationship", Relationship);
            writer.WriteStringValue("ssn_last_4", SsnLast4);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_us_cfpb_data>("us_cfpb_data", UsCfpbData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_verification>("verification", Verification);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithPersonPostRequestBody_dob : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1? WithPersonPostRequestBodyDobMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1 WithPersonPostRequestBodyDobMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_dob();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.WithPersonPostRequestBodyDobMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(WithPersonPostRequestBodyDobMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(WithPersonPostRequestBodyDobMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody_dobMember1>(null, WithPersonPostRequestBodyDobMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithPersonPostRequestBody_full_name_aliases : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? WithPersonPostRequestBodyFullNameAliasesString { get; set; }
#nullable restore
#else
            public string WithPersonPostRequestBodyFullNameAliasesString { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.Item.WithPersonPostRequestBody.WithPersonPostRequestBody_full_name_aliases();
                if(parseNode.GetStringValue() is string withPersonPostRequestBodyFullNameAliasesStringValue)
                {
                    result.WithPersonPostRequestBodyFullNameAliasesString = withPersonPostRequestBodyFullNameAliasesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(WithPersonPostRequestBodyFullNameAliasesString != null)
                {
                    writer.WriteStringValue(null, WithPersonPostRequestBodyFullNameAliasesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
