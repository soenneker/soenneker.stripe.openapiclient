// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Bank_accounts;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Capabilities;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.External_accounts;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Login_links;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Persons;
using Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Reject;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Accounts.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\accounts\{account}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithAccountItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The bank_accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Bank_accounts.Bank_accountsRequestBuilder Bank_accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Bank_accounts.Bank_accountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The capabilities property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Capabilities.CapabilitiesRequestBuilder Capabilities
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Capabilities.CapabilitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The external_accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.External_accounts.External_accountsRequestBuilder External_accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.External_accounts.External_accountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login_links property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Login_links.Login_linksRequestBuilder Login_links
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Login_links.Login_linksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The people property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.PeopleRequestBuilder People
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.People.PeopleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The persons property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Persons.PersonsRequestBuilder Persons
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Persons.PersonsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reject property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Reject.RejectRequestBuilder Reject
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.Reject.RejectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithAccountItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/accounts/{account}{?expand*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithAccountItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/accounts/{account}{?expand*}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;With &lt;a href=&quot;/connect&quot;&gt;Connect&lt;/a&gt;, you can delete accounts you manage.&lt;/p&gt;&lt;p&gt;Test-mode accounts can be deleted at any time.&lt;/p&gt;&lt;p&gt;Live-mode accounts that have access to the standard dashboard and Stripe is responsible for negative account balances cannot be deleted, which includes Standard accounts. All other Live-mode accounts, can be deleted when all &lt;a href=&quot;/api/balance/balance_object&quot;&gt;balances&lt;/a&gt; are zero.&lt;/p&gt;&lt;p&gt;If you want to delete your own account, use the &lt;a href=&quot;https://dashboard.stripe.com/settings/account&quot;&gt;account information tab in your account settings&lt;/a&gt; instead.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_account"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_account?> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_account> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToDeleteRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_account>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Deleted_account.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of an account.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Account?> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder.WithAccountItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Account> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder.WithAccountItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Account>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Account.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Updates a &lt;a href=&quot;/connect/accounts&quot;&gt;connected account&lt;/a&gt; by setting the values of the parameters passed. Any parameters not provided areleft unchanged.&lt;/p&gt;&lt;p&gt;For accounts where &lt;a href=&quot;/api/accounts/object#account_object-controller-requirement_collection&quot;&gt;controller.requirement_collection&lt;/a&gt;is &lt;code&gt;application&lt;/code&gt;, which includes Custom accounts, you can update any information on the account.&lt;/p&gt;&lt;p&gt;For accounts where &lt;a href=&quot;/api/accounts/object#account_object-controller-requirement_collection&quot;&gt;controller.requirement_collection&lt;/a&gt;is &lt;code&gt;stripe&lt;/code&gt;, which includes Standard and Express accounts, you can update all information until you createan &lt;a href=&quot;/api/account_links&quot;&gt;Account Link&lt;/a&gt; or &lt;a href=&quot;/api/account_sessions&quot;&gt;Account Session&lt;/a&gt; to start Connect onboarding,after which some properties can no longer be updated.&lt;/p&gt;&lt;p&gt;To update your own account, use the &lt;a href=&quot;https://dashboard.stripe.com/settings/account&quot;&gt;Dashboard&lt;/a&gt;. Refer to our&lt;a href=&quot;/docs/connect/updating-accounts&quot;&gt;Connect&lt;/a&gt; documentation to learn more about updating accounts.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Account"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Account?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Account> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Account>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Account.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;With &lt;a href=&quot;/connect&quot;&gt;Connect&lt;/a&gt;, you can delete accounts you manage.&lt;/p&gt;&lt;p&gt;Test-mode accounts can be deleted at any time.&lt;/p&gt;&lt;p&gt;Live-mode accounts that have access to the standard dashboard and Stripe is responsible for negative account balances cannot be deleted, which includes Standard accounts. All other Live-mode accounts, can be deleted when all &lt;a href=&quot;/api/balance/balance_object&quot;&gt;balances&lt;/a&gt; are zero.&lt;/p&gt;&lt;p&gt;If you want to delete your own account, use the &lt;a href=&quot;https://dashboard.stripe.com/settings/account&quot;&gt;account information tab in your account settings&lt;/a&gt; instead.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of an account.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder.WithAccountItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder.WithAccountItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Updates a &lt;a href=&quot;/connect/accounts&quot;&gt;connected account&lt;/a&gt; by setting the values of the parameters passed. Any parameters not provided areleft unchanged.&lt;/p&gt;&lt;p&gt;For accounts where &lt;a href=&quot;/api/accounts/object#account_object-controller-requirement_collection&quot;&gt;controller.requirement_collection&lt;/a&gt;is &lt;code&gt;application&lt;/code&gt;, which includes Custom accounts, you can update any information on the account.&lt;/p&gt;&lt;p&gt;For accounts where &lt;a href=&quot;/api/accounts/object#account_object-controller-requirement_collection&quot;&gt;controller.requirement_collection&lt;/a&gt;is &lt;code&gt;stripe&lt;/code&gt;, which includes Standard and Express accounts, you can update all information until you createan &lt;a href=&quot;/api/account_links&quot;&gt;Account Link&lt;/a&gt; or &lt;a href=&quot;/api/account_sessions&quot;&gt;Account Session&lt;/a&gt; to start Connect onboarding,after which some properties can no longer be updated.&lt;/p&gt;&lt;p&gt;To update your own account, use the &lt;a href=&quot;https://dashboard.stripe.com/settings/account&quot;&gt;Dashboard&lt;/a&gt;. Refer to our&lt;a href=&quot;/docs/connect/updating-accounts&quot;&gt;Connect&lt;/a&gt; documentation to learn more about updating accounts.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.Item.WithAccountItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of an account.&lt;/p&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithAccountItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string[] Expand { get; set; }
#endif
        }
    }
}
#pragma warning restore CS0618
