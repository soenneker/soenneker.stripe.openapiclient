// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Accounts
{
    /// <summary>
    /// A hash of configuration describing the account controller&apos;s attributes.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AccountsPostRequestBody_controller : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The fees property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_fees? Fees { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_fees Fees { get; set; }
#endif
        /// <summary>The losses property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_losses? Losses { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_losses Losses { get; set; }
#endif
        /// <summary>The requirement_collection property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_requirement_collection? RequirementCollection { get; set; }
        /// <summary>The stripe_dashboard property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_stripe_dashboard? StripeDashboard { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_stripe_dashboard StripeDashboard { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller"/> and sets the default values.
        /// </summary>
        public AccountsPostRequestBody_controller()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "fees", n => { Fees = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_fees>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_fees.CreateFromDiscriminatorValue); } },
                { "losses", n => { Losses = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_losses>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_losses.CreateFromDiscriminatorValue); } },
                { "requirement_collection", n => { RequirementCollection = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_requirement_collection>(); } },
                { "stripe_dashboard", n => { StripeDashboard = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_stripe_dashboard>(global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_stripe_dashboard.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_fees>("fees", Fees);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_losses>("losses", Losses);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_requirement_collection>("requirement_collection", RequirementCollection);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsPostRequestBody_controller_stripe_dashboard>("stripe_dashboard", StripeDashboard);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
