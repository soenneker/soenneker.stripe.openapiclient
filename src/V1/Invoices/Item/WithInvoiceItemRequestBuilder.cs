// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Add_lines;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Finalize;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Lines;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Mark_uncollectible;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Pay;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Remove_lines;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Send;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Update_lines;
using Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.VoidNamespace;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Invoices.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\invoices\{invoice}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithInvoiceItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The add_lines property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Add_lines.Add_linesRequestBuilder Add_lines
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Add_lines.Add_linesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The attach_payment property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder Attach_payment
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The finalize property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Finalize.FinalizeRequestBuilder Finalize
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Finalize.FinalizeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The lines property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Lines.LinesRequestBuilder Lines
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Lines.LinesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mark_uncollectible property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Mark_uncollectible.Mark_uncollectibleRequestBuilder Mark_uncollectible
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Mark_uncollectible.Mark_uncollectibleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pay property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Pay.PayRequestBuilder Pay
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Pay.PayRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The remove_lines property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Remove_lines.Remove_linesRequestBuilder Remove_lines
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Remove_lines.Remove_linesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The send property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Send.SendRequestBuilder Send
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Send.SendRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The update_lines property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Update_lines.Update_linesRequestBuilder Update_lines
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Update_lines.Update_linesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The void property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.VoidNamespace.VoidRequestBuilder Void
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.VoidNamespace.VoidRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithInvoiceItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/invoices/{invoice}{?expand*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithInvoiceItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/invoices/{invoice}{?expand*}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be &lt;a href=&quot;#void_invoice&quot;&gt;voided&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice?> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToDeleteRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Deleted_invoice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the invoice with the given ID.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice?> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder.WithInvoiceItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder.WithInvoiceItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Invoice>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Invoice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Draft invoices are fully editable. Once an invoice is &lt;a href=&quot;/docs/billing/invoices/workflow#finalized&quot;&gt;finalized&lt;/a&gt;,monetary values, as well as &lt;code&gt;collection_method&lt;/code&gt;, become uneditable.&lt;/p&gt;&lt;p&gt;If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,sending reminders for, or &lt;a href=&quot;/docs/billing/invoices/reconciliation&quot;&gt;automatically reconciling&lt;/a&gt; invoices, pass&lt;code&gt;auto_advance=false&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoicePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoicePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Invoice>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Invoice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be &lt;a href=&quot;#void_invoice&quot;&gt;voided&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the invoice with the given ID.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder.WithInvoiceItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder.WithInvoiceItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Draft invoices are fully editable. Once an invoice is &lt;a href=&quot;/docs/billing/invoices/workflow#finalized&quot;&gt;finalized&lt;/a&gt;,monetary values, as well as &lt;code&gt;collection_method&lt;/code&gt;, become uneditable.&lt;/p&gt;&lt;p&gt;If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,sending reminders for, or &lt;a href=&quot;/docs/billing/invoices/reconciliation&quot;&gt;automatically reconciling&lt;/a&gt; invoices, pass&lt;code&gt;auto_advance=false&lt;/code&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoicePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoicePostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.WithInvoiceItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the invoice with the given ID.&lt;/p&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithInvoiceItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string[] Expand { get; set; }
#endif
        }
    }
}
#pragma warning restore CS0618
