// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\invoices\{invoice}\attach_payment
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Attach_paymentRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Attach_paymentRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/invoices/{invoice}/attach_payment", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Attach_paymentRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/invoices/{invoice}/attach_payment", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Attaches a PaymentIntent or an Out of Band Payment to the invoice, adding it to the list of &lt;code&gt;payments&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For the PaymentIntent, when the PaymentIntent’s status changes to &lt;code&gt;succeeded&lt;/code&gt;, the payment is creditedto the invoice, increasing its &lt;code&gt;amount_paid&lt;/code&gt;. When the invoice is fully paid, theinvoice’s status becomes &lt;code&gt;paid&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If the PaymentIntent’s status is already &lt;code&gt;succeeded&lt;/code&gt; when it’s attached, it’scredited to the invoice immediately.&lt;/p&gt;&lt;p&gt;See: &lt;a href=&quot;/docs/invoicing/partial-payments&quot;&gt;Partial payments&lt;/a&gt; to learn more.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Invoice"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Invoice> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Invoice>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Invoice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Attaches a PaymentIntent or an Out of Band Payment to the invoice, adding it to the list of &lt;code&gt;payments&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For the PaymentIntent, when the PaymentIntent’s status changes to &lt;code&gt;succeeded&lt;/code&gt;, the payment is creditedto the invoice, increasing its &lt;code&gt;amount_paid&lt;/code&gt;. When the invoice is fully paid, theinvoice’s status becomes &lt;code&gt;paid&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If the PaymentIntent’s status is already &lt;code&gt;succeeded&lt;/code&gt; when it’s attached, it’scredited to the invoice immediately.&lt;/p&gt;&lt;p&gt;See: &lt;a href=&quot;/docs/invoicing/partial-payments&quot;&gt;Partial payments&lt;/a&gt; to learn more.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.Item.Attach_payment.Attach_paymentRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
