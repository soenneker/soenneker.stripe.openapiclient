// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Apply_customer_balance;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Cancel;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Capture;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Confirm;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Increment_authorization;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Verify_microdeposits;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\payment_intents\{intent}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithIntentItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The apply_customer_balance property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Apply_customer_balance.Apply_customer_balanceRequestBuilder Apply_customer_balance
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Apply_customer_balance.Apply_customer_balanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cancel property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Cancel.CancelRequestBuilder Cancel
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Cancel.CancelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The capture property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Capture.CaptureRequestBuilder Capture
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Capture.CaptureRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The confirm property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Confirm.ConfirmRequestBuilder Confirm
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Confirm.ConfirmRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The increment_authorization property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Increment_authorization.Increment_authorizationRequestBuilder Increment_authorization
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Increment_authorization.Increment_authorizationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The verify_microdeposits property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Verify_microdeposits.Verify_microdepositsRequestBuilder Verify_microdeposits
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.Verify_microdeposits.Verify_microdepositsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIntentItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/payment_intents/{intent}{?client_secret*,expand*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithIntentItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/payment_intents/{intent}{?client_secret*,expand*}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of a PaymentIntent that has previously been created. &lt;/p&gt;&lt;p&gt;You can retrieve a PaymentIntent client-side using a publishable key when the &lt;code&gt;client_secret&lt;/code&gt; is in the query string. &lt;/p&gt;&lt;p&gt;If you retrieve a PaymentIntent with a publishable key, it only returns a subset of properties. Refer to the &lt;a href=&quot;#payment_intent_object&quot;&gt;payment intent&lt;/a&gt; object reference for more details.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent?> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder.WithIntentItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder.WithIntentItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Updates properties on a PaymentIntent object without confirming.&lt;/p&gt;&lt;p&gt;Depending on which properties you update, you might need to confirm thePaymentIntent again. For example, updating the &lt;code&gt;payment_method&lt;/code&gt;always requires you to confirm the PaymentIntent again. If you prefer toupdate and confirm at the same time, we recommend updating properties throughthe &lt;a href=&quot;/docs/api/payment_intents/confirm&quot;&gt;confirm API&lt;/a&gt; instead.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Payment_intent.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of a PaymentIntent that has previously been created. &lt;/p&gt;&lt;p&gt;You can retrieve a PaymentIntent client-side using a publishable key when the &lt;code&gt;client_secret&lt;/code&gt; is in the query string. &lt;/p&gt;&lt;p&gt;If you retrieve a PaymentIntent with a publishable key, it only returns a subset of properties. Refer to the &lt;a href=&quot;#payment_intent_object&quot;&gt;payment intent&lt;/a&gt; object reference for more details.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder.WithIntentItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder.WithIntentItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Updates properties on a PaymentIntent object without confirming.&lt;/p&gt;&lt;p&gt;Depending on which properties you update, you might need to confirm thePaymentIntent again. For example, updating the &lt;code&gt;payment_method&lt;/code&gt;always requires you to confirm the PaymentIntent again. If you prefer toupdate and confirm at the same time, we recommend updating properties throughthe &lt;a href=&quot;/docs/api/payment_intents/confirm&quot;&gt;confirm API&lt;/a&gt; instead.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Item.WithIntentItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves the details of a PaymentIntent that has previously been created. &lt;/p&gt;&lt;p&gt;You can retrieve a PaymentIntent client-side using a publishable key when the &lt;code&gt;client_secret&lt;/code&gt; is in the query string. &lt;/p&gt;&lt;p&gt;If you retrieve a PaymentIntent with a publishable key, it only returns a subset of properties. Refer to the &lt;a href=&quot;#payment_intent_object&quot;&gt;payment intent&lt;/a&gt; object reference for more details.&lt;/p&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithIntentItemRequestBuilderGetQueryParameters 
        {
            /// <summary>The client secret of the PaymentIntent. We require it if you use a publishable key to retrieve the source.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("client_secret")]
            public string? ClientSecret { get; set; }
#nullable restore
#else
            [QueryParameter("client_secret")]
            public string ClientSecret { get; set; }
#endif
            /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string[] Expand { get; set; }
#endif
        }
    }
}
#pragma warning restore CS0618
