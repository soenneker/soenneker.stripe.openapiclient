// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SessionsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account holder to link accounts for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_account_holder? AccountHolder { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_account_holder AccountHolder { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Filters to restrict the kinds of accounts to collect.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_filters? Filters { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_filters Filters { get; set; }
#endif
        /// <summary>List of data features that you would like to request access to.Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_permissions?>? Permissions { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_permissions?> Permissions { get; set; }
#endif
        /// <summary>List of data features that you would like to retrieve upon account creation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_prefetch?>? Prefetch { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_prefetch?> Prefetch { get; set; }
#endif
        /// <summary>For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnUrl { get; set; }
#nullable restore
#else
        public string ReturnUrl { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_holder", n => { AccountHolder = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_account_holder>(global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_account_holder.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "filters", n => { Filters = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_filters>(global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_filters.CreateFromDiscriminatorValue); } },
                { "permissions", n => { Permissions = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_permissions>()?.AsList(); } },
                { "prefetch", n => { Prefetch = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_prefetch>()?.AsList(); } },
                { "return_url", n => { ReturnUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_account_holder>("account_holder", AccountHolder);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_filters>("filters", Filters);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_permissions>("permissions", Permissions);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Sessions.SessionsPostRequestBody_prefetch>("prefetch", Prefetch);
            writer.WriteStringValue("return_url", ReturnUrl);
        }
    }
}
#pragma warning restore CS0618
