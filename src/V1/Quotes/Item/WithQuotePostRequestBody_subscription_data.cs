// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Quotes.Item
{
    /// <summary>
    /// When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithQuotePostRequestBody_subscription_data : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description? Description { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description Description { get; set; }
#endif
        /// <summary>The effective_date property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date? EffectiveDate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date EffectiveDate { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data_metadata Metadata { get; set; }
#endif
        /// <summary>The trial_period_days property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days? TrialPeriodDays { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days TrialPeriodDays { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data"/> and sets the default values.
        /// </summary>
        public WithQuotePostRequestBody_subscription_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description.CreateFromDiscriminatorValue); } },
                { "effective_date", n => { EffectiveDate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data_metadata.CreateFromDiscriminatorValue); } },
                { "trial_period_days", n => { TrialPeriodDays = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description>("description", Description);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date>("effective_date", EffectiveDate);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days>("trial_period_days", TrialPeriodDays);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_subscription_data_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_subscription_data_effective_date : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_effective_date();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_subscription_data_trial_period_days : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.WithQuotePostRequestBody_subscription_data_trial_period_days();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
