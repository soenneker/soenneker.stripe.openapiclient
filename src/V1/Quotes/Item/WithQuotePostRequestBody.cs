// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Quotes.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithQuotePostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner&apos;s Stripe account. There cannot be any line items with recurring prices when using this field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount? ApplicationFeeAmount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount ApplicationFeeAmount { get; set; }
#endif
        /// <summary>A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner&apos;s Stripe account. There must be at least 1 line item with a recurring price to use this field.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent? ApplicationFeePercent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent ApplicationFeePercent { get; set; }
#endif
        /// <summary>Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_automatic_tax? AutomaticTax { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_automatic_tax AutomaticTax { get; set; }
#endif
        /// <summary>Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_collection_method? CollectionMethod { get; set; }
        /// <summary>The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Customer { get; set; }
#nullable restore
#else
        public string Customer { get; set; }
#endif
        /// <summary>The tax rates that will apply to any line item that does not have `tax_rates` set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates? DefaultTaxRates { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates DefaultTaxRates { get; set; }
#endif
        /// <summary>A description that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description? Description { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description Description { get; set; }
#endif
        /// <summary>The discounts applied to the quote.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts? Discounts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts Discounts { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.</summary>
        public int? ExpiresAt { get; set; }
        /// <summary>A footer that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer? Footer { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer Footer { get; set; }
#endif
        /// <summary>A header that will be displayed on the quote PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header? Header { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header Header { get; set; }
#endif
        /// <summary>All invoices will be billed using the specified settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_invoice_settings? InvoiceSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_invoice_settings InvoiceSettings { get; set; }
#endif
        /// <summary>A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_line_items>? LineItems { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_line_items> LineItems { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>The account on behalf of which to charge.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of? OnBehalfOf { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of OnBehalfOf { get; set; }
#endif
        /// <summary>When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data? SubscriptionData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data SubscriptionData { get; set; }
#endif
        /// <summary>The data with which to automatically create a Transfer for each of the invoices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data? TransferData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data TransferData { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "application_fee_amount", n => { ApplicationFeeAmount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount.CreateFromDiscriminatorValue); } },
                { "application_fee_percent", n => { ApplicationFeePercent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent.CreateFromDiscriminatorValue); } },
                { "automatic_tax", n => { AutomaticTax = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_automatic_tax>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_automatic_tax.CreateFromDiscriminatorValue); } },
                { "collection_method", n => { CollectionMethod = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_collection_method>(); } },
                { "customer", n => { Customer = n.GetStringValue(); } },
                { "default_tax_rates", n => { DefaultTaxRates = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description.CreateFromDiscriminatorValue); } },
                { "discounts", n => { Discounts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "expires_at", n => { ExpiresAt = n.GetIntValue(); } },
                { "footer", n => { Footer = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer.CreateFromDiscriminatorValue); } },
                { "header", n => { Header = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header.CreateFromDiscriminatorValue); } },
                { "invoice_settings", n => { InvoiceSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_invoice_settings>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_invoice_settings.CreateFromDiscriminatorValue); } },
                { "line_items", n => { LineItems = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_line_items>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_line_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of.CreateFromDiscriminatorValue); } },
                { "subscription_data", n => { SubscriptionData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data.CreateFromDiscriminatorValue); } },
                { "transfer_data", n => { TransferData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount>("application_fee_amount", ApplicationFeeAmount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent>("application_fee_percent", ApplicationFeePercent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_automatic_tax>("automatic_tax", AutomaticTax);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_collection_method>("collection_method", CollectionMethod);
            writer.WriteStringValue("customer", Customer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates>("default_tax_rates", DefaultTaxRates);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description>("description", Description);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts>("discounts", Discounts);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteIntValue("expires_at", ExpiresAt);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer>("footer", Footer);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header>("header", Header);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_invoice_settings>("invoice_settings", InvoiceSettings);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_line_items>("line_items", LineItems);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_metadata>("metadata", Metadata);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of>("on_behalf_of", OnBehalfOf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_subscription_data>("subscription_data", SubscriptionData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data>("transfer_data", TransferData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_application_fee_amount : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_amount();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="double"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_application_fee_percent : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_application_fee_percent();
                if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_default_tax_rates : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? WithQuotePostRequestBodyDefaultTaxRatesString { get; set; }
#nullable restore
#else
            public string WithQuotePostRequestBodyDefaultTaxRatesString { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_default_tax_rates();
                if(parseNode.GetStringValue() is string withQuotePostRequestBodyDefaultTaxRatesStringValue)
                {
                    result.WithQuotePostRequestBodyDefaultTaxRatesString = withQuotePostRequestBodyDefaultTaxRatesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(WithQuotePostRequestBodyDefaultTaxRatesString != null)
                {
                    writer.WriteStringValue(null, WithQuotePostRequestBodyDefaultTaxRatesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_discounts : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1>? WithQuotePostRequestBodyDiscountsMember1 { get; set; }
#nullable restore
#else
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1> WithQuotePostRequestBodyDiscountsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_discounts();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1>(global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1.CreateFromDiscriminatorValue)?.AsList() is List<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1> withQuotePostRequestBodyDiscountsMember1Value)
                {
                    result.WithQuotePostRequestBodyDiscountsMember1 = withQuotePostRequestBodyDiscountsMember1Value;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(WithQuotePostRequestBodyDiscountsMember1 != null)
                {
                    writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_discountsMember1>(null, WithQuotePostRequestBodyDiscountsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_footer : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_footer();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_header : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_header();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_on_behalf_of : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_on_behalf_of();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithQuotePostRequestBody_transfer_data : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1? WithQuotePostRequestBodyTransferDataMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1 WithQuotePostRequestBodyTransferDataMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody.WithQuotePostRequestBody_transfer_data();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.WithQuotePostRequestBodyTransferDataMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(WithQuotePostRequestBodyTransferDataMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(WithQuotePostRequestBodyTransferDataMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Quotes.Item.WithQuotePostRequestBody_transfer_dataMember1>(null, WithQuotePostRequestBodyTransferDataMember1);
                }
            }
        }
    }
}
#pragma warning restore CS0618
