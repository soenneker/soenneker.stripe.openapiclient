// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Outbound_transfersPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Amount (in cents) to be transferred.</summary>
        public int? Amount { get; set; }
        /// <summary>Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>An arbitrary string attached to the object. Often useful for displaying to users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The PaymentMethod to use as the payment instrument for the OutboundTransfer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DestinationPaymentMethod { get; set; }
#nullable restore
#else
        public string DestinationPaymentMethod { get; set; }
#endif
        /// <summary>Hash used to generate the PaymentMethod to be used for this OutboundTransfer. Exclusive with `destination_payment_method`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_data? DestinationPaymentMethodData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_data DestinationPaymentMethodData { get; set; }
#endif
        /// <summary>Hash describing payment method configuration details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_options? DestinationPaymentMethodOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_options DestinationPaymentMethodOptions { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The FinancialAccount to pull funds from.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FinancialAccount { get; set; }
#nullable restore
#else
        public string FinancialAccount { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for `ach` transfers or 140 characters for `us_domestic_wire` transfers. The default value is &quot;transfer&quot;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "destination_payment_method", n => { DestinationPaymentMethod = n.GetStringValue(); } },
                { "destination_payment_method_data", n => { DestinationPaymentMethodData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_data>(global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_data.CreateFromDiscriminatorValue); } },
                { "destination_payment_method_options", n => { DestinationPaymentMethodOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_options>(global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_options.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "financial_account", n => { FinancialAccount = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteStringValue("currency", Currency);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("destination_payment_method", DestinationPaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_data>("destination_payment_method_data", DestinationPaymentMethodData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_destination_payment_method_options>("destination_payment_method_options", DestinationPaymentMethodOptions);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("financial_account", FinancialAccount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Treasury.Outbound_transfers.Outbound_transfersPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
        }
    }
}
#pragma warning restore CS0618
