// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithItemDeleteRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Delete all usage for the given subscription item. Allowed only when the current plan&apos;s `usage_type` is `metered`.</summary>
        public bool? ClearUsage { get; set; }
        /// <summary>Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item&apos;s `quantity` changes. The default value is `create_prorations`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody_proration_behavior? ProrationBehavior { get; set; }
        /// <summary>If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.</summary>
        public int? ProrationDate { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "clear_usage", n => { ClearUsage = n.GetBoolValue(); } },
                { "proration_behavior", n => { ProrationBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody_proration_behavior>(); } },
                { "proration_date", n => { ProrationDate = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("clear_usage", ClearUsage);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Item.WithItemDeleteRequestBody_proration_behavior>("proration_behavior", ProrationBehavior);
            writer.WriteIntValue("proration_date", ProrationDate);
        }
    }
}
#pragma warning restore CS0618
