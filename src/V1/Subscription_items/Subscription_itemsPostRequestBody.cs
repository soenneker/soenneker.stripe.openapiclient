// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Subscription_items
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Subscription_itemsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds? BillingThresholds { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds BillingThresholds { get; set; }
#endif
        /// <summary>The coupons to redeem into discounts for the subscription item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts? Discounts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts Discounts { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription&apos;s invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice&apos;s payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscriptionâ€™s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription&apos;s invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://docs.stripe.com/changelog/2019-03-14) to learn more.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_payment_behavior? PaymentBehavior { get; set; }
        /// <summary>The ID of the price object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Price { get; set; }
#nullable restore
#else
        public string Price { get; set; }
#endif
        /// <summary>Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_price_data? PriceData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_price_data PriceData { get; set; }
#endif
        /// <summary>Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item&apos;s `quantity` changes. The default value is `create_prorations`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_proration_behavior? ProrationBehavior { get; set; }
        /// <summary>If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.</summary>
        public int? ProrationDate { get; set; }
        /// <summary>The quantity you&apos;d like to apply to the subscription item you&apos;re creating.</summary>
        public int? Quantity { get; set; }
        /// <summary>The identifier of the subscription to modify.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subscription { get; set; }
#nullable restore
#else
        public string Subscription { get; set; }
#endif
        /// <summary>A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates? TaxRates { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates TaxRates { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "billing_thresholds", n => { BillingThresholds = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds.CreateFromDiscriminatorValue); } },
                { "discounts", n => { Discounts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "payment_behavior", n => { PaymentBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_payment_behavior>(); } },
                { "price", n => { Price = n.GetStringValue(); } },
                { "price_data", n => { PriceData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_price_data>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_price_data.CreateFromDiscriminatorValue); } },
                { "proration_behavior", n => { ProrationBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_proration_behavior>(); } },
                { "proration_date", n => { ProrationDate = n.GetIntValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "subscription", n => { Subscription = n.GetStringValue(); } },
                { "tax_rates", n => { TaxRates = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds>("billing_thresholds", BillingThresholds);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts>("discounts", Discounts);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_payment_behavior>("payment_behavior", PaymentBehavior);
            writer.WriteStringValue("price", Price);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_price_data>("price_data", PriceData);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_proration_behavior>("proration_behavior", ProrationBehavior);
            writer.WriteIntValue("proration_date", ProrationDate);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteStringValue("subscription", Subscription);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates>("tax_rates", TaxRates);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_itemsPostRequestBody_billing_thresholds : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1? SubscriptionItemsPostRequestBodyBillingThresholdsMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1 SubscriptionItemsPostRequestBodyBillingThresholdsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_billing_thresholds();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionItemsPostRequestBodyBillingThresholdsMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionItemsPostRequestBodyBillingThresholdsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionItemsPostRequestBodyBillingThresholdsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_billing_thresholdsMember1>(null, SubscriptionItemsPostRequestBodyBillingThresholdsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_itemsPostRequestBody_discounts : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1>? SubscriptionItemsPostRequestBodyDiscountsMember1 { get; set; }
#nullable restore
#else
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1> SubscriptionItemsPostRequestBodyDiscountsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_discounts();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1>(global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1.CreateFromDiscriminatorValue)?.AsList() is List<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1> subscriptionItemsPostRequestBodyDiscountsMember1Value)
                {
                    result.SubscriptionItemsPostRequestBodyDiscountsMember1 = subscriptionItemsPostRequestBodyDiscountsMember1Value;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(SubscriptionItemsPostRequestBodyDiscountsMember1 != null)
                {
                    writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody_discountsMember1>(null, SubscriptionItemsPostRequestBodyDiscountsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_itemsPostRequestBody_tax_rates : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? SubscriptionItemsPostRequestBodyTaxRatesString { get; set; }
#nullable restore
#else
            public string SubscriptionItemsPostRequestBodyTaxRatesString { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsPostRequestBody.Subscription_itemsPostRequestBody_tax_rates();
                if(parseNode.GetStringValue() is string subscriptionItemsPostRequestBodyTaxRatesStringValue)
                {
                    result.SubscriptionItemsPostRequestBodyTaxRatesString = subscriptionItemsPostRequestBodyTaxRatesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(SubscriptionItemsPostRequestBodyTaxRatesString != null)
                {
                    writer.WriteStringValue(null, SubscriptionItemsPostRequestBodyTaxRatesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
