// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Account_links
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Account_linksPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The identifier of the account to create an account link for.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Account { get; set; }
#nullable restore
#else
        public string Account { get; set; }
#endif
        /// <summary>The collect parameter is deprecated. Use `collection_options` instead.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collect? Collect { get; set; }
        /// <summary>Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collection_options? CollectionOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collection_options CollectionOptions { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link&apos;s URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RefreshUrl { get; set; }
#nullable restore
#else
        public string RefreshUrl { get; set; }
#endif
        /// <summary>The URL that the user will be redirected to upon leaving or completing the linked flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnUrl { get; set; }
#nullable restore
#else
        public string ReturnUrl { get; set; }
#endif
        /// <summary>The type of account link the user is requesting.You can create Account Links of type `account_update` only for connected accounts where your platform is responsible for collecting requirements, including Custom accounts. You can&apos;t create them for accounts that have access to a Stripe-hosted Dashboard. If you use [Connect embedded components](/connect/get-started-connect-embedded-components), you can include components that allow your connected accounts to update their own information. For an account without Stripe-hosted Dashboard access where Stripe is liable for negative balances, you must use embedded components.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_type? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetStringValue(); } },
                { "collect", n => { Collect = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collect>(); } },
                { "collection_options", n => { CollectionOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collection_options>(global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collection_options.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "refresh_url", n => { RefreshUrl = n.GetStringValue(); } },
                { "return_url", n => { ReturnUrl = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account", Account);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collect>("collect", Collect);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_collection_options>("collection_options", CollectionOptions);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("refresh_url", RefreshUrl);
            writer.WriteStringValue("return_url", ReturnUrl);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksPostRequestBody_type>("type", Type);
        }
    }
}
#pragma warning restore CS0618
