// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Shipping_rates
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Shipping_ratesPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_delivery_estimate? DeliveryEstimate { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_delivery_estimate DeliveryEstimate { get; set; }
#endif
        /// <summary>The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_fixed_amount? FixedAmount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_fixed_amount FixedAmount { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_tax_behavior? TaxBehavior { get; set; }
        /// <summary>A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxCode { get; set; }
#nullable restore
#else
        public string TaxCode { get; set; }
#endif
        /// <summary>The type of calculation to use on the shipping rate.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_type? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "delivery_estimate", n => { DeliveryEstimate = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_delivery_estimate>(global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_delivery_estimate.CreateFromDiscriminatorValue); } },
                { "display_name", n => { DisplayName = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "fixed_amount", n => { FixedAmount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_fixed_amount>(global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_fixed_amount.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "tax_behavior", n => { TaxBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_tax_behavior>(); } },
                { "tax_code", n => { TaxCode = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_delivery_estimate>("delivery_estimate", DeliveryEstimate);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_fixed_amount>("fixed_amount", FixedAmount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_tax_behavior>("tax_behavior", TaxBehavior);
            writer.WriteStringValue("tax_code", TaxCode);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesPostRequestBody_type>("type", Type);
        }
    }
}
#pragma warning restore CS0618
