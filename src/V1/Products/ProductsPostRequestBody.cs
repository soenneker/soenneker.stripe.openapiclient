// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Products
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProductsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Whether the product is currently available for purchase. Defaults to `true`.</summary>
        public bool? Active { get; set; }
        /// <summary>Data used to generate a new [Price](https://stripe.com/docs/api/prices) object. This Price will be set as the default price for this product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_default_price_data? DefaultPriceData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_default_price_data DefaultPriceData { get; set; }
#endif
        /// <summary>The product&apos;s description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>A list of up to 8 URLs of images for this product, meant to be displayable to the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Images { get; set; }
#nullable restore
#else
        public List<string> Images { get; set; }
#endif
        /// <summary>A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_marketing_features>? MarketingFeatures { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_marketing_features> MarketingFeatures { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>The product&apos;s name, meant to be displayable to the customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The dimensions of this product for shipping purposes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_package_dimensions? PackageDimensions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_package_dimensions PackageDimensions { get; set; }
#endif
        /// <summary>Whether this product is shipped (i.e., physical goods).</summary>
        public bool? Shippable { get; set; }
        /// <summary>An arbitrary string to be displayed on your customer&apos;s credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.This may be up to 22 characters. The statement description may not include `&lt;`, `&gt;`, `\`, `&quot;`, `&apos;` characters, and will appear on your customer&apos;s statement in capital letters. Non-ASCII characters are automatically stripped. It must contain at least one letter. Only used for subscription payments.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>A [tax code](https://stripe.com/docs/tax/tax-categories) ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxCode { get; set; }
#nullable restore
#else
        public string TaxCode { get; set; }
#endif
        /// <summary>A label that represents units of this product. When set, this will be included in customers&apos; receipts, invoices, Checkout, and the customer portal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitLabel { get; set; }
#nullable restore
#else
        public string UnitLabel { get; set; }
#endif
        /// <summary>A URL of a publicly-accessible webpage for this product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "default_price_data", n => { DefaultPriceData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_default_price_data>(global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_default_price_data.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "images", n => { Images = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "marketing_features", n => { MarketingFeatures = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_marketing_features>(global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_marketing_features.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "package_dimensions", n => { PackageDimensions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_package_dimensions>(global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_package_dimensions.CreateFromDiscriminatorValue); } },
                { "shippable", n => { Shippable = n.GetBoolValue(); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "tax_code", n => { TaxCode = n.GetStringValue(); } },
                { "unit_label", n => { UnitLabel = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_default_price_data>("default_price_data", DefaultPriceData);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<string>("images", Images);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_marketing_features>("marketing_features", MarketingFeatures);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsPostRequestBody_package_dimensions>("package_dimensions", PackageDimensions);
            writer.WriteBoolValue("shippable", Shippable);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
            writer.WriteStringValue("tax_code", TaxCode);
            writer.WriteStringValue("unit_label", UnitLabel);
            writer.WriteStringValue("url", Url);
        }
    }
}
#pragma warning restore CS0618
