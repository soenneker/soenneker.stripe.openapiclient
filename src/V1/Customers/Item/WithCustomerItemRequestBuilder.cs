// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Balance_transactions;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cards;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance_transactions;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Discount;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Funding_instructions;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Payment_methods;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Sources;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Subscriptions;
using Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Tax_ids;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Customers.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\customers\{customer}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithCustomerItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The balance_transactions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Balance_transactions.Balance_transactionsRequestBuilder Balance_transactions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Balance_transactions.Balance_transactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The bank_accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Bank_accountsRequestBuilder Bank_accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Bank_accountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cards property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cards.CardsRequestBuilder Cards
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cards.CardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cash_balance property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance.Cash_balanceRequestBuilder Cash_balance
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance.Cash_balanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cash_balance_transactions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance_transactions.Cash_balance_transactionsRequestBuilder Cash_balance_transactions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Cash_balance_transactions.Cash_balance_transactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The discount property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Discount.DiscountRequestBuilder Discount
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Discount.DiscountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The funding_instructions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Funding_instructions.Funding_instructionsRequestBuilder Funding_instructions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Funding_instructions.Funding_instructionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_methods property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Payment_methods.Payment_methodsRequestBuilder Payment_methods
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Payment_methods.Payment_methodsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sources property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Sources.SourcesRequestBuilder Sources
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Sources.SourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscriptions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Subscriptions.SubscriptionsRequestBuilder Subscriptions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Subscriptions.SubscriptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tax_ids property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Tax_ids.Tax_idsRequestBuilder Tax_ids
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Tax_ids.Tax_idsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCustomerItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/customers/{customer}{?expand*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithCustomerItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/customers/{customer}{?expand*}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer?> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer> DeleteAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToDeleteRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Retrieves a Customer object.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse?> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse>(requestInfo, global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the &lt;strong&gt;source&lt;/strong&gt; parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the &lt;strong&gt;source&lt;/strong&gt; parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the &lt;code&gt;past_due&lt;/code&gt; state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the &lt;strong&gt;default_source&lt;/strong&gt; for a customer will not trigger this behavior.&lt;/p&gt;&lt;p&gt;This request accepts mostly the same arguments as the customer creation call.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Customer?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Customer> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Customer>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Customer.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerDeleteRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Retrieves a Customer object.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the &lt;strong&gt;source&lt;/strong&gt; parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the &lt;strong&gt;source&lt;/strong&gt; parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the &lt;code&gt;past_due&lt;/code&gt; state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the &lt;strong&gt;default_source&lt;/strong&gt; for a customer will not trigger this behavior.&lt;/p&gt;&lt;p&gt;This request accepts mostly the same arguments as the customer creation call.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithCustomerGetResponse : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer? Customer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Customer Customer { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer? DeletedCustomer { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer DeletedCustomer { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.WithCustomerItemRequestBuilder.WithCustomerGetResponse();
                result.Customer = new global::Soenneker.Stripe.OpenApiClient.Models.Customer();
                result.DeletedCustomer = new global::Soenneker.Stripe.OpenApiClient.Models.Deleted_customer();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(Customer != null || DeletedCustomer != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(Customer, DeletedCustomer);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.Models.Customer>(null, Customer, DeletedCustomer);
            }
        }
        /// <summary>
        /// &lt;p&gt;Retrieves a Customer object.&lt;/p&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithCustomerItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string[] Expand { get; set; }
#endif
        }
    }
}
#pragma warning restore CS0618
