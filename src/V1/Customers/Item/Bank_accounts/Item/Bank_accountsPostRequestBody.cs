// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bank_accountsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The name of the person or business that owns the bank account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountHolderName { get; set; }
#nullable restore
#else
        public string AccountHolderName { get; set; }
#endif
        /// <summary>The type of entity that holds the account. This can be either `individual` or `company`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_account_holder_type? AccountHolderType { get; set; }
        /// <summary>City/District/Suburb/Town/Village.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressCity { get; set; }
#nullable restore
#else
        public string AddressCity { get; set; }
#endif
        /// <summary>Billing address country, if provided when creating card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressCountry { get; set; }
#nullable restore
#else
        public string AddressCountry { get; set; }
#endif
        /// <summary>Address line 1 (Street address/PO Box/Company name).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine1 { get; set; }
#nullable restore
#else
        public string AddressLine1 { get; set; }
#endif
        /// <summary>Address line 2 (Apartment/Suite/Unit/Building).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressLine2 { get; set; }
#nullable restore
#else
        public string AddressLine2 { get; set; }
#endif
        /// <summary>State/County/Province/Region.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressState { get; set; }
#nullable restore
#else
        public string AddressState { get; set; }
#endif
        /// <summary>ZIP or postal code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AddressZip { get; set; }
#nullable restore
#else
        public string AddressZip { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Two digit number representing the card’s expiration month.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpMonth { get; set; }
#nullable restore
#else
        public string ExpMonth { get; set; }
#endif
        /// <summary>Four digit number representing the card’s expiration year.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpYear { get; set; }
#nullable restore
#else
        public string ExpYear { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metadata { get; set; }
#nullable restore
#else
        public string Metadata { get; set; }
#endif
        /// <summary>Cardholder name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The owner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_owner? Owner { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_owner Owner { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_holder_name", n => { AccountHolderName = n.GetStringValue(); } },
                { "account_holder_type", n => { AccountHolderType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_account_holder_type>(); } },
                { "address_city", n => { AddressCity = n.GetStringValue(); } },
                { "address_country", n => { AddressCountry = n.GetStringValue(); } },
                { "address_line1", n => { AddressLine1 = n.GetStringValue(); } },
                { "address_line2", n => { AddressLine2 = n.GetStringValue(); } },
                { "address_state", n => { AddressState = n.GetStringValue(); } },
                { "address_zip", n => { AddressZip = n.GetStringValue(); } },
                { "exp_month", n => { ExpMonth = n.GetStringValue(); } },
                { "exp_year", n => { ExpYear = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "metadata", n => { Metadata = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "owner", n => { Owner = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_owner>(global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_owner.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_holder_name", AccountHolderName);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_account_holder_type>("account_holder_type", AccountHolderType);
            writer.WriteStringValue("address_city", AddressCity);
            writer.WriteStringValue("address_country", AddressCountry);
            writer.WriteStringValue("address_line1", AddressLine1);
            writer.WriteStringValue("address_line2", AddressLine2);
            writer.WriteStringValue("address_state", AddressState);
            writer.WriteStringValue("address_zip", AddressZip);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("exp_month", ExpMonth);
            writer.WriteStringValue("exp_year", ExpYear);
            writer.WriteStringValue("metadata", Metadata);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Customers.Item.Bank_accounts.Item.Bank_accountsPostRequestBody_owner>("owner", Owner);
        }
    }
}
#pragma warning restore CS0618
