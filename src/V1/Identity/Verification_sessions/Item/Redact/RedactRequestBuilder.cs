// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models.Identity;
using Soenneker.Stripe.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\identity\verification_sessions\{session}\redact
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RedactRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RedactRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/identity/verification_sessions/{session}/redact", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RedactRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/identity/verification_sessions/{session}/redact", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Redact a VerificationSession to remove all collected information from Stripe. This will redactthe VerificationSession and all objects related to it, including VerificationReports, Events,request logs, etc.&lt;/p&gt;&lt;p&gt;A VerificationSession object can be redacted when it is in &lt;code&gt;requires_input&lt;/code&gt; or &lt;code&gt;verified&lt;/code&gt;&lt;a href=&quot;/docs/identity/how-sessions-work&quot;&gt;status&lt;/a&gt;. Redacting a VerificationSession in &lt;code&gt;requires_action&lt;/code&gt;state will automatically cancel it.&lt;/p&gt;&lt;p&gt;The redaction process may take up to four days. When the redaction process is in progress, theVerificationSession’s &lt;code&gt;redaction.status&lt;/code&gt; field will be set to &lt;code&gt;processing&lt;/code&gt;; when the process isfinished, it will change to &lt;code&gt;redacted&lt;/code&gt; and an &lt;code&gt;identity.verification_session.redacted&lt;/code&gt; eventwill be emitted.&lt;/p&gt;&lt;p&gt;Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all thefields that contain personal data will be replaced by the string &lt;code&gt;[redacted]&lt;/code&gt; or a similarplaceholder. The &lt;code&gt;metadata&lt;/code&gt; field will also be erased. Redacted objects cannot be updated orused for any purpose.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs/identity/verification-sessions#redact&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Identity.Verification_session"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Identity.Verification_session?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Identity.Verification_session> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Identity.Verification_session>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Identity.Verification_session.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Redact a VerificationSession to remove all collected information from Stripe. This will redactthe VerificationSession and all objects related to it, including VerificationReports, Events,request logs, etc.&lt;/p&gt;&lt;p&gt;A VerificationSession object can be redacted when it is in &lt;code&gt;requires_input&lt;/code&gt; or &lt;code&gt;verified&lt;/code&gt;&lt;a href=&quot;/docs/identity/how-sessions-work&quot;&gt;status&lt;/a&gt;. Redacting a VerificationSession in &lt;code&gt;requires_action&lt;/code&gt;state will automatically cancel it.&lt;/p&gt;&lt;p&gt;The redaction process may take up to four days. When the redaction process is in progress, theVerificationSession’s &lt;code&gt;redaction.status&lt;/code&gt; field will be set to &lt;code&gt;processing&lt;/code&gt;; when the process isfinished, it will change to &lt;code&gt;redacted&lt;/code&gt; and an &lt;code&gt;identity.verification_session.redacted&lt;/code&gt; eventwill be emitted.&lt;/p&gt;&lt;p&gt;Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all thefields that contain personal data will be replaced by the string &lt;code&gt;[redacted]&lt;/code&gt; or a similarplaceholder. The &lt;code&gt;metadata&lt;/code&gt; field will also be erased. Redacted objects cannot be updated orused for any purpose.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs/identity/verification-sessions#redact&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Identity.Verification_sessions.Item.Redact.RedactRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
