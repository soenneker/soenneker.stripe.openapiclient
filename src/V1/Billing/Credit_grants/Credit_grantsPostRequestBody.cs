// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Credit_grantsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Amount of this credit grant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_amount? Amount { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_amount Amount { get; set; }
#endif
        /// <summary>Configuration specifying what this credit grant applies to. We currently only support `metered` prices that have a [Billing Meter](https://docs.stripe.com/api/billing/meter) attached to them.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_applicability_config? ApplicabilityConfig { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_applicability_config ApplicabilityConfig { get; set; }
#endif
        /// <summary>The category of this credit grant.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_category? Category { get; set; }
        /// <summary>ID of the customer to receive the billing credits.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Customer { get; set; }
#nullable restore
#else
        public string Customer { get; set; }
#endif
        /// <summary>The time when the billing credits become effective-when they&apos;re eligible for use. It defaults to the current timestamp if not specified.</summary>
        public int? EffectiveAt { get; set; }
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The time when the billing credits expire. If not specified, the billing credits don&apos;t expire.</summary>
        public int? ExpiresAt { get; set; }
        /// <summary>Set of key-value pairs that you can attach to an object. You can use this to store additional information about the object (for example, cost basis) in a structured format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>A descriptive name shown in the Dashboard.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The desired priority for applying this credit grant. If not specified, it will be set to the default value of 50. The highest priority is 0 and the lowest is 100.</summary>
        public int? Priority { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_amount>(global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_amount.CreateFromDiscriminatorValue); } },
                { "applicability_config", n => { ApplicabilityConfig = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_applicability_config>(global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_applicability_config.CreateFromDiscriminatorValue); } },
                { "category", n => { Category = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_category>(); } },
                { "customer", n => { Customer = n.GetStringValue(); } },
                { "effective_at", n => { EffectiveAt = n.GetIntValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "expires_at", n => { ExpiresAt = n.GetIntValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "priority", n => { Priority = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_amount>("amount", Amount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_applicability_config>("applicability_config", ApplicabilityConfig);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_category>("category", Category);
            writer.WriteStringValue("customer", Customer);
            writer.WriteIntValue("effective_at", EffectiveAt);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteIntValue("expires_at", ExpiresAt);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Billing.Credit_grants.Credit_grantsPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("priority", Priority);
        }
    }
}
#pragma warning restore CS0618
