// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithCardholderPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The cardholder&apos;s billing address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_billing? Billing { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_billing Billing { get; set; }
#endif
        /// <summary>Additional information about a `company` cardholder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_company? Company { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_company Company { get; set; }
#endif
        /// <summary>The cardholder&apos;s email address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Additional information about an `individual` cardholder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_individual? Individual { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_individual Individual { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>The cardholder&apos;s phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>The cardholderâ€™s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`. This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_preferred_locales?>? PreferredLocales { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_preferred_locales?> PreferredLocales { get; set; }
#endif
        /// <summary>Rules that control spending across this cardholder&apos;s cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_spending_controls? SpendingControls { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_spending_controls SpendingControls { get; set; }
#endif
        /// <summary>Specifies whether to permit authorizations on this cardholder&apos;s cards.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_status? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "billing", n => { Billing = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_billing>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_billing.CreateFromDiscriminatorValue); } },
                { "company", n => { Company = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_company>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_company.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "individual", n => { Individual = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_individual>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_individual.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "phone_number", n => { PhoneNumber = n.GetStringValue(); } },
                { "preferred_locales", n => { PreferredLocales = n.GetCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_preferred_locales>()?.AsList(); } },
                { "spending_controls", n => { SpendingControls = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_spending_controls>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_spending_controls.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_billing>("billing", Billing);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_company>("company", Company);
            writer.WriteStringValue("email", Email);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_individual>("individual", Individual);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("phone_number", PhoneNumber);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_preferred_locales>("preferred_locales", PreferredLocales);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_spending_controls>("spending_controls", SpendingControls);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.Item.WithCardholderPostRequestBody_status>("status", Status);
        }
    }
}
#pragma warning restore CS0618
