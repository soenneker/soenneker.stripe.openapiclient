// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithDisputePostRequestBody_evidence_otherMember1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The additional_documentation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation? AdditionalDocumentation { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation AdditionalDocumentation { get; set; }
#endif
        /// <summary>The explanation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation? Explanation { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation Explanation { get; set; }
#endif
        /// <summary>The product_description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description? ProductDescription { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description ProductDescription { get; set; }
#endif
        /// <summary>The product_type property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1_product_type? ProductType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1"/> and sets the default values.
        /// </summary>
        public WithDisputePostRequestBody_evidence_otherMember1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additional_documentation", n => { AdditionalDocumentation = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation.CreateFromDiscriminatorValue); } },
                { "explanation", n => { Explanation = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation.CreateFromDiscriminatorValue); } },
                { "product_description", n => { ProductDescription = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description.CreateFromDiscriminatorValue); } },
                { "product_type", n => { ProductType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1_product_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation>("additional_documentation", AdditionalDocumentation);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation>("explanation", Explanation);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description>("product_description", ProductDescription);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1_product_type>("product_type", ProductType);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithDisputePostRequestBody_evidence_otherMember1_additional_documentation : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_additional_documentation();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithDisputePostRequestBody_evidence_otherMember1_explanation : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_explanation();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithDisputePostRequestBody_evidence_otherMember1_product_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.Item.WithDisputePostRequestBody_evidence_otherMember1.WithDisputePostRequestBody_evidence_otherMember1_product_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
