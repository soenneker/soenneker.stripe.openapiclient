// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Authorizations;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Personalization_designs;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Physical_bundles;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Settlements;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Tokens;
using Soenneker.Stripe.OpenApiClient.V1.Issuing.Transactions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Issuing
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\issuing
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IssuingRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The authorizations property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Authorizations.AuthorizationsRequestBuilder Authorizations
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Authorizations.AuthorizationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cardholders property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.CardholdersRequestBuilder Cardholders
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cardholders.CardholdersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cards property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsRequestBuilder Cards
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The disputes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.DisputesRequestBuilder Disputes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Disputes.DisputesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The personalization_designs property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Personalization_designs.Personalization_designsRequestBuilder Personalization_designs
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Personalization_designs.Personalization_designsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The physical_bundles property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Physical_bundles.Physical_bundlesRequestBuilder Physical_bundles
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Physical_bundles.Physical_bundlesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The settlements property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Settlements.SettlementsRequestBuilder Settlements
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Settlements.SettlementsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tokens property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Tokens.TokensRequestBuilder Tokens
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Tokens.TokensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transactions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Transactions.TransactionsRequestBuilder Transactions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Transactions.TransactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.IssuingRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssuingRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/issuing", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.IssuingRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public IssuingRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/issuing", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
