// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WithCardPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Reason why the `status` of this card is `canceled`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_cancellation_reason? CancellationReason { get; set; }
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metadata { get; set; }
#nullable restore
#else
        public string Metadata { get; set; }
#endif
        /// <summary>The personalization_design property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonalizationDesign { get; set; }
#nullable restore
#else
        public string PersonalizationDesign { get; set; }
#endif
        /// <summary>The desired new PIN for this card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_pin? Pin { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_pin Pin { get; set; }
#endif
        /// <summary>Updated shipping information for the card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_shipping? Shipping { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_shipping Shipping { get; set; }
#endif
        /// <summary>Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_spending_controls? SpendingControls { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_spending_controls SpendingControls { get; set; }
#endif
        /// <summary>Dictates whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. If this card is being canceled because it was lost or stolen, this information should be provided as `cancellation_reason`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_status? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cancellation_reason", n => { CancellationReason = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_cancellation_reason>(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "metadata", n => { Metadata = n.GetStringValue(); } },
                { "personalization_design", n => { PersonalizationDesign = n.GetStringValue(); } },
                { "pin", n => { Pin = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_pin>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_pin.CreateFromDiscriminatorValue); } },
                { "shipping", n => { Shipping = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_shipping>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_shipping.CreateFromDiscriminatorValue); } },
                { "spending_controls", n => { SpendingControls = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_spending_controls>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_spending_controls.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_cancellation_reason>("cancellation_reason", CancellationReason);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("metadata", Metadata);
            writer.WriteStringValue("personalization_design", PersonalizationDesign);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_pin>("pin", Pin);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_shipping>("shipping", Shipping);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_spending_controls>("spending_controls", SpendingControls);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.Item.WithCardPostRequestBody_status>("status", Status);
        }
    }
}
#pragma warning restore CS0618
