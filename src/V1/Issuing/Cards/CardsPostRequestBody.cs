// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CardsPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) object with which the card will be associated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cardholder { get; set; }
#nullable restore
#else
        public string Cardholder { get; set; }
#endif
        /// <summary>The currency for the card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The desired expiration month (1-12) for this card if [specifying a custom expiration date](/issuing/cards/virtual/issue-cards?testing-method=with-code#exp-dates).</summary>
        public int? ExpMonth { get; set; }
        /// <summary>The desired 4-digit expiration year for this card if [specifying a custom expiration date](/issuing/cards/virtual/issue-cards?testing-method=with-code#exp-dates).</summary>
        public int? ExpYear { get; set; }
        /// <summary>The new financial account ID the card will be associated with. This field allows a card to be reassigned to a different financial account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FinancialAccount { get; set; }
#nullable restore
#else
        public string FinancialAccount { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>The personalization design object belonging to this card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonalizationDesign { get; set; }
#nullable restore
#else
        public string PersonalizationDesign { get; set; }
#endif
        /// <summary>The desired PIN for this card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_pin? Pin { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_pin Pin { get; set; }
#endif
        /// <summary>The card this is meant to be a replacement for (if any).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReplacementFor { get; set; }
#nullable restore
#else
        public string ReplacementFor { get; set; }
#endif
        /// <summary>If `replacement_for` is specified, this should indicate why that card is being replaced.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_replacement_reason? ReplacementReason { get; set; }
        /// <summary>The second line to print on the card. Max length: 24 characters.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line? SecondLine { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line SecondLine { get; set; }
#endif
        /// <summary>The address where the card will be shipped.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_shipping? Shipping { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_shipping Shipping { get; set; }
#endif
        /// <summary>Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_spending_controls? SpendingControls { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_spending_controls SpendingControls { get; set; }
#endif
        /// <summary>Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_status? Status { get; set; }
        /// <summary>The type of card to issue. Possible values are `physical` or `virtual`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_type? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cardholder", n => { Cardholder = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "exp_month", n => { ExpMonth = n.GetIntValue(); } },
                { "exp_year", n => { ExpYear = n.GetIntValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "financial_account", n => { FinancialAccount = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "personalization_design", n => { PersonalizationDesign = n.GetStringValue(); } },
                { "pin", n => { Pin = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_pin>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_pin.CreateFromDiscriminatorValue); } },
                { "replacement_for", n => { ReplacementFor = n.GetStringValue(); } },
                { "replacement_reason", n => { ReplacementReason = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_replacement_reason>(); } },
                { "second_line", n => { SecondLine = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line.CreateFromDiscriminatorValue); } },
                { "shipping", n => { Shipping = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_shipping>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_shipping.CreateFromDiscriminatorValue); } },
                { "spending_controls", n => { SpendingControls = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_spending_controls>(global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_spending_controls.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_status>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cardholder", Cardholder);
            writer.WriteStringValue("currency", Currency);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteIntValue("exp_month", ExpMonth);
            writer.WriteIntValue("exp_year", ExpYear);
            writer.WriteStringValue("financial_account", FinancialAccount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("personalization_design", PersonalizationDesign);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_pin>("pin", Pin);
            writer.WriteStringValue("replacement_for", ReplacementFor);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_replacement_reason>("replacement_reason", ReplacementReason);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line>("second_line", SecondLine);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_shipping>("shipping", Shipping);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_spending_controls>("spending_controls", SpendingControls);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_status>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody_type>("type", Type);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CardsPostRequestBody_second_line : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.Cards.CardsPostRequestBody.CardsPostRequestBody_second_line();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
