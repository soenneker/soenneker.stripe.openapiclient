// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Create_reversalPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>A flat amount to reverse across the entire transaction, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) in negative. This value represents the total amount to refund from the transaction, including taxes.</summary>
        public int? FlatAmount { get; set; }
        /// <summary>The line item amounts to reverse.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_line_items>? LineItems { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_line_items> LineItems { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>If `partial`, the provided line item or shipping cost amounts are reversed. If `full`, the original transaction is fully reversed.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_mode? Mode { get; set; }
        /// <summary>The ID of the Transaction to partially or fully reverse.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginalTransaction { get; set; }
#nullable restore
#else
        public string OriginalTransaction { get; set; }
#endif
        /// <summary>A custom identifier for this reversal, such as `myOrder_123-refund_1`, which must be unique across all transactions. The reference helps identify this reversal transaction in exported [tax reports](https://stripe.com/docs/tax/reports).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reference { get; set; }
#nullable restore
#else
        public string Reference { get; set; }
#endif
        /// <summary>The shipping cost to reverse.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_shipping_cost? ShippingCost { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_shipping_cost ShippingCost { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "flat_amount", n => { FlatAmount = n.GetIntValue(); } },
                { "line_items", n => { LineItems = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_line_items>(global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_line_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "mode", n => { Mode = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_mode>(); } },
                { "original_transaction", n => { OriginalTransaction = n.GetStringValue(); } },
                { "reference", n => { Reference = n.GetStringValue(); } },
                { "shipping_cost", n => { ShippingCost = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_shipping_cost>(global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_shipping_cost.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteIntValue("flat_amount", FlatAmount);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_line_items>("line_items", LineItems);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_mode>("mode", Mode);
            writer.WriteStringValue("original_transaction", OriginalTransaction);
            writer.WriteStringValue("reference", Reference);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.Create_reversal.Create_reversalPostRequestBody_shipping_cost>("shipping_cost", ShippingCost);
        }
    }
}
#pragma warning restore CS0618
