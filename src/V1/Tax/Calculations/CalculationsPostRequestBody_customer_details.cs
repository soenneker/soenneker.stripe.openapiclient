// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations
{
    /// <summary>
    /// Details about the customer, including address and tax IDs.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CalculationsPostRequestBody_customer_details : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address? Address { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address Address { get; set; }
#endif
        /// <summary>The address_source property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address_source? AddressSource { get; set; }
        /// <summary>The ip_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IpAddress { get; set; }
#nullable restore
#else
        public string IpAddress { get; set; }
#endif
        /// <summary>The taxability_override property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_taxability_override? TaxabilityOverride { get; set; }
        /// <summary>The tax_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_tax_ids>? TaxIds { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_tax_ids> TaxIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details"/> and sets the default values.
        /// </summary>
        public CalculationsPostRequestBody_customer_details()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address>(global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address.CreateFromDiscriminatorValue); } },
                { "address_source", n => { AddressSource = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address_source>(); } },
                { "ip_address", n => { IpAddress = n.GetStringValue(); } },
                { "tax_ids", n => { TaxIds = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_tax_ids>(global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_tax_ids.CreateFromDiscriminatorValue)?.AsList(); } },
                { "taxability_override", n => { TaxabilityOverride = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_taxability_override>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address>("address", Address);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_address_source>("address_source", AddressSource);
            writer.WriteStringValue("ip_address", IpAddress);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_taxability_override>("taxability_override", TaxabilityOverride);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsPostRequestBody_customer_details_tax_ids>("tax_ids", TaxIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
