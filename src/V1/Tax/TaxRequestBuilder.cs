// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations;
using Soenneker.Stripe.OpenApiClient.V1.Tax.Registrations;
using Soenneker.Stripe.OpenApiClient.V1.Tax.Settings;
using Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Tax
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\tax
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TaxRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The calculations property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsRequestBuilder Calculations
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Calculations.CalculationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The registrations property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Registrations.RegistrationsRequestBuilder Registrations
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Registrations.RegistrationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The settings property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Settings.SettingsRequestBuilder Settings
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Settings.SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transactions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.TransactionsRequestBuilder Transactions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax.Transactions.TransactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Tax.TaxRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TaxRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/tax", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Tax.TaxRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TaxRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/tax", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
