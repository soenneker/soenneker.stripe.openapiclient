// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.V1.Account;
using Soenneker.Stripe.OpenApiClient.V1.Account_links;
using Soenneker.Stripe.OpenApiClient.V1.Account_sessions;
using Soenneker.Stripe.OpenApiClient.V1.Accounts;
using Soenneker.Stripe.OpenApiClient.V1.Apple_pay;
using Soenneker.Stripe.OpenApiClient.V1.Application_fees;
using Soenneker.Stripe.OpenApiClient.V1.Apps;
using Soenneker.Stripe.OpenApiClient.V1.Balance;
using Soenneker.Stripe.OpenApiClient.V1.Balance_transactions;
using Soenneker.Stripe.OpenApiClient.V1.Billing;
using Soenneker.Stripe.OpenApiClient.V1.Billing_portal;
using Soenneker.Stripe.OpenApiClient.V1.Charges;
using Soenneker.Stripe.OpenApiClient.V1.Checkout;
using Soenneker.Stripe.OpenApiClient.V1.Climate;
using Soenneker.Stripe.OpenApiClient.V1.Confirmation_tokens;
using Soenneker.Stripe.OpenApiClient.V1.Country_specs;
using Soenneker.Stripe.OpenApiClient.V1.Coupons;
using Soenneker.Stripe.OpenApiClient.V1.Credit_notes;
using Soenneker.Stripe.OpenApiClient.V1.Customer_sessions;
using Soenneker.Stripe.OpenApiClient.V1.Customers;
using Soenneker.Stripe.OpenApiClient.V1.Disputes;
using Soenneker.Stripe.OpenApiClient.V1.Entitlements;
using Soenneker.Stripe.OpenApiClient.V1.Ephemeral_keys;
using Soenneker.Stripe.OpenApiClient.V1.Events;
using Soenneker.Stripe.OpenApiClient.V1.Exchange_rates;
using Soenneker.Stripe.OpenApiClient.V1.External_accounts;
using Soenneker.Stripe.OpenApiClient.V1.File_links;
using Soenneker.Stripe.OpenApiClient.V1.Files;
using Soenneker.Stripe.OpenApiClient.V1.Financial_connections;
using Soenneker.Stripe.OpenApiClient.V1.Forwarding;
using Soenneker.Stripe.OpenApiClient.V1.Identity;
using Soenneker.Stripe.OpenApiClient.V1.Invoice_payments;
using Soenneker.Stripe.OpenApiClient.V1.Invoice_rendering_templates;
using Soenneker.Stripe.OpenApiClient.V1.Invoiceitems;
using Soenneker.Stripe.OpenApiClient.V1.Invoices;
using Soenneker.Stripe.OpenApiClient.V1.Issuing;
using Soenneker.Stripe.OpenApiClient.V1.Link_account_sessions;
using Soenneker.Stripe.OpenApiClient.V1.Linked_accounts;
using Soenneker.Stripe.OpenApiClient.V1.Mandates;
using Soenneker.Stripe.OpenApiClient.V1.Payment_intents;
using Soenneker.Stripe.OpenApiClient.V1.Payment_links;
using Soenneker.Stripe.OpenApiClient.V1.Payment_method_configurations;
using Soenneker.Stripe.OpenApiClient.V1.Payment_method_domains;
using Soenneker.Stripe.OpenApiClient.V1.Payment_methods;
using Soenneker.Stripe.OpenApiClient.V1.Payouts;
using Soenneker.Stripe.OpenApiClient.V1.Plans;
using Soenneker.Stripe.OpenApiClient.V1.Prices;
using Soenneker.Stripe.OpenApiClient.V1.Products;
using Soenneker.Stripe.OpenApiClient.V1.Promotion_codes;
using Soenneker.Stripe.OpenApiClient.V1.Quotes;
using Soenneker.Stripe.OpenApiClient.V1.Radar;
using Soenneker.Stripe.OpenApiClient.V1.Refunds;
using Soenneker.Stripe.OpenApiClient.V1.Reporting;
using Soenneker.Stripe.OpenApiClient.V1.Reviews;
using Soenneker.Stripe.OpenApiClient.V1.Setup_attempts;
using Soenneker.Stripe.OpenApiClient.V1.Setup_intents;
using Soenneker.Stripe.OpenApiClient.V1.Shipping_rates;
using Soenneker.Stripe.OpenApiClient.V1.Sigma;
using Soenneker.Stripe.OpenApiClient.V1.Sources;
using Soenneker.Stripe.OpenApiClient.V1.Subscription_items;
using Soenneker.Stripe.OpenApiClient.V1.Subscription_schedules;
using Soenneker.Stripe.OpenApiClient.V1.Subscriptions;
using Soenneker.Stripe.OpenApiClient.V1.Tax;
using Soenneker.Stripe.OpenApiClient.V1.Tax_codes;
using Soenneker.Stripe.OpenApiClient.V1.Tax_ids;
using Soenneker.Stripe.OpenApiClient.V1.Tax_rates;
using Soenneker.Stripe.OpenApiClient.V1.Terminal;
using Soenneker.Stripe.OpenApiClient.V1.Test_helpers;
using Soenneker.Stripe.OpenApiClient.V1.Tokens;
using Soenneker.Stripe.OpenApiClient.V1.Topups;
using Soenneker.Stripe.OpenApiClient.V1.Transfers;
using Soenneker.Stripe.OpenApiClient.V1.Treasury;
using Soenneker.Stripe.OpenApiClient.V1.Webhook_endpoints;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1
{
    /// <summary>
    /// Builds and executes requests for operations under \v1
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1RequestBuilder : BaseRequestBuilder
    {
        /// <summary>The account property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Account.AccountRequestBuilder Account
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Account.AccountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The account_links property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksRequestBuilder Account_links
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Account_links.Account_linksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The account_sessions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Account_sessions.Account_sessionsRequestBuilder Account_sessions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Account_sessions.Account_sessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsRequestBuilder Accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Accounts.AccountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The apple_pay property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Apple_pay.Apple_payRequestBuilder Apple_pay
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Apple_pay.Apple_payRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The application_fees property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Application_fees.Application_feesRequestBuilder Application_fees
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Application_fees.Application_feesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The apps property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Apps.AppsRequestBuilder Apps
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Apps.AppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The balance property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Balance.BalanceRequestBuilder Balance
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Balance.BalanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The balance_transactions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Balance_transactions.Balance_transactionsRequestBuilder Balance_transactions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Balance_transactions.Balance_transactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The billing property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing.BillingRequestBuilder Billing
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Billing.BillingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The billing_portal property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Billing_portalRequestBuilder Billing_portal
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Billing_portal.Billing_portalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The charges property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Charges.ChargesRequestBuilder Charges
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Charges.ChargesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The checkout property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Checkout.CheckoutRequestBuilder Checkout
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Checkout.CheckoutRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The climate property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Climate.ClimateRequestBuilder Climate
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Climate.ClimateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The confirmation_tokens property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Confirmation_tokens.Confirmation_tokensRequestBuilder Confirmation_tokens
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Confirmation_tokens.Confirmation_tokensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The country_specs property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Country_specs.Country_specsRequestBuilder Country_specs
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Country_specs.Country_specsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The coupons property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Coupons.CouponsRequestBuilder Coupons
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Coupons.CouponsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The credit_notes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder Credit_notes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customer_sessions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customer_sessions.Customer_sessionsRequestBuilder Customer_sessions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customer_sessions.Customer_sessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customers property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Customers.CustomersRequestBuilder Customers
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Customers.CustomersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The disputes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Disputes.DisputesRequestBuilder Disputes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Disputes.DisputesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The entitlements property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Entitlements.EntitlementsRequestBuilder Entitlements
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Entitlements.EntitlementsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ephemeral_keys property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Ephemeral_keys.Ephemeral_keysRequestBuilder Ephemeral_keys
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Ephemeral_keys.Ephemeral_keysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The events property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Events.EventsRequestBuilder Events
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The exchange_rates property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Exchange_rates.Exchange_ratesRequestBuilder Exchange_rates
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Exchange_rates.Exchange_ratesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The external_accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.External_accounts.External_accountsRequestBuilder External_accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.External_accounts.External_accountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The file_links property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.File_links.File_linksRequestBuilder File_links
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.File_links.File_linksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The files property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Files.FilesRequestBuilder Files
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Files.FilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The financial_connections property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Financial_connectionsRequestBuilder Financial_connections
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Financial_connections.Financial_connectionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forwarding property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Forwarding.ForwardingRequestBuilder Forwarding
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Forwarding.ForwardingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The identity property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Identity.IdentityRequestBuilder Identity
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Identity.IdentityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoice_payments property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoice_payments.Invoice_paymentsRequestBuilder Invoice_payments
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoice_payments.Invoice_paymentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoice_rendering_templates property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoice_rendering_templates.Invoice_rendering_templatesRequestBuilder Invoice_rendering_templates
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoice_rendering_templates.Invoice_rendering_templatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoiceitems property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.InvoiceitemsRequestBuilder Invoiceitems
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoiceitems.InvoiceitemsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invoices property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Invoices.InvoicesRequestBuilder Invoices
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Invoices.InvoicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The issuing property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Issuing.IssuingRequestBuilder Issuing
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Issuing.IssuingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The link_account_sessions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Link_account_sessions.Link_account_sessionsRequestBuilder Link_account_sessions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Link_account_sessions.Link_account_sessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The linked_accounts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Linked_accounts.Linked_accountsRequestBuilder Linked_accounts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Linked_accounts.Linked_accountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mandates property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Mandates.MandatesRequestBuilder Mandates
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Mandates.MandatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_intents property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Payment_intentsRequestBuilder Payment_intents
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_intents.Payment_intentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_links property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_links.Payment_linksRequestBuilder Payment_links
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_links.Payment_linksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_method_configurations property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_method_configurations.Payment_method_configurationsRequestBuilder Payment_method_configurations
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_method_configurations.Payment_method_configurationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_method_domains property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_method_domains.Payment_method_domainsRequestBuilder Payment_method_domains
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_method_domains.Payment_method_domainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment_methods property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Payment_methodsRequestBuilder Payment_methods
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Payment_methodsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payouts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payouts.PayoutsRequestBuilder Payouts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Payouts.PayoutsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The plans property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Plans.PlansRequestBuilder Plans
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Plans.PlansRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The prices property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Prices.PricesRequestBuilder Prices
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Prices.PricesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsRequestBuilder Products
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The promotion_codes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Promotion_codes.Promotion_codesRequestBuilder Promotion_codes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Promotion_codes.Promotion_codesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The quotes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Quotes.QuotesRequestBuilder Quotes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Quotes.QuotesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The radar property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Radar.RadarRequestBuilder Radar
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Radar.RadarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refunds property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Refunds.RefundsRequestBuilder Refunds
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Refunds.RefundsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reporting property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Reporting.ReportingRequestBuilder Reporting
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Reporting.ReportingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reviews property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Reviews.ReviewsRequestBuilder Reviews
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Reviews.ReviewsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The setup_attempts property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_attempts.Setup_attemptsRequestBuilder Setup_attempts
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Setup_attempts.Setup_attemptsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The setup_intents property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Setup_intentsRequestBuilder Setup_intents
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Setup_intentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The shipping_rates property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesRequestBuilder Shipping_rates
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Shipping_rates.Shipping_ratesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sigma property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Sigma.SigmaRequestBuilder Sigma
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Sigma.SigmaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sources property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Sources.SourcesRequestBuilder Sources
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Sources.SourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscription_items property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsRequestBuilder Subscription_items
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_items.Subscription_itemsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscription_schedules property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscription_schedules.Subscription_schedulesRequestBuilder Subscription_schedules
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Subscription_schedules.Subscription_schedulesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscriptions property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.SubscriptionsRequestBuilder Subscriptions
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.SubscriptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tax property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax.TaxRequestBuilder Tax
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax.TaxRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tax_codes property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax_codes.Tax_codesRequestBuilder Tax_codes
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax_codes.Tax_codesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tax_ids property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax_ids.Tax_idsRequestBuilder Tax_ids
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax_ids.Tax_idsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tax_rates property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tax_rates.Tax_ratesRequestBuilder Tax_rates
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tax_rates.Tax_ratesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The terminal property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Terminal.TerminalRequestBuilder Terminal
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Terminal.TerminalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The test_helpers property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Test_helpersRequestBuilder Test_helpers
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Test_helpers.Test_helpersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tokens property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Tokens.TokensRequestBuilder Tokens
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Tokens.TokensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The topups property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Topups.TopupsRequestBuilder Topups
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Topups.TopupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transfers property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Transfers.TransfersRequestBuilder Transfers
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Transfers.TransfersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The treasury property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Treasury.TreasuryRequestBuilder Treasury
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Treasury.TreasuryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhook_endpoints property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Webhook_endpoints.Webhook_endpointsRequestBuilder Webhook_endpoints
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Webhook_endpoints.Webhook_endpointsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.V1RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V1RequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.V1RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V1RequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
