// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Credit_notes
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Credit_notesPostRequestBody_lines : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
        public int? Amount { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The invoice_line_item property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InvoiceLineItem { get; set; }
#nullable restore
#else
        public string InvoiceLineItem { get; set; }
#endif
        /// <summary>The quantity property</summary>
        public int? Quantity { get; set; }
        /// <summary>The tax_amounts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts? TaxAmounts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts TaxAmounts { get; set; }
#endif
        /// <summary>The tax_rates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates? TaxRates { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates TaxRates { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_type? Type { get; set; }
        /// <summary>The unit_amount property</summary>
        public int? UnitAmount { get; set; }
        /// <summary>The unit_amount_decimal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnitAmountDecimal { get; set; }
#nullable restore
#else
        public string UnitAmountDecimal { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines"/> and sets the default values.
        /// </summary>
        public Credit_notesPostRequestBody_lines()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "invoice_line_item", n => { InvoiceLineItem = n.GetStringValue(); } },
                { "quantity", n => { Quantity = n.GetIntValue(); } },
                { "tax_amounts", n => { TaxAmounts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts.CreateFromDiscriminatorValue); } },
                { "tax_rates", n => { TaxRates = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_type>(); } },
                { "unit_amount", n => { UnitAmount = n.GetIntValue(); } },
                { "unit_amount_decimal", n => { UnitAmountDecimal = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("invoice_line_item", InvoiceLineItem);
            writer.WriteIntValue("quantity", Quantity);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts>("tax_amounts", TaxAmounts);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates>("tax_rates", TaxRates);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_type>("type", Type);
            writer.WriteIntValue("unit_amount", UnitAmount);
            writer.WriteStringValue("unit_amount_decimal", UnitAmountDecimal);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Credit_notesPostRequestBody_lines_tax_amounts : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1>? CreditNotesPostRequestBodyLinesTaxAmountsMember1 { get; set; }
#nullable restore
#else
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1> CreditNotesPostRequestBodyLinesTaxAmountsMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_amounts();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1.CreateFromDiscriminatorValue)?.AsList() is List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1> creditNotesPostRequestBodyLinesTaxAmountsMember1Value)
                {
                    result.CreditNotesPostRequestBodyLinesTaxAmountsMember1 = creditNotesPostRequestBodyLinesTaxAmountsMember1Value;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(CreditNotesPostRequestBodyLinesTaxAmountsMember1 != null)
                {
                    writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines_tax_amountsMember1>(null, CreditNotesPostRequestBodyLinesTaxAmountsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Credit_notesPostRequestBody_lines_tax_rates : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? CreditNotesPostRequestBodyLinesTaxRatesString { get; set; }
#nullable restore
#else
            public string CreditNotesPostRequestBodyLinesTaxRatesString { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.Credit_notesPostRequestBody_lines_tax_rates();
                if(parseNode.GetStringValue() is string creditNotesPostRequestBodyLinesTaxRatesStringValue)
                {
                    result.CreditNotesPostRequestBodyLinesTaxRatesString = creditNotesPostRequestBodyLinesTaxRatesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(CreditNotesPostRequestBodyLinesTaxRatesString != null)
                {
                    writer.WriteStringValue(null, CreditNotesPostRequestBodyLinesTaxRatesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
