// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Item;
using Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Preview;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Credit_notes
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\credit_notes
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Credit_notesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The preview property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Preview.PreviewRequestBuilder Preview
        {
            get => new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Preview.PreviewRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the Soenneker.Stripe.OpenApiClient.v1.credit_notes.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Item.Credit_noteItemRequestBuilder"/></returns>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Item.Credit_noteItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("credit_note%2Did", position);
                return new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Item.Credit_noteItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Credit_notesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/credit_notes{?created*,customer*,ending_before*,expand*,invoice*,limit*,starting_after*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Credit_notesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/credit_notes{?created*,customer*,ending_before*,expand*,invoice*,limit*,starting_after*}", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Returns a list of credit notes.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetResponse"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetResponse?> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder.Credit_notesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetResponse> GetAsync(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder.Credit_notesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToGetRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetResponse>(requestInfo, global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Issue a credit note to adjust the amount of a finalized invoice. A credit note will first reduce the invoice’s &lt;code&gt;amount_remaining&lt;/code&gt; (and &lt;code&gt;amount_due&lt;/code&gt;), but not below zero.This amount is indicated by the credit note’s &lt;code&gt;pre_payment_amount&lt;/code&gt;. The excess amount is indicated by &lt;code&gt;post_payment_amount&lt;/code&gt;, and it can result in any combination of the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Refunds: create a new refund (using &lt;code&gt;refund_amount&lt;/code&gt;) or link existing refunds (using &lt;code&gt;refunds&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Customer balance credit: credit the customer’s balance (using &lt;code&gt;credit_amount&lt;/code&gt;) which will be automatically applied to their next invoice when it’s finalized.&lt;/li&gt;&lt;li&gt;Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using &lt;code&gt;out_of_band_amount&lt;/code&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The sum of refunds, customer balance credits, and outside of Stripe credits must equal the &lt;code&gt;post_payment_amount&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;You may issue multiple credit notes for an invoice. Each credit note may increment the invoice’s &lt;code&gt;pre_payment_credit_notes_amount&lt;/code&gt;,&lt;code&gt;post_payment_credit_notes_amount&lt;/code&gt;, or both, depending on the invoice’s &lt;code&gt;amount_remaining&lt;/code&gt; at the time of credit note creation.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Credit_note"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Credit_note?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Credit_note> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Credit_note>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Credit_note.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Returns a list of credit notes.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder.Credit_notesRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesGetRequestBody body, Action<RequestConfiguration<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder.Credit_notesRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// &lt;p&gt;Issue a credit note to adjust the amount of a finalized invoice. A credit note will first reduce the invoice’s &lt;code&gt;amount_remaining&lt;/code&gt; (and &lt;code&gt;amount_due&lt;/code&gt;), but not below zero.This amount is indicated by the credit note’s &lt;code&gt;pre_payment_amount&lt;/code&gt;. The excess amount is indicated by &lt;code&gt;post_payment_amount&lt;/code&gt;, and it can result in any combination of the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Refunds: create a new refund (using &lt;code&gt;refund_amount&lt;/code&gt;) or link existing refunds (using &lt;code&gt;refunds&lt;/code&gt;).&lt;/li&gt;&lt;li&gt;Customer balance credit: credit the customer’s balance (using &lt;code&gt;credit_amount&lt;/code&gt;) which will be automatically applied to their next invoice when it’s finalized.&lt;/li&gt;&lt;li&gt;Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using &lt;code&gt;out_of_band_amount&lt;/code&gt;).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The sum of refunds, customer balance credits, and outside of Stripe credits must equal the &lt;code&gt;post_payment_amount&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;You may issue multiple credit notes for an invoice. Each credit note may increment the invoice’s &lt;code&gt;pre_payment_credit_notes_amount&lt;/code&gt;,&lt;code&gt;post_payment_credit_notes_amount&lt;/code&gt;, or both, depending on the invoice’s &lt;code&gt;amount_remaining&lt;/code&gt; at the time of credit note creation.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// &lt;p&gt;Returns a list of credit notes.&lt;/p&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Credit_notesRequestBuilderGetQueryParameters 
        {
            /// <summary>Only return credit notes that were created during the given date interval.</summary>
            [QueryParameter("created")]
            public int? Created { get; set; }
            /// <summary>Only return credit notes for the customer specified by this customer ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("customer")]
            public string? Customer { get; set; }
#nullable restore
#else
            [QueryParameter("customer")]
            public string Customer { get; set; }
#endif
            /// <summary>A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("ending_before")]
            public string? EndingBefore { get; set; }
#nullable restore
#else
            [QueryParameter("ending_before")]
            public string EndingBefore { get; set; }
#endif
            /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Only return credit notes for the invoice specified by this invoice ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("invoice")]
            public string? Invoice { get; set; }
#nullable restore
#else
            [QueryParameter("invoice")]
            public string Invoice { get; set; }
#endif
            /// <summary>A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("starting_after")]
            public string? StartingAfter { get; set; }
#nullable restore
#else
            [QueryParameter("starting_after")]
            public string StartingAfter { get; set; }
#endif
        }
    }
}
#pragma warning restore CS0618
