// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Credit_notes
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Credit_notesPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The integer amount in cents (or local equivalent) representing the total amount of the credit note. One of `amount`, `lines`, or `shipping_cost` must be provided.</summary>
        public int? Amount { get; set; }
        /// <summary>The integer amount in cents (or local equivalent) representing the amount to credit the customer&apos;s balance, which will be automatically applied to their next invoice.</summary>
        public int? CreditAmount { get; set; }
        /// <summary>The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated &apos;Date of issue&apos; printed on the credit note PDF.</summary>
        public int? EffectiveAt { get; set; }
        /// <summary>Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_email_type? EmailType { get; set; }
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>ID of the invoice.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Invoice { get; set; }
#nullable restore
#else
        public string Invoice { get; set; }
#endif
        /// <summary>Line items that make up the credit note. One of `amount`, `lines`, or `shipping_cost` must be provided.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines>? Lines { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines> Lines { get; set; }
#endif
        /// <summary>The credit note&apos;s memo appears on the credit note PDF.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Memo { get; set; }
#nullable restore
#else
        public string Memo { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.</summary>
        public int? OutOfBandAmount { get; set; }
        /// <summary>Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_reason? Reason { get; set; }
        /// <summary>The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.</summary>
        public int? RefundAmount { get; set; }
        /// <summary>Refunds to link to this credit note.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_refunds>? Refunds { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_refunds> Refunds { get; set; }
#endif
        /// <summary>When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note. One of `amount`, `lines`, or `shipping_cost` must be provided.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_shipping_cost? ShippingCost { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_shipping_cost ShippingCost { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "credit_amount", n => { CreditAmount = n.GetIntValue(); } },
                { "effective_at", n => { EffectiveAt = n.GetIntValue(); } },
                { "email_type", n => { EmailType = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_email_type>(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "invoice", n => { Invoice = n.GetStringValue(); } },
                { "lines", n => { Lines = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines.CreateFromDiscriminatorValue)?.AsList(); } },
                { "memo", n => { Memo = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "out_of_band_amount", n => { OutOfBandAmount = n.GetIntValue(); } },
                { "reason", n => { Reason = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_reason>(); } },
                { "refund_amount", n => { RefundAmount = n.GetIntValue(); } },
                { "refunds", n => { Refunds = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_refunds>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_refunds.CreateFromDiscriminatorValue)?.AsList(); } },
                { "shipping_cost", n => { ShippingCost = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_shipping_cost>(global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_shipping_cost.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteIntValue("credit_amount", CreditAmount);
            writer.WriteIntValue("effective_at", EffectiveAt);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_email_type>("email_type", EmailType);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteStringValue("invoice", Invoice);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_lines>("lines", Lines);
            writer.WriteStringValue("memo", Memo);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteIntValue("out_of_band_amount", OutOfBandAmount);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_reason>("reason", Reason);
            writer.WriteIntValue("refund_amount", RefundAmount);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_refunds>("refunds", Refunds);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Credit_notes.Credit_notesPostRequestBody_shipping_cost>("shipping_cost", ShippingCost);
        }
    }
}
#pragma warning restore CS0618
