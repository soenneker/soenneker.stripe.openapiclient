// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConfirmPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The client secret of the SetupIntent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientSecret { get; set; }
#nullable restore
#else
        public string ClientSecret { get; set; }
#endif
        /// <summary>ID of the ConfirmationToken used to confirm this SetupIntent.If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConfirmationToken { get; set; }
#nullable restore
#else
        public string ConfirmationToken { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>The mandate_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data? MandateData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data MandateData { get; set; }
#endif
        /// <summary>ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PaymentMethod { get; set; }
#nullable restore
#else
        public string PaymentMethod { get; set; }
#endif
        /// <summary>When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)value in the SetupIntent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_data? PaymentMethodData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_data PaymentMethodData { get; set; }
#endif
        /// <summary>Payment method-specific configuration for this SetupIntent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options? PaymentMethodOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options PaymentMethodOptions { get; set; }
#endif
        /// <summary>The URL to redirect your customer back to after they authenticate on the payment method&apos;s app or site.If you&apos;d prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.This parameter is only used for cards and other redirect-based payment methods.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnUrl { get; set; }
#nullable restore
#else
        public string ReturnUrl { get; set; }
#endif
        /// <summary>Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.</summary>
        public bool? UseStripeSdk { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "client_secret", n => { ClientSecret = n.GetStringValue(); } },
                { "confirmation_token", n => { ConfirmationToken = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "mandate_data", n => { MandateData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data>(global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data.CreateFromDiscriminatorValue); } },
                { "payment_method", n => { PaymentMethod = n.GetStringValue(); } },
                { "payment_method_data", n => { PaymentMethodData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_data>(global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_data.CreateFromDiscriminatorValue); } },
                { "payment_method_options", n => { PaymentMethodOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options>(global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options.CreateFromDiscriminatorValue); } },
                { "return_url", n => { ReturnUrl = n.GetStringValue(); } },
                { "use_stripe_sdk", n => { UseStripeSdk = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("client_secret", ClientSecret);
            writer.WriteStringValue("confirmation_token", ConfirmationToken);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data>("mandate_data", MandateData);
            writer.WriteStringValue("payment_method", PaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_data>("payment_method_data", PaymentMethodData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options>("payment_method_options", PaymentMethodOptions);
            writer.WriteStringValue("return_url", ReturnUrl);
            writer.WriteBoolValue("use_stripe_sdk", UseStripeSdk);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1"/>, <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember2"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConfirmPostRequestBody_mandate_data : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1? ConfirmPostRequestBodyMandateDataMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1 ConfirmPostRequestBodyMandateDataMember1 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember2"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember2? ConfirmPostRequestBodyMandateDataMember2 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember2 ConfirmPostRequestBodyMandateDataMember2 { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody.ConfirmPostRequestBody_mandate_data();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.ConfirmPostRequestBodyMandateDataMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1();
                    result.ConfirmPostRequestBodyMandateDataMember2 = new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember2();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ConfirmPostRequestBodyMandateDataMember1 != null || ConfirmPostRequestBodyMandateDataMember2 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ConfirmPostRequestBodyMandateDataMember1, ConfirmPostRequestBodyMandateDataMember2);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_mandate_dataMember1>(null, ConfirmPostRequestBodyMandateDataMember1, ConfirmPostRequestBodyMandateDataMember2);
                }
            }
        }
    }
}
#pragma warning restore CS0618
