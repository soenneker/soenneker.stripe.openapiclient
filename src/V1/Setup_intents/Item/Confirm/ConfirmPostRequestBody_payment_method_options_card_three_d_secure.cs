// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConfirmPostRequestBody_payment_method_options_card_three_d_secure : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The ares_trans_status property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_ares_trans_status? AresTransStatus { get; set; }
        /// <summary>The cryptogram property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cryptogram { get; set; }
#nullable restore
#else
        public string Cryptogram { get; set; }
#endif
        /// <summary>The electronic_commerce_indicator property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_electronic_commerce_indicator? ElectronicCommerceIndicator { get; set; }
        /// <summary>The network_options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_network_options? NetworkOptions { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_network_options NetworkOptions { get; set; }
#endif
        /// <summary>The requestor_challenge_indicator property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestorChallengeIndicator { get; set; }
#nullable restore
#else
        public string RequestorChallengeIndicator { get; set; }
#endif
        /// <summary>The transaction_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransactionId { get; set; }
#nullable restore
#else
        public string TransactionId { get; set; }
#endif
        /// <summary>The version property</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_version? Version { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure"/> and sets the default values.
        /// </summary>
        public ConfirmPostRequestBody_payment_method_options_card_three_d_secure()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ares_trans_status", n => { AresTransStatus = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_ares_trans_status>(); } },
                { "cryptogram", n => { Cryptogram = n.GetStringValue(); } },
                { "electronic_commerce_indicator", n => { ElectronicCommerceIndicator = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_electronic_commerce_indicator>(); } },
                { "network_options", n => { NetworkOptions = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_network_options>(global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_network_options.CreateFromDiscriminatorValue); } },
                { "requestor_challenge_indicator", n => { RequestorChallengeIndicator = n.GetStringValue(); } },
                { "transaction_id", n => { TransactionId = n.GetStringValue(); } },
                { "version", n => { Version = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_version>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_ares_trans_status>("ares_trans_status", AresTransStatus);
            writer.WriteStringValue("cryptogram", Cryptogram);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_electronic_commerce_indicator>("electronic_commerce_indicator", ElectronicCommerceIndicator);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_network_options>("network_options", NetworkOptions);
            writer.WriteStringValue("requestor_challenge_indicator", RequestorChallengeIndicator);
            writer.WriteStringValue("transaction_id", TransactionId);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Setup_intents.Item.Confirm.ConfirmPostRequestBody_payment_method_options_card_three_d_secure_version>("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
