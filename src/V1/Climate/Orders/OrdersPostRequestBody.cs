// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Climate.Orders
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OrdersPostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Requested amount of carbon removal units. Either this or `metric_tons` must be specified.</summary>
        public int? Amount { get; set; }
        /// <summary>Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_beneficiary? Beneficiary { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_beneficiary Beneficiary { get; set; }
#endif
        /// <summary>Request currency for the order as a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a supported [settlement currency for your account](https://stripe.com/docs/currencies). If omitted, the account&apos;s default currency will be used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_metadata Metadata { get; set; }
#endif
        /// <summary>Requested number of tons for the order. Either this or `amount` must be specified.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MetricTons { get; set; }
#nullable restore
#else
        public string MetricTons { get; set; }
#endif
        /// <summary>Unique identifier of the Climate product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Product { get; set; }
#nullable restore
#else
        public string Product { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetIntValue(); } },
                { "beneficiary", n => { Beneficiary = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_beneficiary>(global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_beneficiary.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_metadata>(global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_metadata.CreateFromDiscriminatorValue); } },
                { "metric_tons", n => { MetricTons = n.GetStringValue(); } },
                { "product", n => { Product = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("amount", Amount);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_beneficiary>("beneficiary", Beneficiary);
            writer.WriteStringValue("currency", Currency);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Climate.Orders.OrdersPostRequestBody_metadata>("metadata", Metadata);
            writer.WriteStringValue("metric_tons", MetricTons);
            writer.WriteStringValue("product", Product);
        }
    }
}
#pragma warning restore CS0618
