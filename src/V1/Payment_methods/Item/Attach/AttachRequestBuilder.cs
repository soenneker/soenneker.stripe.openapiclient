// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Stripe.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\payment_methods\{payment_method}\attach
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AttachRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AttachRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/payment_methods/{payment_method}/attach", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AttachRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/payment_methods/{payment_method}/attach", rawUrl)
        {
        }
        /// <summary>
        /// &lt;p&gt;Attaches a PaymentMethod object to a Customer.&lt;/p&gt;&lt;p&gt;To attach a new PaymentMethod to a customer for future payments, we recommend you use a &lt;a href=&quot;/docs/api/setup_intents&quot;&gt;SetupIntent&lt;/a&gt;or a PaymentIntent with &lt;a href=&quot;/docs/api/payment_intents/create#create_payment_intent-setup_future_usage&quot;&gt;setup_future_usage&lt;/a&gt;.These approaches will perform any necessary steps to set up the PaymentMethod for future payments. Using the &lt;code&gt;/v1/payment_methods/:id/attach&lt;/code&gt;endpoint without first using a SetupIntent or PaymentIntent with &lt;code&gt;setup_future_usage&lt;/code&gt; does not optimize the PaymentMethod forfuture use, which makes later declines and payment friction more likely.See &lt;a href=&quot;/docs/payments/payment-intents#future-usage&quot;&gt;Optimizing cards for future payments&lt;/a&gt; for more information about setting upfuture payments.&lt;/p&gt;&lt;p&gt;To use this PaymentMethod as the default for invoice or subscription payments,set &lt;a href=&quot;/docs/api/customers/update#update_customer-invoice_settings-default_payment_method&quot;&gt;&lt;code&gt;invoice_settings.default_payment_method&lt;/code&gt;&lt;/a&gt;,on the Customer to the PaymentMethod’s ID.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.Models.Payment_method"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Stripe.OpenApiClient.Models.Error">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method?> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method> PostAsync(global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Soenneker.Stripe.OpenApiClient.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Stripe.OpenApiClient.Models.Payment_method>(requestInfo, global::Soenneker.Stripe.OpenApiClient.Models.Payment_method.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// &lt;p&gt;Attaches a PaymentMethod object to a Customer.&lt;/p&gt;&lt;p&gt;To attach a new PaymentMethod to a customer for future payments, we recommend you use a &lt;a href=&quot;/docs/api/setup_intents&quot;&gt;SetupIntent&lt;/a&gt;or a PaymentIntent with &lt;a href=&quot;/docs/api/payment_intents/create#create_payment_intent-setup_future_usage&quot;&gt;setup_future_usage&lt;/a&gt;.These approaches will perform any necessary steps to set up the PaymentMethod for future payments. Using the &lt;code&gt;/v1/payment_methods/:id/attach&lt;/code&gt;endpoint without first using a SetupIntent or PaymentIntent with &lt;code&gt;setup_future_usage&lt;/code&gt; does not optimize the PaymentMethod forfuture use, which makes later declines and payment friction more likely.See &lt;a href=&quot;/docs/payments/payment-intents#future-usage&quot;&gt;Optimizing cards for future payments&lt;/a&gt; for more information about setting upfuture payments.&lt;/p&gt;&lt;p&gt;To use this PaymentMethod as the default for invoice or subscription payments,set &lt;a href=&quot;/docs/api/customers/update#update_customer-invoice_settings-default_payment_method&quot;&gt;&lt;code&gt;invoice_settings.default_payment_method&lt;/code&gt;&lt;/a&gt;,on the Customer to the PaymentMethod’s ID.&lt;/p&gt;
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachPostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Stripe.OpenApiClient.V1.Payment_methods.Item.Attach.AttachRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
