// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Subscriptions
{
    /// <summary>Only applies to subscriptions with `collection_method=charge_automatically`.Use `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can&apos;t be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription&apos;s invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscriptionâ€™s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription&apos;s first invoice can&apos;t be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn&apos;t create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.`pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum SubscriptionsPostRequestBody_payment_behavior
    {
        [EnumMember(Value = "allow_incomplete")]
        #pragma warning disable CS1591
        Allow_incomplete,
        #pragma warning restore CS1591
        [EnumMember(Value = "default_incomplete")]
        #pragma warning disable CS1591
        Default_incomplete,
        #pragma warning restore CS1591
        [EnumMember(Value = "error_if_incomplete")]
        #pragma warning disable CS1591
        Error_if_incomplete,
        #pragma warning restore CS1591
        [EnumMember(Value = "pending_if_incomplete")]
        #pragma warning disable CS1591
        Pending_if_incomplete,
        #pragma warning restore CS1591
    }
}
