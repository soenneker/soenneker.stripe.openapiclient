// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Subscription_exposed_PostRequestBody : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_add_invoice_items>? AddInvoiceItems { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_add_invoice_items> AddInvoiceItems { get; set; }
#endif
        /// <summary>A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner&apos;s Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent? ApplicationFeePercent { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent ApplicationFeePercent { get; set; }
#endif
        /// <summary>Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_automatic_tax? AutomaticTax { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_automatic_tax AutomaticTax { get; set; }
#endif
        /// <summary>Either `now` or `unchanged`. Setting the value to `now` resets the subscription&apos;s billing cycle anchor to the current time (in UTC). For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_cycle_anchor? BillingCycleAnchor { get; set; }
        /// <summary>Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds? BillingThresholds { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds BillingThresholds { get; set; }
#endif
        /// <summary>A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at? CancelAt { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at CancelAt { get; set; }
#endif
        /// <summary>Indicate whether this subscription should cancel at the end of the current period (`current_period_end`). Defaults to `false`.</summary>
        public bool? CancelAtPeriodEnd { get; set; }
        /// <summary>Details about why this subscription was cancelled</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_cancellation_details? CancellationDetails { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_cancellation_details CancellationDetails { get; set; }
#endif
        /// <summary>Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_collection_method? CollectionMethod { get; set; }
        /// <summary>Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.</summary>
        public int? DaysUntilDue { get; set; }
        /// <summary>ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer&apos;s [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultPaymentMethod { get; set; }
#nullable restore
#else
        public string DefaultPaymentMethod { get; set; }
#endif
        /// <summary>ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer&apos;s [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source? DefaultSource { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source DefaultSource { get; set; }
#endif
        /// <summary>The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates? DefaultTaxRates { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates DefaultTaxRates { get; set; }
#endif
        /// <summary>The subscription&apos;s description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description? Description { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description Description { get; set; }
#endif
        /// <summary>The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription&apos;s customer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts? Discounts { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts Discounts { get; set; }
#endif
        /// <summary>Specifies which fields in the response should be expanded.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Expand { get; set; }
#nullable restore
#else
        public List<string> Expand { get; set; }
#endif
        /// <summary>All invoices will be billed using the specified settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_invoice_settings? InvoiceSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_invoice_settings InvoiceSettings { get; set; }
#endif
        /// <summary>A list of up to 20 subscription items, each with an attached price.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_items>? Items { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_items> Items { get; set; }
#endif
        /// <summary>Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metadata { get; set; }
#nullable restore
#else
        public string Metadata { get; set; }
#endif
        /// <summary>Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `false` (on-session).</summary>
        public bool? OffSession { get; set; }
        /// <summary>The account on behalf of which to charge, for each of the subscription&apos;s invoices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of? OnBehalfOf { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of OnBehalfOf { get; set; }
#endif
        /// <summary>If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](https://stripe.com/docs/billing/subscriptions/pause-payment).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection? PauseCollection { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection PauseCollection { get; set; }
#endif
        /// <summary>Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription&apos;s invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice&apos;s payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription&apos;s invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://docs.stripe.com/changelog/2019-03-14) to learn more.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_behavior? PaymentBehavior { get; set; }
        /// <summary>Payment settings to pass to invoices created by the subscription.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_settings? PaymentSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_settings PaymentSettings { get; set; }
#endif
        /// <summary>Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval? PendingInvoiceItemInterval { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval PendingInvoiceItemInterval { get; set; }
#endif
        /// <summary>Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item&apos;s `quantity` changes. The default value is `create_prorations`.</summary>
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_proration_behavior? ProrationBehavior { get; set; }
        /// <summary>If set, prorations will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same prorations that were previewed with the [create preview](https://stripe.com/docs/api/invoices/create_preview) endpoint. `proration_date` can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.</summary>
        public int? ProrationDate { get; set; }
        /// <summary>If specified, the funds from the subscription&apos;s invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data? TransferData { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data TransferData { get; set; }
#endif
        /// <summary>Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, `trial_end` will override the default trial period of the plan the customer is being subscribed to. The `billing_cycle_anchor` will be updated to the `trial_end` value. The special value `now` can be provided to end the customer&apos;s trial immediately. Can be at most two years from `billing_cycle_anchor`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end? TrialEnd { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end TrialEnd { get; set; }
#endif
        /// <summary>Indicates if a plan&apos;s `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.</summary>
        public bool? TrialFromPlan { get; set; }
        /// <summary>Settings related to subscription trials.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_trial_settings? TrialSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_trial_settings TrialSettings { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "add_invoice_items", n => { AddInvoiceItems = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_add_invoice_items>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_add_invoice_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "application_fee_percent", n => { ApplicationFeePercent = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent.CreateFromDiscriminatorValue); } },
                { "automatic_tax", n => { AutomaticTax = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_automatic_tax>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_automatic_tax.CreateFromDiscriminatorValue); } },
                { "billing_cycle_anchor", n => { BillingCycleAnchor = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_cycle_anchor>(); } },
                { "billing_thresholds", n => { BillingThresholds = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds.CreateFromDiscriminatorValue); } },
                { "cancel_at", n => { CancelAt = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at.CreateFromDiscriminatorValue); } },
                { "cancel_at_period_end", n => { CancelAtPeriodEnd = n.GetBoolValue(); } },
                { "cancellation_details", n => { CancellationDetails = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_cancellation_details>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_cancellation_details.CreateFromDiscriminatorValue); } },
                { "collection_method", n => { CollectionMethod = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_collection_method>(); } },
                { "days_until_due", n => { DaysUntilDue = n.GetIntValue(); } },
                { "default_payment_method", n => { DefaultPaymentMethod = n.GetStringValue(); } },
                { "default_source", n => { DefaultSource = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source.CreateFromDiscriminatorValue); } },
                { "default_tax_rates", n => { DefaultTaxRates = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description.CreateFromDiscriminatorValue); } },
                { "discounts", n => { Discounts = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts.CreateFromDiscriminatorValue); } },
                { "expand", n => { Expand = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "invoice_settings", n => { InvoiceSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_invoice_settings>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_invoice_settings.CreateFromDiscriminatorValue); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_items>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_items.CreateFromDiscriminatorValue)?.AsList(); } },
                { "metadata", n => { Metadata = n.GetStringValue(); } },
                { "off_session", n => { OffSession = n.GetBoolValue(); } },
                { "on_behalf_of", n => { OnBehalfOf = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of.CreateFromDiscriminatorValue); } },
                { "pause_collection", n => { PauseCollection = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection.CreateFromDiscriminatorValue); } },
                { "payment_behavior", n => { PaymentBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_behavior>(); } },
                { "payment_settings", n => { PaymentSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_settings>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_settings.CreateFromDiscriminatorValue); } },
                { "pending_invoice_item_interval", n => { PendingInvoiceItemInterval = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval.CreateFromDiscriminatorValue); } },
                { "proration_behavior", n => { ProrationBehavior = n.GetEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_proration_behavior>(); } },
                { "proration_date", n => { ProrationDate = n.GetIntValue(); } },
                { "transfer_data", n => { TransferData = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data.CreateFromDiscriminatorValue); } },
                { "trial_end", n => { TrialEnd = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end.CreateFromDiscriminatorValue); } },
                { "trial_from_plan", n => { TrialFromPlan = n.GetBoolValue(); } },
                { "trial_settings", n => { TrialSettings = n.GetObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_trial_settings>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_trial_settings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_add_invoice_items>("add_invoice_items", AddInvoiceItems);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent>("application_fee_percent", ApplicationFeePercent);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_automatic_tax>("automatic_tax", AutomaticTax);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_cycle_anchor>("billing_cycle_anchor", BillingCycleAnchor);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds>("billing_thresholds", BillingThresholds);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at>("cancel_at", CancelAt);
            writer.WriteBoolValue("cancel_at_period_end", CancelAtPeriodEnd);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_cancellation_details>("cancellation_details", CancellationDetails);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_collection_method>("collection_method", CollectionMethod);
            writer.WriteIntValue("days_until_due", DaysUntilDue);
            writer.WriteStringValue("default_payment_method", DefaultPaymentMethod);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source>("default_source", DefaultSource);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates>("default_tax_rates", DefaultTaxRates);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description>("description", Description);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts>("discounts", Discounts);
            writer.WriteCollectionOfPrimitiveValues<string>("expand", Expand);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_invoice_settings>("invoice_settings", InvoiceSettings);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_items>("items", Items);
            writer.WriteStringValue("metadata", Metadata);
            writer.WriteBoolValue("off_session", OffSession);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of>("on_behalf_of", OnBehalfOf);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection>("pause_collection", PauseCollection);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_behavior>("payment_behavior", PaymentBehavior);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_payment_settings>("payment_settings", PaymentSettings);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval>("pending_invoice_item_interval", PendingInvoiceItemInterval);
            writer.WriteEnumValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_proration_behavior>("proration_behavior", ProrationBehavior);
            writer.WriteIntValue("proration_date", ProrationDate);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data>("transfer_data", TransferData);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end>("trial_end", TrialEnd);
            writer.WriteBoolValue("trial_from_plan", TrialFromPlan);
            writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_trial_settings>("trial_settings", TrialSettings);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="double"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_application_fee_percent : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="double"/></summary>
            public double? Double { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_application_fee_percent();
                if(parseNode.GetDoubleValue() is double doubleValue)
                {
                    result.Double = doubleValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Double != null)
                {
                    writer.WriteDoubleValue(null, Double);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_billing_thresholds : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1? SubscriptionExposedPostRequestBodyBillingThresholdsMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1 SubscriptionExposedPostRequestBodyBillingThresholdsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_billing_thresholds();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionExposedPostRequestBodyBillingThresholdsMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionExposedPostRequestBodyBillingThresholdsMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionExposedPostRequestBodyBillingThresholdsMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_billing_thresholdsMember1>(null, SubscriptionExposedPostRequestBodyBillingThresholdsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_cancel_at : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_cancel_at();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_default_source : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_source();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;string&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_default_tax_rates : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type List&lt;string&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<string>? String { get; set; }
#nullable restore
#else
            public List<string> String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? SubscriptionExposedPostRequestBodyDefaultTaxRatesString { get; set; }
#nullable restore
#else
            public string SubscriptionExposedPostRequestBodyDefaultTaxRatesString { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_default_tax_rates();
                if(parseNode.GetStringValue() is string subscriptionExposedPostRequestBodyDefaultTaxRatesStringValue)
                {
                    result.SubscriptionExposedPostRequestBodyDefaultTaxRatesString = subscriptionExposedPostRequestBodyDefaultTaxRatesStringValue;
                }
                else if(parseNode.GetCollectionOfPrimitiveValues<string>()?.AsList() is List<string> stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(SubscriptionExposedPostRequestBodyDefaultTaxRatesString != null)
                {
                    writer.WriteStringValue(null, SubscriptionExposedPostRequestBodyDefaultTaxRatesString);
                }
                else if(String != null)
                {
                    writer.WriteCollectionOfPrimitiveValues<string>(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_description : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_description();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>, List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1&gt;
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_discounts : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type List&lt;global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1&gt;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1>? SubscriptionExposedPostRequestBodyDiscountsMember1 { get; set; }
#nullable restore
#else
            public List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1> SubscriptionExposedPostRequestBodyDiscountsMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_discounts();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else if(parseNode.GetCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1>(global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1.CreateFromDiscriminatorValue)?.AsList() is List<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1> subscriptionExposedPostRequestBodyDiscountsMember1Value)
                {
                    result.SubscriptionExposedPostRequestBodyDiscountsMember1 = subscriptionExposedPostRequestBodyDiscountsMember1Value;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else if(SubscriptionExposedPostRequestBodyDiscountsMember1 != null)
                {
                    writer.WriteCollectionOfObjectValues<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_discountsMember1>(null, SubscriptionExposedPostRequestBodyDiscountsMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_on_behalf_of : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_on_behalf_of();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_pause_collection : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1? SubscriptionExposedPostRequestBodyPauseCollectionMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1 SubscriptionExposedPostRequestBodyPauseCollectionMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pause_collection();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionExposedPostRequestBodyPauseCollectionMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionExposedPostRequestBodyPauseCollectionMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionExposedPostRequestBodyPauseCollectionMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pause_collectionMember1>(null, SubscriptionExposedPostRequestBodyPauseCollectionMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_pending_invoice_item_interval : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1? SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1 SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_pending_invoice_item_interval();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_pending_invoice_item_intervalMember1>(null, SubscriptionExposedPostRequestBodyPendingInvoiceItemIntervalMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_transfer_data : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1? SubscriptionExposedPostRequestBodyTransferDataMember1 { get; set; }
#nullable restore
#else
            public global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1 SubscriptionExposedPostRequestBodyTransferDataMember1 { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_transfer_data();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                else {
                    result.SubscriptionExposedPostRequestBodyTransferDataMember1 = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SubscriptionExposedPostRequestBodyTransferDataMember1 != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(SubscriptionExposedPostRequestBodyTransferDataMember1);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
                else {
                    writer.WriteObjectValue<global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody_transfer_dataMember1>(null, SubscriptionExposedPostRequestBodyTransferDataMember1);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Subscription_exposed_PostRequestBody_trial_end : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Soenneker.Stripe.OpenApiClient.V1.Subscriptions.Item.Subscription_exposed_PostRequestBody.Subscription_exposed_PostRequestBody_trial_end();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
